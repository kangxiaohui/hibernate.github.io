<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>神秘的小胖纸</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-17T15:08:39.126Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kang Xiaohui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>英语语法之主从复合句2</title>
    <link href="http://yoursite.com/2020/03/17/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E4%B9%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%90%88%E5%8F%A52/"/>
    <id>http://yoursite.com/2020/03/17/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E4%B9%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%90%88%E5%8F%A52/</id>
    <published>2020-03-17T12:53:55.000Z</published>
    <updated>2020-03-17T15:08:39.126Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="同位语从句"><a href="#同位语从句" class="headerlink" title="同位语从句"></a>同位语从句</h2><ol><li>In the long run, there is no doubt that everyone would be much better-off if smoking were banned altogether.—&gt;从长远来看，毫无疑问如果吸烟被禁止每个人将会变得更好<ol><li>in the long run 从长远来看</li><li>run n.态势，趋势，类</li><li>the common run of 普通类别</li><li>better-off 更好的</li><li>ban=forbid=prohibit</li><li>altigether=totally</li></ol></li><li>However, the conventional view that education should be one of the very highest priorities for promoting rapid economic development in poor countries is wrong.—&gt;然而，传统的观点，教育对于促进经济快速发展应该是有最高优先权之一的，而这种观点在贫穷国家是错误的<ol><li>conventional=traditional 传统的</li><li>priority n.优先权</li><li>prior a.优先的</li><li>promote v.促进，推进</li></ol></li><li>Yet the fact remains that the merger movement must be watched.—&gt;然而事实就是合并动作必须被关注<ol><li>ramain 保持，剩下来</li><li>watch v.关注</li></ol></li><li>When reports came into London zoo that a wild puma had been spotted forty-five miles south of London, they were not taken seriously.—&gt;当伦敦动物园接到报告说，在伦敦以南45英里处发现一只美洲狮时，它们并没有受到重视<ol><li>spot n.斑点污点，在现场 v.发现</li><li>tourist spot 旅游景点</li><li>on the spot 当下，立场；在现场</li><li>take serious 认真对待</li></ol></li></ol><a id="more"></a><h2 id="定语从句"><a href="#定语从句" class="headerlink" title="定语从句"></a>定语从句</h2><h3 id="只用that不用which"><a href="#只用that不用which" class="headerlink" title="只用that不用which"></a>只用that不用which</h3><ol><li>先行词被序数词修饰时，或被最高级修饰时；</li><li>先行词有人又有物；</li><li>先行词有一定的定冠词：The only，the same，the last， the one等词时；</li><li>先行词是：something，anything，nothing，none，nobody，little，much，all等补丁代词时；</li><li>主句中已有who/which时，为避免重复用that；</li></ol><h3 id="只用which不用that"><a href="#只用which不用that" class="headerlink" title="只用which不用that"></a>只用which不用that</h3><ol><li>先行词后有介词。</li><li>非限定性定语从句。</li><li>those+复数名词用which</li><li>先行词本身是that，后用which</li></ol><h3 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h3><ol><li>School remains a place where intellect is mistrusted.—&gt;学校是一个知识分子不被信任的地方<ol><li>intellect n.知识分子</li><li>intelligence n.智商</li><li>intelligent a.聪明的</li></ol></li><li>During the past generation, the American middle-class family that once could count on hard work and fair play to keep itself financially secure has been transformed by economic risk and new realities.—&gt;在过去的几十年里，美国的中产阶级家庭曾经依靠努力工作和公平竞争来保证自己的财务安全，但现在经济风险和新的现实已经改变了这种状况。<ol><li>generation n.一代人，产生</li><li>transform v.改变，转变</li></ol></li><li>The other reason why costs are so high is the restrictive guild-like ownership structure of the business.—&gt;<br> 1. </li><li>Large numbers of physicians seem unconcerned with the pain their patients are needlessly and predictably suffering.—&gt;<br> 1. </li><li>But the regular time it takes to get a doctoral degree in the humanities is nine years.—&gt;<br> 1. </li><li>The Greeks assumed that the structure of language had some connection with the process of thought, which took root in Europe long before people realized how diverse languages could be.—&gt;<br> 1. </li><li>Many consumers seem to have been influenced by stock-market swings, which investors now view as a necessary ingredient to a sustained boom.—&gt;<br> 1. </li><li>As Nature has pointed out before, there are some legitimate concerns about how science prizes—both new and old—are distributed.—&gt;<br> 1. </li><li>This trend began during the Second World War, when several governments came to the conclusion that the specific demands that a government wants to make of its scientific establishment cannot generally be foreseen in detail.—&gt;<br> 1. </li><li>Because the ultimate stakeholders are patients, the health research community should actively recruit to its cause not only well-known personalities such as Stephen Cooper, who has made courageous statements about the value of animal research, but all who receive medical treatment.—&gt;<br>1. </li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;同位语从句&quot;&gt;&lt;a href=&quot;#同位语从句&quot; class=&quot;headerlink&quot; title=&quot;同位语从句&quot;&gt;&lt;/a&gt;同位语从句&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;In the long run, there is no doubt that everyone would be much better-off if smoking were banned altogether.—&amp;gt;从长远来看，毫无疑问如果吸烟被禁止每个人将会变得更好&lt;ol&gt;
&lt;li&gt;in the long run 从长远来看&lt;/li&gt;
&lt;li&gt;run n.态势，趋势，类&lt;/li&gt;
&lt;li&gt;the common run of 普通类别&lt;/li&gt;
&lt;li&gt;better-off 更好的&lt;/li&gt;
&lt;li&gt;ban=forbid=prohibit&lt;/li&gt;
&lt;li&gt;altigether=totally&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;However, the conventional view that education should be one of the very highest priorities for promoting rapid economic development in poor countries is wrong.—&amp;gt;然而，传统的观点，教育对于促进经济快速发展应该是有最高优先权之一的，而这种观点在贫穷国家是错误的&lt;ol&gt;
&lt;li&gt;conventional=traditional 传统的&lt;/li&gt;
&lt;li&gt;priority n.优先权&lt;/li&gt;
&lt;li&gt;prior a.优先的&lt;/li&gt;
&lt;li&gt;promote v.促进，推进&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Yet the fact remains that the merger movement must be watched.—&amp;gt;然而事实就是合并动作必须被关注&lt;ol&gt;
&lt;li&gt;ramain 保持，剩下来&lt;/li&gt;
&lt;li&gt;watch v.关注&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;When reports came into London zoo that a wild puma had been spotted forty-five miles south of London, they were not taken seriously.—&amp;gt;当伦敦动物园接到报告说，在伦敦以南45英里处发现一只美洲狮时，它们并没有受到重视&lt;ol&gt;
&lt;li&gt;spot n.斑点污点，在现场 v.发现&lt;/li&gt;
&lt;li&gt;tourist spot 旅游景点&lt;/li&gt;
&lt;li&gt;on the spot 当下，立场；在现场&lt;/li&gt;
&lt;li&gt;take serious 认真对待&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>1-Mybatis框架</title>
    <link href="http://yoursite.com/2020/03/17/1-Mybatis%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2020/03/17/1-Mybatis%E6%A1%86%E6%9E%B6/</id>
    <published>2020-03-17T03:22:59.000Z</published>
    <updated>2020-03-17T03:50:15.747Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Mybatis使用流程"><a href="#Mybatis使用流程" class="headerlink" title="Mybatis使用流程"></a>Mybatis使用流程</h2><ol><li>导入jar包</li><li>编写mybatis主配置文件xml</li><li>创建实体类和映射接口（注意是接口）</li><li>编写mybatis的sql映射文件</li><li>主配置文件与SQL映射文件相关联</li><li>进行编码</li></ol><a id="more"></a><h2 id="MyBatis主配置文件"><a href="#MyBatis主配置文件" class="headerlink" title="MyBatis主配置文件"></a>MyBatis主配置文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 通用设置：延迟加载、缓存、日志显示方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 输出SQL语句，STDOUT_LOGGING控制台显示 --&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- logImpl设置用来指定 MyBatis 所用日志的具体实现，未指定时将自动查找 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"STDOUT_LOGGING"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 数据库环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 数据库事务的管理方式和连接数据库参数 --&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- JDBC这种方式是直接使用了JDBC的事务提交和回滚设置 --&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- MANAGED(托管)让容器来管理事务的整个生命周期(比如 Spring) --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- POOLED：这是JDBC连接对象的数据库连接池的实现,用来避免创建新的连接实例 --&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- UNPOOLED: 每次被请求时简单打开和关闭连接 --&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- JNDI：这个数据源的实现是为了使用如Spring或应用服务器这类的容器 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_demo?characterEncoding=utf-8"</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 添加映射文件位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加单个映射文件 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;mapper resource="net/onest/mapper/UserMapper.xml"/&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用映射器接口的完全限定类名 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;mapper class="org.mybatis.builder.AuthorMapper"/&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加整个包中的映射文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"net.onest.mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="MyBatis主要的类层次结构"><a href="#MyBatis主要的类层次结构" class="headerlink" title="MyBatis主要的类层次结构"></a>MyBatis主要的类层次结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory factory;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">InputStream is =</span><br><span class="line">Resources.getResourceAsStream(<span class="string">"mybatis.xml"</span>);</span><br><span class="line">factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(is);</span><br><span class="line">is.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">openSqlSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> factory.openSession();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MyBatis映射文件"><a href="#MyBatis映射文件" class="headerlink" title="MyBatis映射文件"></a>MyBatis映射文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- namespace:映射器接口的完全限定名,方法为：insert，update，delete，select --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"net.onest.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 结果映射 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"net.onest.entity.User"</span> <span class="attr">id</span>=<span class="string">"userMap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_name"</span> <span class="attr">property</span>=<span class="string">"userName"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"password"</span> <span class="attr">property</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 映射select语句 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- resultType是映射的类 ， resultMap 必须在上面声明映射结果--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;select id="findAllUsers"  resultType="net.onest.entity.User"&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAllUsers"</span>  <span class="attr">resultMap</span>=<span class="string">"userMap"</span>&gt;</span></span><br><span class="line">           select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 插入操作 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- useGeneratedKeys和keyProperties属性，用来获取数据库中的主键的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertUser"</span> <span class="attr">parameterType</span>=<span class="string">"net.onest.entity.User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">        insert into user(id, user_name, password)</span><br><span class="line">        values(#&#123;id&#125;, #&#123;userName&#125;, #&#123;password&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="映射器接口类-实体User类"><a href="#映射器接口类-实体User类" class="headerlink" title="映射器接口类,实体User类"></a>映射器接口类,实体User类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.onest.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.onest.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAllUsers</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.onest.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String userName;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.onest.ui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.onest.entity.User;</span><br><span class="line"><span class="keyword">import</span> net.onest.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> net.onest.util.MyBatisUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一种方式（传统方式）</span></span><br><span class="line"><span class="comment">//打开SqlSession</span></span><br><span class="line"><span class="comment">//SqlSession sqlSession = MyBatisUtil.openSqlSession();</span></span><br><span class="line"><span class="comment">////参数为映射文件中的namespace+id</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//User user = new User();</span></span><br><span class="line"><span class="comment">//user.setUserName("pp");</span></span><br><span class="line"><span class="comment">//user.setPassword("456");</span></span><br><span class="line"><span class="comment">//sqlSession.insert("net.onest.mapper.UserMapper.insertUser", user);</span></span><br><span class="line"><span class="comment">//sqlSession.commit();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//List&lt;User&gt; users = sqlSession.selectList("net.onest.mapper.UserMapper.findAllUsers");</span></span><br><span class="line"><span class="comment">//System.out.println(users);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////关闭SqlSession</span></span><br><span class="line"><span class="comment">//sqlSession.close();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种方式（推荐使用）</span></span><br><span class="line"><span class="comment">//打开SqlSession</span></span><br><span class="line">SqlSession sqlSession = MyBatisUtil.openSqlSession();</span><br><span class="line"><span class="comment">//得到了映射器接口实现类的对象</span></span><br><span class="line">UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//User user = new User();</span></span><br><span class="line"><span class="comment">//user.setUserName("zj");</span></span><br><span class="line"><span class="comment">//user.setPassword("456");</span></span><br><span class="line"><span class="comment">//userMapper.insertUser(user);</span></span><br><span class="line"><span class="comment">//sqlSession.commit();</span></span><br><span class="line"></span><br><span class="line">List&lt;User&gt; users =  userMapper.findAllUsers();</span><br><span class="line">System.out.println(users);</span><br><span class="line"><span class="comment">//关闭session</span></span><br><span class="line">sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MyBatis主要的类层次结构-1"><a href="#MyBatis主要的类层次结构-1" class="headerlink" title="MyBatis主要的类层次结构"></a>MyBatis主要的类层次结构</h2><p><img src="/2020/03/17/1-Mybatis%E6%A1%86%E6%9E%B6/2020-03-17_113645.jpg" alt></p><h2 id="SqlSession的工作流程"><a href="#SqlSession的工作流程" class="headerlink" title="SqlSession的工作流程"></a>SqlSession的工作流程</h2><ol><li>开启一个数据库访问会话—创建SqlSession对象：MyBatis封装了对数据库的访问，把对数据库的会话和事务控制放到了SqlSession对象中。</li></ol><p><img src="/2020/03/17/1-Mybatis%E6%A1%86%E6%9E%B6/2020-03-17_114424.jpg" alt><br>2. 为SqlSession传递一个映射的SQL语句的StatementId和参数，然后返回结果：<br>    1. SqlSession根据Statement ID, 在MyBatis配置对象<br>    2. Configuration中获取到对应的MappedStatement对象<br>    3. 调用MyBatis执行器来执行具体的操作。<br>3. MyBatis在初始化的时候，会将MyBatis的配置信息全部加载到内存中，使用Configuration实例来维护。<br>4. 映射文件加载到内存中会生成n个对应的MappedStatement对象</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mybatis使用流程&quot;&gt;&lt;a href=&quot;#Mybatis使用流程&quot; class=&quot;headerlink&quot; title=&quot;Mybatis使用流程&quot;&gt;&lt;/a&gt;Mybatis使用流程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;导入jar包&lt;/li&gt;
&lt;li&gt;编写mybatis主配置文件xml&lt;/li&gt;
&lt;li&gt;创建实体类和映射接口（注意是接口）&lt;/li&gt;
&lt;li&gt;编写mybatis的sql映射文件&lt;/li&gt;
&lt;li&gt;主配置文件与SQL映射文件相关联&lt;/li&gt;
&lt;li&gt;进行编码&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Mybatis" scheme="http://yoursite.com/categories/Mybatis/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>考研数学必记公式3.16-3.22</title>
    <link href="http://yoursite.com/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/"/>
    <id>http://yoursite.com/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/</id>
    <published>2020-03-16T14:37:45.000Z</published>
    <updated>2020-03-16T14:52:27.423Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="3月16需背诵公式及性质"><a href="#3月16需背诵公式及性质" class="headerlink" title="3月16需背诵公式及性质"></a>3月16需背诵公式及性质</h2><a id="more"></a><p><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/1.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/2.jpg" alt></p><h2 id="3月17需背诵公式及性质"><a href="#3月17需背诵公式及性质" class="headerlink" title="3月17需背诵公式及性质"></a>3月17需背诵公式及性质</h2><p><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/3.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/4.jpg" alt></p><h2 id="3月18需背诵公式及性质"><a href="#3月18需背诵公式及性质" class="headerlink" title="3月18需背诵公式及性质"></a>3月18需背诵公式及性质</h2><p><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/5.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/6.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/7.jpg" alt></p><h2 id="3月19需背诵公式及性质"><a href="#3月19需背诵公式及性质" class="headerlink" title="3月19需背诵公式及性质"></a>3月19需背诵公式及性质</h2><p><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/8.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/9.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/10.jpg" alt></p><h2 id="3月20需背诵公式及性质"><a href="#3月20需背诵公式及性质" class="headerlink" title="3月20需背诵公式及性质"></a>3月20需背诵公式及性质</h2><p><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/11.jpg" alt></p><h2 id="3月21需背诵公式及性质"><a href="#3月21需背诵公式及性质" class="headerlink" title="3月21需背诵公式及性质"></a>3月21需背诵公式及性质</h2><p><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/12.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/13.jpg" alt><br><img src="/2020/03/16/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-16-3-22/14.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;3月16需背诵公式及性质&quot;&gt;&lt;a href=&quot;#3月16需背诵公式及性质&quot; class=&quot;headerlink&quot; title=&quot;3月16需背诵公式及性质&quot;&gt;&lt;/a&gt;3月16需背诵公式及性质&lt;/h2&gt;
    
    </summary>
    
    
      <category term="考研数学" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>英语词汇41-52</title>
    <link href="http://yoursite.com/2020/03/12/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8741-52/"/>
    <id>http://yoursite.com/2020/03/12/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8741-52/</id>
    <published>2020-03-12T09:00:54.000Z</published>
    <updated>2020-03-13T10:44:35.719Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="词汇11个"><a href="#词汇11个" class="headerlink" title="词汇11个"></a>词汇11个</h2><ol start="41"><li>abuzz 嗡嗡的（象声词）<ol><li>be abuzz with… 对…议论纷纷的</li><li>Washington has been abuzz with stories about disarray inside the White House.<ol><li>disarray 混乱的</li><li>story 新闻报道</li><li>has  有，<strong>使得</strong></li></ol></li><li>A move has intellectual-property lawyers abuzz.<ol><li>move 举措</li><li>intellectual-property 知识产权</li></ol></li></ol></li><li>oblige v.有责任，有义务<ol><li>be obliged to do sth 有责任有义务做某事</li><li>be/feel obliged to sth/sb 感谢，感激</li><li>oblige sb to do sth=force sb to do sth 强迫某人做某事</li></ol></li><li>effect n.影响，作用<ol><li>in effect=in fact=in practice=actually</li><li>have/pose/exert an effect on  对…有影响</li><li>影响：influence；impact; <strong>fallout</strong></li><li><strong>to the effect 大意是说</strong></li></ol></li><li>with it 随之<ol><li>This move brings with it the greater rewards and benefits for the society.</li><li>随之，这一举措为社会带来了更大的回报和利益。<a id="more"></a></li></ol></li><li>in the wake of 跟随 随着<ol><li>A emerges in the wake of B   A在B之后出现</li><li>A follows B</li><li>A tracks the emergence of B  A跟踪了B的出现</li><li>A rises following in the wake of B  在B之后上升</li></ol></li><li>long before 早在…之前<ol><li>before long 不久之后</li><li>口诀：long在前，早在…之前；long在后，不久之后</li></ol></li><li>overshadow v.使…黯然失色，夺去…光彩，比…更显眼 （=dwarf）<ol><li>shadow n.阴影 v.遮蔽</li><li>A is dwarfed by B=A is overshadowed by B   A被B弄的黯然失色</li></ol></li><li>entitle v.授予，给予 =grant  <strong>n.情报（=information）</strong><ol><li>Sb. be entitled to sth. 某人被授予某物</li><li>be entitled to do sth. 有权享有…；有做某事的资格</li></ol></li><li>intelligence n.聪明才智<ol><li>intelligent a.聪明的，智力的 smart</li><li>intellectual a.知识的</li><li>intellectual property 知识产权</li></ol></li><li>initiatives n.主动性 ，创始，举措，措施<ol><li>intellectual property 知识产权</li><li>subjective initiative 主观能动性；</li><li>take initiatives to do sth. 采取措施做某事</li><li>采取措施：<ol><li>take measures to do</li><li>take moves to do</li><li>take steps to do</li><li>take actions to so sth.</li><li>these well-meaning medical initiatives translate into better care.这些善意的医疗举措转化为更好的医疗服务。</li></ol></li></ol></li><li>vulnerable a.易受攻击的，易受…的攻击；易受伤害的；有弱点的<ol><li>容易受…的影响<ol><li>be vulnerable to…</li><li>be susceptible to…</li><li>be subject to…</li><li>be immune to…不受…影响</li></ol></li><li>vulnerability n.弱点，缺陷<ol><li>weak point</li><li>weakness</li><li>shortcoming</li><li>drawback</li><li>deficiency</li><li>defect</li><li>flaw</li><li>disadvantage</li><li>handicap</li></ol></li><li>Encouraging kids to reject the life of the mind leaves them vulnerable to exploitation and control.  鼓励孩子们去拒绝精神生活会使他们容易遭受剥削和控制。</li></ol></li><li>shake v.握手 <strong>摇摆</strong></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;词汇11个&quot;&gt;&lt;a href=&quot;#词汇11个&quot; class=&quot;headerlink&quot; title=&quot;词汇11个&quot;&gt;&lt;/a&gt;词汇11个&lt;/h2&gt;&lt;ol start=&quot;41&quot;&gt;
&lt;li&gt;abuzz 嗡嗡的（象声词）&lt;ol&gt;
&lt;li&gt;be abuzz with… 对…议论纷纷的&lt;/li&gt;
&lt;li&gt;Washington has been abuzz with stories about disarray inside the White House.&lt;ol&gt;
&lt;li&gt;disarray 混乱的&lt;/li&gt;
&lt;li&gt;story 新闻报道&lt;/li&gt;
&lt;li&gt;has  有，&lt;strong&gt;使得&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;A move has intellectual-property lawyers abuzz.&lt;ol&gt;
&lt;li&gt;move 举措&lt;/li&gt;
&lt;li&gt;intellectual-property 知识产权&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;oblige v.有责任，有义务&lt;ol&gt;
&lt;li&gt;be obliged to do sth 有责任有义务做某事&lt;/li&gt;
&lt;li&gt;be/feel obliged to sth/sb 感谢，感激&lt;/li&gt;
&lt;li&gt;oblige sb to do sth=force sb to do sth 强迫某人做某事&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;effect n.影响，作用&lt;ol&gt;
&lt;li&gt;in effect=in fact=in practice=actually&lt;/li&gt;
&lt;li&gt;have/pose/exert an effect on  对…有影响&lt;/li&gt;
&lt;li&gt;影响：influence；impact; &lt;strong&gt;fallout&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to the effect 大意是说&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;with it 随之&lt;ol&gt;
&lt;li&gt;This move brings with it the greater rewards and benefits for the society.&lt;/li&gt;
&lt;li&gt;随之，这一举措为社会带来了更大的回报和利益。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>英语词汇31-40</title>
    <link href="http://yoursite.com/2020/03/12/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8731-40/"/>
    <id>http://yoursite.com/2020/03/12/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8731-40/</id>
    <published>2020-03-12T09:00:38.000Z</published>
    <updated>2020-03-13T10:08:25.935Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="词汇10个"><a href="#词汇10个" class="headerlink" title="词汇10个"></a>词汇10个</h2><p>upsetting 令人沮丧的</p><p>triumph v.胜利，凯旋<br><br>A triumph over B…A比B好，A由于B<br><br>Talking triump over speaking,spontaneity（即兴） over crafting(精心雕琢).<br><br>spontaneity speaking 即兴演讲</p><ol start="31"><li>despite prep.尽管，虽然<ol><li>in spite of </li><li>+n/v-ing/名词短语</li></ol></li><li>discipline v.训练，惩罚（punish，penalize） n.学科，纪律，惩罚（punishment，penalty）<ol><li>intellectual discipline 知识学科</li><li>at a loss 慌然失措</li></ol></li><li>alter v.改变，转变<ol><li>近义词：change; transform; transfer; modify; convert; shift; switch; vary</li><li>形近词：alternate v.交替；轮流  alternative a.可供选择的；交替的  alternatively adv.二者择一地</li></ol></li><li>cultivate v.培养，种植<ol><li>culture 文化的</li><li>cultivate good habits 培养好习惯</li><li>raise<ol><li>种植  corn玉米</li><li>提出  a challage</li><li>提升  salary/wage</li><li>引起  our concern</li><li>养育  a baby</li><li>喂养  cattle</li><li>集资  money/fund<a id="more"></a></li></ol></li></ol></li><li>object v.反对，拒绝(+to) n.目标，目的；物体，对象；宾语<ol><li>反对：disagree，disapprove，oppose</li><li>目标：goal，aim，target，purpose，objective</li><li>resist(拒绝)：refuse（confuse 困惑的），reject，decline，deny</li></ol></li><li>concept n.概念，观念=notion<ol><li>conceive v.孕育；构思；设想；(+of)</li><li>conceive of a noval idea 构思一个新颖的观点</li><li>conception n.孕育，构思</li></ol></li><li>parallel n.平行线，类似的事物 a.平行的 v.使…平行(v.+ed)<ol><li>upsetting parallel 令人沮丧的类似事物</li><li>be parallel to… 与…相类似=be similar to…=be analogous</li><li>run parallel to… 与…平行</li><li>run parallel with… 与…并驾齐驱</li><li>unparalleded=matchless=incomparable 不可比拟的，无与伦比的</li><li>unique 独一无二的</li></ol></li><li>succeed v.成功<ol><li>success n.成功</li><li>successful a.成功的</li><li>successive a.连续的；继承的</li><li>succession n.连续；继位；继承权  a succession of 一系列</li><li>a host of=a series of=an array of=a train of一系列</li></ol></li><li>relieve v.减轻，释放<ol><li>relieve sb of sth 让sb从sth中解脱出来</li></ol></li><li>respect <strong>n.方面</strong> v.尊敬<ol><li>in respect of…关于，涉及</li><li>关于：about；concerning；regarding；with regard to；with respect to</li><li><strong>respectful adj. 恭敬的；有礼貌的；</strong></li><li><strong>respectable adj. 值得尊敬的</strong></li><li><strong>respective adj. 分别的；各自的</strong></li><li>perspective n. 观点；角度</li><li>from my perspective “从我的角度来看，就我而言”</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;词汇10个&quot;&gt;&lt;a href=&quot;#词汇10个&quot; class=&quot;headerlink&quot; title=&quot;词汇10个&quot;&gt;&lt;/a&gt;词汇10个&lt;/h2&gt;&lt;p&gt;upsetting 令人沮丧的&lt;/p&gt;
&lt;p&gt;triumph v.胜利，凯旋&lt;br&gt;&lt;br&gt;A triumph over B…A比B好，A由于B&lt;br&gt;&lt;br&gt;Talking triump over speaking,spontaneity（即兴） over crafting(精心雕琢).&lt;br&gt;&lt;br&gt;spontaneity speaking 即兴演讲&lt;/p&gt;
&lt;ol start=&quot;31&quot;&gt;
&lt;li&gt;despite prep.尽管，虽然&lt;ol&gt;
&lt;li&gt;in spite of &lt;/li&gt;
&lt;li&gt;+n/v-ing/名词短语&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;discipline v.训练，惩罚（punish，penalize） n.学科，纪律，惩罚（punishment，penalty）&lt;ol&gt;
&lt;li&gt;intellectual discipline 知识学科&lt;/li&gt;
&lt;li&gt;at a loss 慌然失措&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;alter v.改变，转变&lt;ol&gt;
&lt;li&gt;近义词：change; transform; transfer; modify; convert; shift; switch; vary&lt;/li&gt;
&lt;li&gt;形近词：alternate v.交替；轮流  alternative a.可供选择的；交替的  alternatively adv.二者择一地&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;cultivate v.培养，种植&lt;ol&gt;
&lt;li&gt;culture 文化的&lt;/li&gt;
&lt;li&gt;cultivate good habits 培养好习惯&lt;/li&gt;
&lt;li&gt;raise&lt;ol&gt;
&lt;li&gt;种植  corn玉米&lt;/li&gt;
&lt;li&gt;提出  a challage&lt;/li&gt;
&lt;li&gt;提升  salary/wage&lt;/li&gt;
&lt;li&gt;引起  our concern&lt;/li&gt;
&lt;li&gt;养育  a baby&lt;/li&gt;
&lt;li&gt;喂养  cattle&lt;/li&gt;
&lt;li&gt;集资  money/fund&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>英语词汇21-30</title>
    <link href="http://yoursite.com/2020/03/12/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8721-30/"/>
    <id>http://yoursite.com/2020/03/12/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8721-30/</id>
    <published>2020-03-12T08:58:09.000Z</published>
    <updated>2020-03-12T15:30:32.593Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="词汇10个"><a href="#词汇10个" class="headerlink" title="词汇10个"></a>词汇10个</h2><ol start="21"><li>conduct v.指挥，引导，实施 n.行为，指导，实施<ol><li>conduct a experiment/research</li><li>the code of conduct 行为准则</li><li>moral conduct/rule/principle 道德准则</li><li>In a move, the federal circuit said it would use a particular case to conduct a broad review of business-method patents.<ol><li>move n.举措</li><li>the federal circuit 联邦巡回法院</li><li>broad 广泛的 abroad 在国外</li><li>review审查，审阅  peer review 同行审查</li></ol></li><li>Your outline should smoothly conduct you from one point to the next, but do not permit it to railroad you.<ol><li>outline 提纲 deadline 截止日期</li><li>railroad n.铁路 <strong>v.强迫，使…仓促行事</strong></li></ol></li><li>Ericsson realized he would have more opportunity to conduct his own research if he switched to psychology.<ol><li>switch n.开关  v.转换，转向，改变</li><li>dedicate A to B 将A致力于B</li></ol></li></ol></li><li>observe v.观察，看到，<strong>遵守，服从</strong><ol><li>observer n.观察者</li><li>observe the laws and regulations 遵守法律法规</li><li>follow/obey/conform/adhere to 符合遵守</li><li>ex- 向外  im-向里</li><li>export 出口  import 进口</li><li>explict 清楚的，明朗的  implict 含蓄的，不清楚的（implication n.内涵，含义）</li><li>清楚的：clear obvious manifest conspicuous exact definite</li><li>不清楚的：unclear vague obscured ambiguous<a id="more"></a></li></ol></li><li>establish v.确立，建立<ol><li>well-establish 建立好的，完善的    well-brand 知名品牌   well-evidence 确证</li><li>establish the deadline 截止日期</li><li>establish a company/firm/enterprise 创业</li><li>establish oneself in…立足于/定居于</li><li>establishment n.机构，组织  organization institution</li></ol></li><li>wonder v.想知道，对…好奇，对…疑惑 n.惊讶，奇迹(miracle)<ol><li>wander v.徘徊，游荡</li><li>It is no/little/small wonder that …怪不得，难怪</li><li>work wonder 创造奇迹</li></ol></li><li>approach n.方法，途径  v.接近，着手处理<ol><li>way（in the way）</li><li>manner(in this manner)</li><li>method(with this method)</li><li>means(by means of)</li><li>fashion(in this fashion)</li><li><strong>mean v.意味着 n.方法 adj.吝啬的，平均的</strong></li><li>average a.平均的 普通的（=ordinary=common=plain）</li><li>in the long run 从长远看</li><li>the common run of people 普通人</li><li>not… any but =only</li><li>not… any more than… 对于两者否定</li></ol></li><li>grant v.授予，给予 n.津贴，补助金（subsidy）<ol><li>grant sb sth—grant sth to sb</li><li>confer sth on sb 授予</li><li>sb be entitle of sth 被授予</li><li>grant himself permission to be human 人非圣贤</li><li>grant my application/request</li><li>take sth for granted 把…视为理所当然</li></ol></li><li>position n.位置，主场，地位，<strong>职位</strong><ol><li>form my position = for my part = I think</li><li>leading position 主导地位</li><li>apply for the position 求职</li><li>resign from the position 辞职</li><li>pose n.姿势 v.构成，形成 </li><li>oppose v.反对 opposite 相反的</li><li>propose n.建议，提出，求赠</li><li>dispose v.处理 提出（put forward=come up with）</li><li>A pose a threat to B 构成威胁</li></ol></li><li>relate v.使…有联系 叙述，涉及<ol><li>relation n.关系，叙述   relationship（关系）</li><li><strong>relative a.相对的 n.亲戚</strong></li><li>A 与 B 相关：<ol><li>A be related with/to B</li><li>A be associated with B</li><li>A be correlated with B</li><li>A be linked with B</li><li>A be connected with B</li><li>A have to do with B</li><li>A be bound up with B</li><li>A be relevant to B</li></ol></li><li>A 与 B 无关：（以上be not）<ol><li>A have nothing to do with B</li><li>A be irrelevant to B</li><li>A have no concern with B</li></ol></li></ol></li><li>alleviate v.减轻，舒缓<ol><li>alleviate the pressure/stress from work and life.缓解压力</li><li>近义词：ease release moderate relieve</li><li>alleviate pain 止痛</li><li>alleviate poverty 扶贫</li></ol></li><li>otherwise conj.否则，要不然  adv.另一个，否则<ol><li>or otherwise 或反之</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;词汇10个&quot;&gt;&lt;a href=&quot;#词汇10个&quot; class=&quot;headerlink&quot; title=&quot;词汇10个&quot;&gt;&lt;/a&gt;词汇10个&lt;/h2&gt;&lt;ol start=&quot;21&quot;&gt;
&lt;li&gt;conduct v.指挥，引导，实施 n.行为，指导，实施&lt;ol&gt;
&lt;li&gt;conduct a experiment/research&lt;/li&gt;
&lt;li&gt;the code of conduct 行为准则&lt;/li&gt;
&lt;li&gt;moral conduct/rule/principle 道德准则&lt;/li&gt;
&lt;li&gt;In a move, the federal circuit said it would use a particular case to conduct a broad review of business-method patents.&lt;ol&gt;
&lt;li&gt;move n.举措&lt;/li&gt;
&lt;li&gt;the federal circuit 联邦巡回法院&lt;/li&gt;
&lt;li&gt;broad 广泛的 abroad 在国外&lt;/li&gt;
&lt;li&gt;review审查，审阅  peer review 同行审查&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Your outline should smoothly conduct you from one point to the next, but do not permit it to railroad you.&lt;ol&gt;
&lt;li&gt;outline 提纲 deadline 截止日期&lt;/li&gt;
&lt;li&gt;railroad n.铁路 &lt;strong&gt;v.强迫，使…仓促行事&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Ericsson realized he would have more opportunity to conduct his own research if he switched to psychology.&lt;ol&gt;
&lt;li&gt;switch n.开关  v.转换，转向，改变&lt;/li&gt;
&lt;li&gt;dedicate A to B 将A致力于B&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;observe v.观察，看到，&lt;strong&gt;遵守，服从&lt;/strong&gt;&lt;ol&gt;
&lt;li&gt;observer n.观察者&lt;/li&gt;
&lt;li&gt;observe the laws and regulations 遵守法律法规&lt;/li&gt;
&lt;li&gt;follow/obey/conform/adhere to 符合遵守&lt;/li&gt;
&lt;li&gt;ex- 向外  im-向里&lt;/li&gt;
&lt;li&gt;export 出口  import 进口&lt;/li&gt;
&lt;li&gt;explict 清楚的，明朗的  implict 含蓄的，不清楚的（implication n.内涵，含义）&lt;/li&gt;
&lt;li&gt;清楚的：clear obvious manifest conspicuous exact definite&lt;/li&gt;
&lt;li&gt;不清楚的：unclear vague obscured ambiguous&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>8.1-Hibernate检索策略</title>
    <link href="http://yoursite.com/2020/03/11/8-1-Hibernate%E6%A3%80%E7%B4%A2%E7%AD%96%E7%95%A5/"/>
    <id>http://yoursite.com/2020/03/11/8-1-Hibernate%E6%A3%80%E7%B4%A2%E7%AD%96%E7%95%A5/</id>
    <published>2020-03-11T02:36:42.000Z</published>
    <updated>2020-03-11T02:59:53.499Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="三种检索策略"><a href="#三种检索策略" class="headerlink" title="三种检索策略"></a>三种检索策略</h2><ol><li>立即检索：立即加载检索方法指定的对象。<ol><li>加载多于需要的对象白白浪费内存空间；</li><li>select 语句数量多，频繁访问数据库，影响系统性能。</li></ol></li><li>延迟检索：延迟加载检索方法指定的对象。<ol><li>避免多加载应用程序不需要访问的数据对象。</li></ol></li><li>迫切左外连接：利用SQL外连接查询功能加载检索方法指定对象。<ol><li>减少执行select语句的数量，减少数据库访问，提高系统性能。</li></ol></li></ol><a id="more"></a><h2 id="类级别和关联级别可选的检索策略"><a href="#类级别和关联级别可选的检索策略" class="headerlink" title="类级别和关联级别可选的检索策略"></a>类级别和关联级别可选的检索策略</h2><p><img src="/2020/03/11/8-1-Hibernate%E6%A3%80%E7%B4%A2%E7%AD%96%E7%95%A5/2020-03-11_105703.jpg" alt></p><h2 id="类级别检索策略"><a href="#类级别检索策略" class="headerlink" title="类级别检索策略"></a>类级别检索策略</h2><p>立即检索（加载）：映射配置文件中<class>元素的lazy 属性设置为 false。</class></p><p><code>&lt;class name=&quot;User&quot; table=&quot;user&quot; lazy=&quot;false&quot;&gt;</code></p><p>延迟检索（加载）：映射配置文件中<class>元素的lazy 属性设置为 true。</class></p><p><code>&lt;class name=&quot;User&quot; table=&quot;user&quot; lazy=&quot;true&quot;&gt;</code></p><h3 id="立即检索"><a href="#立即检索" class="headerlink" title="立即检索"></a>立即检索</h3><p><code>User user = session.load(User.class, new Integer(1));</code></p><h3 id="延迟检索"><a href="#延迟检索" class="headerlink" title="延迟检索"></a>延迟检索</h3><ol><li>创建 User 的代理类实例（代理类是 Hibernate 动态生成的User的扩展类）；</li><li>Hibernate 创建的 User 代理类的实例<strong>仅仅初始化了OID 属性</strong>，其他属性均为 null；</li><li>当程序第一次访问代理类实例时（比如user.getX()），Hibernate会初始化代理类实例，执行 select 语句；</li><li>如果程序访问 User 的 getId() 方法时，Hibernate并不会初始化代理类实例，因为 id 值已经存在。</li><li>类级别的检索策略<strong>只会影响到 Session 的 load() 方法</strong>，对get() 和其它查询不起作用。</li><li>延迟加载对 load() 方法的影响：<ol><li>如果数据库中不存在对应的对象不会抛出异常，只有在调用 user.getXX() 时才会抛异常；</li><li>代理类实例只能在当前 Session 范围内初始化；</li><li><strong>Hibernate.initialize()</strong> 方法可以显示初始化代理类实例。</li></ol></li></ol><h3 id="关联级别检索策略"><a href="#关联级别检索策略" class="headerlink" title="关联级别检索策略"></a>关联级别检索策略</h3><p>User.hbm.xml 中<set>元素 lazy 和 outer-join 属性。</set></p><p>在映射文件中用<strong><set></set></strong>元素来配置一对多和多对多关联关系。<br><img src="/2020/03/11/8-1-Hibernate%E6%A3%80%E7%B4%A2%E7%AD%96%E7%95%A5/2020-03-11_105818.jpg" alt></p><p>outer-join属性：auto、true、false</p><p><img src="/2020/03/11/8-1-Hibernate%E6%A3%80%E7%B4%A2%E7%AD%96%E7%95%A5/2020-03-11_105927.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;三种检索策略&quot;&gt;&lt;a href=&quot;#三种检索策略&quot; class=&quot;headerlink&quot; title=&quot;三种检索策略&quot;&gt;&lt;/a&gt;三种检索策略&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;立即检索：立即加载检索方法指定的对象。&lt;ol&gt;
&lt;li&gt;加载多于需要的对象白白浪费内存空间；&lt;/li&gt;
&lt;li&gt;select 语句数量多，频繁访问数据库，影响系统性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;延迟检索：延迟加载检索方法指定的对象。&lt;ol&gt;
&lt;li&gt;避免多加载应用程序不需要访问的数据对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;迫切左外连接：利用SQL外连接查询功能加载检索方法指定对象。&lt;ol&gt;
&lt;li&gt;减少执行select语句的数量，减少数据库访问，提高系统性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>英语词汇11-20</title>
    <link href="http://yoursite.com/2020/03/10/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8711-20/"/>
    <id>http://yoursite.com/2020/03/10/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%8711-20/</id>
    <published>2020-03-10T01:55:15.000Z</published>
    <updated>2020-03-12T08:58:21.997Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="词汇10个"><a href="#词汇10个" class="headerlink" title="词汇10个"></a>词汇10个</h2><ol start="11"><li>lead v.领导，引导，领先 导致 n.领头，带队<ol><li>lead sb to do sth 引导某人做某事</li><li><strong>lead sb on 误导某人</strong></li><li>take the lead 带头</li><li>leadership 领导能力，领导地位</li><li>misleading 误导性的</li><li>leading 最重要的，卓越的</li><li><strong>plead for 恳求，请求</strong></li></ol></li><li>sector n.部门，部分，行业<ol><li>financial sector/department 金融部门</li><li>bank sector 银行部门</li><li>bank industry 银行业</li><li>bank world 世界银行</li><li>public sector 公有部门</li><li>private sector 私有部门</li></ol></li><li>account n.解释，描述，数量，账户，账目  v.解释，说明，导致，占比<ol><li>accountable 可解释的，有责任的 accountability=responsibility(责任，义务）</li><li>accounting n.会计，会计学   civil servant 公务员</li><li>accounting firm/company 会计事务所</li><li>accounting and finance 会计与金融</li><li>account for <ol><li>占据（比例）=make up=take uo=occupy +x%</li><li>解释说明</li><li>导致 lead to=result in=give rise to</li></ol></li><li>take into account 考虑</li><li>leave sth out of account</li><li>on account for 因为由于 =because of=due to=owing to</li><li>by all accounts 从各个方面来说，据大家所知</li><li>The first thing I would like to take into account is sth = Firstly</li><li>In most countries, the cost of crude oil now accounts for a smaller share of the price of petrol than it did in the 1970s.—&gt;在大多数国家，原油成本在汽油价格中所占的份额比1970年代要小。</li><li>crude 粗糙的，天然的，未加工的</li><li>share v.分享 n.股份，份额（distribution）shared a.共有的<a id="more"></a></li></ol></li><li>concern v.涉及，关系到，担忧 n.担忧，关注<ol><li>concern about 关心，担忧</li><li>concern oneself/with 关心</li><li>be concern with/about 关心担忧</li><li>concerning(prep.) = about=regarding(prep.)=with regard to</li><li>be concerned in 与…有关联 =be correlated with=be ralated with=be connected with=be associated</li><li>assciation 协会，联盟，联系</li><li>the Student’s Union/assciation 学生会</li><li>postgraduate 研究生—-master degree 硕士学位</li><li>undergraduate 本科生—-undergraduate degree 本科学位</li><li>doctoral 博士生——doctor degree 博士学位</li></ol></li><li>structure v.构造，建造 n.结构，构造，建筑<ol><li>restructure 重建，重组</li><li>language structure 语言结构</li><li>ownership structure 所有制结构</li><li>the structure of paper/thesis 论文结构</li><li>structural 结构的</li><li>infrastructure 基础设施</li></ol></li><li>content n.内容，目录，满意 v.使满足，使满意 adj.满足的，满意的<ol><li>be content with sth 对…满意=be content to do sth</li><li>self-contented a.自满的</li><li>contention n.争论</li><li>contend v.声称，主张，竞争</li><li>contact n.v.联系  in contact with sb 和…联系</li><li>contract n.合同，契约</li><li>contrast n.差异，差别 v.对比，对照</li><li>conpare v.</li><li>comparison n.比较，对比</li></ol></li><li>define v.下定义，阐明<ol><li>definition n.</li><li>The defining term of intelligence in human still seems to be the IQ scores.—&gt;在人类术语定义中，智商仍被看做IQ分数</li><li>in the long term 从长远看</li><li>a short-term plan 短期规划</li></ol></li><li>identify v.识别，辨别，确认<ol><li>identify n.身份</li><li>identify with sb 认同某人，与…产生共鸣</li><li>recognize v.识别</li></ol></li><li>physical a.身体的，物理的，物质的<ol><li>bodily a.身体的</li><li>mental 精神的</li><li>psychological 心理的</li><li>physical health/fitess 身体健康</li><li>physics 物理学家   physician （内科）医生  physicist 物理学家</li><li>surgeon （外科）医生  philosopher 哲学家  dentist 牙医</li><li>psychology 心理学家  therapist 治疗师  therapy n.治疗</li></ol></li><li>figure v.计算，估计，推测  n.人物，数字，体型<ol><li>figure out 计算出，弄清楚</li><li>public figure = celebrity 名人</li><li>Overall, Europe’s wholesale market for food and drink is growing, but the figures,when added together, mask two opposing trends.<ol><li>overall 整体上</li><li>wholesale 批发 retail 零售</li><li>mask n.面具 v.覆盖</li><li>oppose v.反对 </li><li>disposable surgeon mask 医用外科口罩</li></ol></li><li>It’s not obvious how the capacity to visualize objects and to figure out numerical patterns suits one to answer the questions.<ol><li>capacity 容量，性能</li><li>visualize 设想</li><li>suit v.适合 suit sb to do=mask sb to do</li></ol></li><li>Although the figure may vary, analysts do agree on another matter: that the number of the homeless is increasing.<ol><li>matter n.物质，事件</li></ol></li><li>Americans no longer expect public figures, whether in speech or in writing.</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;词汇10个&quot;&gt;&lt;a href=&quot;#词汇10个&quot; class=&quot;headerlink&quot; title=&quot;词汇10个&quot;&gt;&lt;/a&gt;词汇10个&lt;/h2&gt;&lt;ol start=&quot;11&quot;&gt;
&lt;li&gt;lead v.领导，引导，领先 导致 n.领头，带队&lt;ol&gt;
&lt;li&gt;lead sb to do sth 引导某人做某事&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lead sb on 误导某人&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;take the lead 带头&lt;/li&gt;
&lt;li&gt;leadership 领导能力，领导地位&lt;/li&gt;
&lt;li&gt;misleading 误导性的&lt;/li&gt;
&lt;li&gt;leading 最重要的，卓越的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;plead for 恳求，请求&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;sector n.部门，部分，行业&lt;ol&gt;
&lt;li&gt;financial sector/department 金融部门&lt;/li&gt;
&lt;li&gt;bank sector 银行部门&lt;/li&gt;
&lt;li&gt;bank industry 银行业&lt;/li&gt;
&lt;li&gt;bank world 世界银行&lt;/li&gt;
&lt;li&gt;public sector 公有部门&lt;/li&gt;
&lt;li&gt;private sector 私有部门&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;account n.解释，描述，数量，账户，账目  v.解释，说明，导致，占比&lt;ol&gt;
&lt;li&gt;accountable 可解释的，有责任的 accountability=responsibility(责任，义务）&lt;/li&gt;
&lt;li&gt;accounting n.会计，会计学   civil servant 公务员&lt;/li&gt;
&lt;li&gt;accounting firm/company 会计事务所&lt;/li&gt;
&lt;li&gt;accounting and finance 会计与金融&lt;/li&gt;
&lt;li&gt;account for &lt;ol&gt;
&lt;li&gt;占据（比例）=make up=take uo=occupy +x%&lt;/li&gt;
&lt;li&gt;解释说明&lt;/li&gt;
&lt;li&gt;导致 lead to=result in=give rise to&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;take into account 考虑&lt;/li&gt;
&lt;li&gt;leave sth out of account&lt;/li&gt;
&lt;li&gt;on account for 因为由于 =because of=due to=owing to&lt;/li&gt;
&lt;li&gt;by all accounts 从各个方面来说，据大家所知&lt;/li&gt;
&lt;li&gt;The first thing I would like to take into account is sth = Firstly&lt;/li&gt;
&lt;li&gt;In most countries, the cost of crude oil now accounts for a smaller share of the price of petrol than it did in the 1970s.—&amp;gt;在大多数国家，原油成本在汽油价格中所占的份额比1970年代要小。&lt;/li&gt;
&lt;li&gt;crude 粗糙的，天然的，未加工的&lt;/li&gt;
&lt;li&gt;share v.分享 n.股份，份额（distribution）shared a.共有的&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>英语词汇1-10</title>
    <link href="http://yoursite.com/2020/03/09/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%871-10/"/>
    <id>http://yoursite.com/2020/03/09/%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%871-10/</id>
    <published>2020-03-09T08:27:38.000Z</published>
    <updated>2020-03-13T10:40:24.896Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>抚养，赡养：raise，feed，support</p><p>表否定的词：rarely，hardly，scarely，seldom，little，few</p><p>缺点，弱点：<br>    1. weak point<br>    2. shortcoming<br>    3. drawback<br>    4. flaw<br>    5. vulnerability<br>    6. weakness<br>    7. disadvantage<br>    8. handicap<br>    9. defect<br>    10. deficiency</p><p>have a far-reaching influence on sth 深远的影响</p><h2 id="感知考研词汇：以考研英语中常出现的“人”为例："><a href="#感知考研词汇：以考研英语中常出现的“人”为例：" class="headerlink" title="感知考研词汇：以考研英语中常出现的“人”为例："></a>感知考研词汇：以考研英语中常出现的“人”为例：</h2><ol><li>advocate<ol><li>v.倡导，主张</li><li>n.倡导者，主张者</li></ol></li><li>concertgoer<ol><li>n.音乐迷</li><li>concert 音乐会</li><li>playgoer 戏迷</li><li>fans n.粉丝</li></ol></li><li>arbiter<ol><li>n.仲裁人，裁判</li></ol></li><li>critic<ol><li>n.批评者，评论家</li><li>criticize v.批评</li><li>critical adj.批评性的</li></ol></li><li>conservative<ol><li>n.保守党</li><li>adj.保守的</li></ol></li><li>descendant<ol><li>n.后代，子孙</li><li>adj.祖传的</li><li>offspring n.后代</li></ol></li><li>benefactor<ol><li>n.捐款人</li><li>donater 捐赠人  donatee 受赠人<a id="more"></a></li></ol></li><li>entrepreneur<ol><li>n.企业家</li></ol></li><li>candidate<ol><li>n.候选人</li></ol></li><li>headhunter<ol><li>n.猎头</li></ol></li><li>celebrity<ol><li>n.名人（明星），名誉</li><li>celebrate v.庆祝</li></ol></li><li>kin<ol><li>n.亲戚</li><li>kinship n.亲情</li><li>relative 亲戚</li></ol></li><li>claimant<ol><li>n.原告</li><li>defendant n.被告</li><li>claim v.宣称，索赔</li><li>proclaim n.宣告，公布</li></ol></li><li>panel<ol><li>n.控制面板，专门小组</li><li>panel dicussion 讨论小组</li></ol></li></ol><h2 id="词汇10个"><a href="#词汇10个" class="headerlink" title="词汇10个"></a>词汇10个</h2><ol><li>enhance v.提高，提升，促进，增强<ol><li>enhance reputation 提升名誉  enhance efficiency提升效率  enhance awareness提升意识</li><li>同义词：promote，upgrade，boost（自夸，自吹自擂）</li><li>promote v.促进，促销，<strong>推销</strong>，晋升</li><li>promotion n.促升，推销，营销，晋升</li><li>market n.市场 v.市场营销</li></ol></li><li>overlook v.忽视<ol><li>同义词：ignore，neglect</li><li>oversee v.监督，监管（supervise）</li><li>overate=overstate 高估</li><li>高估————–低估</li><li>overestimate—–underestimate</li><li>overmeasure——undermeasure（measure 措施，衡量）</li><li>overvalue——–undervalue，underrate</li></ol></li><li>state n.状态，多家，洲 v.陈述，阐述<ol><li>statement 声明，陈述，清单</li><li>the current state of affirs 当前事态</li><li>keep a positive physical/mental state</li><li>overstate v.夸大，夸张的描述  understate v.保守的说</li><li>restate v.重申</li><li>stateman n.政治家</li><li>estate n.财产，房地产（=property）</li><li>status n.地位，情形，状况<ol><li>political status 政治地位</li><li>financial status 经济地位</li><li>legal status 法律地位</li></ol></li></ol></li><li>manifest v.表明<ol><li>manifestation n.表明，显示，表现</li><li>同义词：show，demonstrate（演示，显示），suggest，illustrate（说明，阐明）</li></ol></li><li>assert v.声称，坚持，断言<ol><li>assertion n.声称，断言    make a startling assertion 做了一个惊人的断言  (startle v.惊吓)</li><li>同义词：argue，believe，advocate，insist，deem(认为)，contend(认为)，hold，claim</li></ol></li><li>peer n.同龄人，同辈人，同等地位的人  <strong>v.盯着，凝视</strong><ol><li>peer review 同行评审</li><li>peer into(盯着) = gaze at = stare at = glare at(瞪着)</li></ol></li><li>issue n.问题，争端 v.发行，颁布，发表<ol><li>tissue n.(生物的)组织</li><li>The authority(权威，当局) is support to issue and carry out the corresponding(相应的) laws and regulations to control the adverse(不利的) trend</li></ol></li><li>claim v.声称，主张，<strong>索赔</strong>，提出要求<ol><li>proclaim v.宣布，声明</li><li><strong>acclaim v.称赞，欢呼，为…喝彩</strong></li><li>claim for sth 索取某物</li><li>claim compensate 索赔  （compensate 赔偿）</li><li>disclaim v.放弃(give up/quit/abandon)，否认(deny)，拒绝(refuse,reject,decline(婉拒))</li><li>deny-deniable-undeniably</li></ol></li><li>patent v.授予…专利 adj.专利的 n.专利(权)<ol><li>Over the past decade, thousands of patents have been granted for what are called business methods.—&gt;在过去的十年里，成千上万的专利被授予所谓的商业方法。</li><li>what are called 所谓的</li><li>grant v.授予（专利），同意，给予 n.补助金，拨款</li><li>take sb/sth for granted 认为…是理所当然的</li><li>sb take it for granted that 某人认为…是理所当然的</li></ol></li><li>subject n.学科，课题，主语，<strong>主旨，研究对象</strong>   <strong>v.隶属于，服从于，使…遭受</strong><ol><li>object n.客体，目标 v.反对</li><li>subjective 主观的  objective 客观的</li><li>be subjective to 易受…影响</li><li>sth is subjective to groundless doubts 某事易受无根据怀疑的影响</li><li>be susceptiable to == be vulnerable to  易受…影响</li></ol></li><li>fire n.火 v.点燃，解雇<ol><li>hire 租用，雇佣</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;抚养，赡养：raise，feed，support&lt;/p&gt;
&lt;p&gt;表否定的词：rarely，hardly，scarely，seldom，little，few&lt;/p&gt;
&lt;p&gt;缺点，弱点：&lt;br&gt;    1. weak point&lt;br&gt;    2. shortcoming&lt;br&gt;    3. drawback&lt;br&gt;    4. flaw&lt;br&gt;    5. vulnerability&lt;br&gt;    6. weakness&lt;br&gt;    7. disadvantage&lt;br&gt;    8. handicap&lt;br&gt;    9. defect&lt;br&gt;    10. deficiency&lt;/p&gt;
&lt;p&gt;have a far-reaching influence on sth 深远的影响&lt;/p&gt;
&lt;h2 id=&quot;感知考研词汇：以考研英语中常出现的“人”为例：&quot;&gt;&lt;a href=&quot;#感知考研词汇：以考研英语中常出现的“人”为例：&quot; class=&quot;headerlink&quot; title=&quot;感知考研词汇：以考研英语中常出现的“人”为例：&quot;&gt;&lt;/a&gt;感知考研词汇：以考研英语中常出现的“人”为例：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;advocate&lt;ol&gt;
&lt;li&gt;v.倡导，主张&lt;/li&gt;
&lt;li&gt;n.倡导者，主张者&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;concertgoer&lt;ol&gt;
&lt;li&gt;n.音乐迷&lt;/li&gt;
&lt;li&gt;concert 音乐会&lt;/li&gt;
&lt;li&gt;playgoer 戏迷&lt;/li&gt;
&lt;li&gt;fans n.粉丝&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;arbiter&lt;ol&gt;
&lt;li&gt;n.仲裁人，裁判&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;critic&lt;ol&gt;
&lt;li&gt;n.批评者，评论家&lt;/li&gt;
&lt;li&gt;criticize v.批评&lt;/li&gt;
&lt;li&gt;critical adj.批评性的&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;conservative&lt;ol&gt;
&lt;li&gt;n.保守党&lt;/li&gt;
&lt;li&gt;adj.保守的&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;descendant&lt;ol&gt;
&lt;li&gt;n.后代，子孙&lt;/li&gt;
&lt;li&gt;adj.祖传的&lt;/li&gt;
&lt;li&gt;offspring n.后代&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;benefactor&lt;ol&gt;
&lt;li&gt;n.捐款人&lt;/li&gt;
&lt;li&gt;donater 捐赠人  donatee 受赠人&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>考研数学必记公式3.9-3.14</title>
    <link href="http://yoursite.com/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/"/>
    <id>http://yoursite.com/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/</id>
    <published>2020-03-08T14:07:38.000Z</published>
    <updated>2020-03-16T14:52:27.422Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="3-9必记公式"><a href="#3-9必记公式" class="headerlink" title="3.9必记公式"></a>3.9必记公式</h2><p>定积分定义：</p><a id="more"></a><p><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-12_171327.jpg" alt><br><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_220948.jpg" alt><br><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221018.jpg" alt></p><p>定积分的一些其他性质：</p><p><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-12_144730.jpg" alt></p><h2 id="3-10必记公式"><a href="#3-10必记公式" class="headerlink" title="3.10必记公式"></a>3.10必记公式</h2><p><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221034.jpg" alt></p><h2 id="3-11必记公式"><a href="#3-11必记公式" class="headerlink" title="3.11必记公式"></a>3.11必记公式</h2><p><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221052.jpg" alt></p><h2 id="3-12必记公式"><a href="#3-12必记公式" class="headerlink" title="3.12必记公式"></a>3.12必记公式</h2><p><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221110.jpg" alt></p><h2 id="3-13必记公式"><a href="#3-13必记公式" class="headerlink" title="3.13必记公式"></a>3.13必记公式</h2><p><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221129.jpg" alt><br><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221146.jpg" alt></p><h2 id="3-14必记公式"><a href="#3-14必记公式" class="headerlink" title="3.14必记公式"></a>3.14必记公式</h2><p><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221208.jpg" alt><br><img src="/2020/03/08/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-9-3-14/2020-03-08_221221.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;3-9必记公式&quot;&gt;&lt;a href=&quot;#3-9必记公式&quot; class=&quot;headerlink&quot; title=&quot;3.9必记公式&quot;&gt;&lt;/a&gt;3.9必记公式&lt;/h2&gt;&lt;p&gt;定积分定义：&lt;/p&gt;
    
    </summary>
    
    
      <category term="考研数学" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>英语语法之主从复合句1</title>
    <link href="http://yoursite.com/2020/03/08/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E4%B9%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%90%88%E5%8F%A51/"/>
    <id>http://yoursite.com/2020/03/08/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E4%B9%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%90%88%E5%8F%A51/</id>
    <published>2020-03-08T12:00:46.000Z</published>
    <updated>2020-03-17T12:58:03.628Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>v + sth + as + sth 把…看做…<br>sb + v + that从句  sb觉得..</p><h2 id="主语从句"><a href="#主语从句" class="headerlink" title="主语从句"></a>主语从句</h2><ol><li>That the plates are moving is now beyond dispute.—-&gt;毋庸置疑现在陆板块在移动<ol><li>plate n.盘子，大陆板块</li><li>dispute v.争议</li><li>beyond dispute=beyond doubt 毋庸置疑的</li><li>beyond words 溢于言表</li><li>beyond our control 失控</li><li>beyond the comprehension 无法理解的  comprehension n.理解，包含</li><li>the year 2020 and beyond 2020年及以后</li></ol></li><li>Where to turn for expert information is question facing many people today.—-&gt;向哪儿寻求专门的信息是今天摆在大家免检的问题<ol><li>turn for 寻求，为了</li><li>expert n.专家  adj.专门的，熟练的</li><li>face 摆在…面前，物+face+人，人+be faced with+物</li></ol></li><li>Whether the results will be valuable, meaningless, or even misleading depends partly upon the tool itself but largely upon the user.—-&gt;结果是否是有价值的，无意义的或甚至误导的部分取决于工具本身而大部分取决于使用者<ol><li>depend on/upon = rely on/upon = rest on = lean on </li></ol></li><li>It may be said that the measure of the worth of any social institution is its effect in enlarging and improving experience.—-&gt;可以说，任何社会机构在丰富经验上的作用是值得衡量的<ol><li>measure n.措施，<strong>衡量</strong></li><li>institution n.体系，机构，学校</li><li>effect n.影响，作用</li><li>effective adj.有作用的</li><li>efficiency n.效率，功效</li><li>efficient adj.有效率的</li><li>experience n.经历，经验</li><li>A of B of C—-&gt;C的B的A<a id="more"></a></li></ol></li><li>Furthermore, it is obvious that the strength of a country’s economy is directly bound<br>up with the efficiency of its agriculture and industry, and that this in turn rests upon<br>the efforts of scientists and technologists of all kinds.—-&gt;此外，很明显国家的经济力量是直接与工农业效率紧密联系的，工农业的效率反过来又依赖各行各业的科学家和技术工人的努力<ol><li>furthermore=moreover 此外，而且</li><li>strength n.力量，力气，strengthen v.加强</li><li>bound up with 与…密切联系，bound n.界限</li><li>in turn 依次轮流，反过来</li></ol></li><li>常用的表达还有：<ol><li>It is important/vital/essential/crucial/necessary/natural/strange/surprising/possible/better that…</li><li>It is clear/obvious that…</li><li>It is possible/likely that…</li><li>It is certain that…—-&gt;确定的是…</li><li>It is fortunate that…—-&gt;幸运的是…</li><li>It is a fact that…</li><li>It is a piece of good news that…</li><li>It is a good thing that…</li><li>It is a shame that…—-&gt;…真是太不像话了</li><li>It is an honor that…—-&gt;…是一种荣誉</li><li>It is common knowledge that…—-&gt;…是一种常识</li><li>It is a miracle that…—-&gt;奇迹是…</li><li>It is a pity/no wonder that…—-&gt;难怪…</li><li>It seems that…—-&gt;似乎是…</li><li>It happens that…—-&gt;碰巧/恰巧…</li><li>It turns out that…—-&gt;结果证明是…</li></ol></li></ol><h2 id="宾语从句"><a href="#宾语从句" class="headerlink" title="宾语从句"></a>宾语从句</h2><ol start="7"><li>The researches suggest that capuchin monkeys, like humans, are guided by social<br>emotions.—-&gt;研究表明，像人一样的猴子被社会情绪指导<ol><li>suggest v.暗示表明，建议</li><li>unlike 不像</li><li>dislike 不喜欢</li><li>likely 可能的</li><li>unlikely 不可能的</li></ol></li><li>At the same time these computers record which hours are busiest and which employees are the most efficient, allowing personnel and staffing assignments to be made accordingly.—-&gt;同时，这些计算机记录下哪些时间是最忙的，哪些员工是最有效率的，这样就能有所根据的做出全体员工的分配<ol><li>record 记录</li><li>personnel n.人事部门，全体人员</li><li>assignment n.分配，任务，作业</li><li>according adj.有所根据的</li><li>后缀-ee表被动，-er表主动：employee雇员，employer雇工</li><li>retiree 退休人员，retire v.退休</li><li>donatee受赠人，donater捐赠人</li><li>payee 收款人，payer付款人</li></ol></li><li>The Biotechnology Industry Organization (BIO), a trade group, assured members that this was just a “preliminary step” in a longer battle.—-&gt;生物科技工业组织，一个贸易团体，向成员确保这仅仅是长战役中的初步步骤<ol><li>assure v.确保 assure sb sth 确保某人某事</li><li>preliminary adj.初始的，初步的</li><li>battle n.战斗，战争</li></ol></li><li>“The test of any democratic society,” he wrote in a Wall Street Journal column, “lies not in how well it can control expression but in whether it gives freedom of thought and expression the widest possible latitude.”—-&gt;他在《华尔街日报》的一片专栏中写道：民主社会的考验不在于它能在多大程度上控制言论而在于它是否能在可能广泛的范围中给与思想和言论的自由<ol><li>democratic 民主的，domestic 国内的</li><li>how well 在多大程度上，表程度</li><li>latitude 纬度，longitude 经度</li><li>attitude 态度，altitude 高度</li><li>gratitude 感恩，感谢</li></ol></li><li>Hearing allegations of cruelty to animals in research settings, many are perplexed that anyone would deliberately harm an animal.—-&gt;听到研究室对待动物残忍的断言，许多人很困惑：任何人将会故意伤害动物<ol><li>allegation 断言，宣称</li><li>cruelty 残忍的</li><li>setting 环境，实验室</li><li>perplex 迷惑的=confuse</li><li>deliberately 故意的，深思熟虑的</li><li>deliberation n.谨慎，从容</li></ol></li><li>We must make it clear that the parties involved are to make every effort to curb the<br>pollution.—-&gt;我们必须明确表示，相关部门将尽力控制污染<ol><li>party 相关部门，政党</li><li>involve 涉及</li><li>make every effort to 尽力做某事</li><li>spare no efforts to do n不遗余力做某事</li><li>curb 控制=control</li></ol></li><li>The kind of activity makes it less likely that the court’s decisions will be accepted as<br>impartial judgments.—-&gt;这种活动使法院的决定将会被公平判决所接受变得不大可能<ol><li>court n.法院</li><li>impartial 不偏不倚的（=fair=bias=unbiased）</li><li>partial 偏见的（=bias）</li></ol></li></ol><h2 id="表语从句"><a href="#表语从句" class="headerlink" title="表语从句"></a>表语从句</h2><ol start="13"><li>This may be because some people do not have the genes necessary to generate particular smell receptors in the nose.—-&gt;这可能因为一些人没有必要基因在鼻子中去生成特殊气味接收器<ol><li>receptor 接收器</li><li>receiver 接收者，收音机</li><li>recipient 受助者，受体</li></ol></li><li>It is as though 20 years of ever tougher reforms of the job search and benefit administration system never happened.—-&gt;这好像20年来求职和有益于管理体系的艰难改革从未发生过<ol><li>as though/if 似乎好像</li><li>ever+adj.比较级 表加强语气</li><li>tough adj.艰难的，严格的</li><li>tough girl 女汉子</li><li>tough guy 难缠的家伙</li><li>benefit 有益于，福利，救助金</li><li>（津贴，福利）<strong>allowance，subsidy，grant，bonus，pension，entitlement，compensation</strong></li></ol></li><li>One more reason not to lose sleep over the rise in oil prices is that, unlike the rises in the 1970, it has not occurred against the background of general commodity price inflation and global excess demand.—-&gt;不应因油价上涨而失眠的另一个原因是，不像在1970年上涨的那样，它并没有发生在商品价格普遍上涨的背景下通货膨胀和全球需求过剩。<ol><li>one more 再一个</li><li>lose sleep over <strong>担忧</strong></li><li>against the background of <strong>在…背景之下</strong></li><li>general 普通的（=common）</li><li>commodity 货物（=goods）</li><li>inflate 膨胀</li><li>excess adj.过量的，n.过量</li><li>excessive adj.过多的，极度的</li><li>excessively=extremely=very</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;v + sth + as + sth 把…看做…&lt;br&gt;sb + v + that从句  sb觉得..&lt;/p&gt;
&lt;h2 id=&quot;主语从句&quot;&gt;&lt;a href=&quot;#主语从句&quot; class=&quot;headerlink&quot; title=&quot;主语从句&quot;&gt;&lt;/a&gt;主语从句&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;That the plates are moving is now beyond dispute.—-&amp;gt;毋庸置疑现在陆板块在移动&lt;ol&gt;
&lt;li&gt;plate n.盘子，大陆板块&lt;/li&gt;
&lt;li&gt;dispute v.争议&lt;/li&gt;
&lt;li&gt;beyond dispute=beyond doubt 毋庸置疑的&lt;/li&gt;
&lt;li&gt;beyond words 溢于言表&lt;/li&gt;
&lt;li&gt;beyond our control 失控&lt;/li&gt;
&lt;li&gt;beyond the comprehension 无法理解的  comprehension n.理解，包含&lt;/li&gt;
&lt;li&gt;the year 2020 and beyond 2020年及以后&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Where to turn for expert information is question facing many people today.—-&amp;gt;向哪儿寻求专门的信息是今天摆在大家免检的问题&lt;ol&gt;
&lt;li&gt;turn for 寻求，为了&lt;/li&gt;
&lt;li&gt;expert n.专家  adj.专门的，熟练的&lt;/li&gt;
&lt;li&gt;face 摆在…面前，物+face+人，人+be faced with+物&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Whether the results will be valuable, meaningless, or even misleading depends partly upon the tool itself but largely upon the user.—-&amp;gt;结果是否是有价值的，无意义的或甚至误导的部分取决于工具本身而大部分取决于使用者&lt;ol&gt;
&lt;li&gt;depend on/upon = rely on/upon = rest on = lean on &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;It may be said that the measure of the worth of any social institution is its effect in enlarging and improving experience.—-&amp;gt;可以说，任何社会机构在丰富经验上的作用是值得衡量的&lt;ol&gt;
&lt;li&gt;measure n.措施，&lt;strong&gt;衡量&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;institution n.体系，机构，学校&lt;/li&gt;
&lt;li&gt;effect n.影响，作用&lt;/li&gt;
&lt;li&gt;effective adj.有作用的&lt;/li&gt;
&lt;li&gt;efficiency n.效率，功效&lt;/li&gt;
&lt;li&gt;efficient adj.有效率的&lt;/li&gt;
&lt;li&gt;experience n.经历，经验&lt;/li&gt;
&lt;li&gt;A of B of C—-&amp;gt;C的B的A&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>2003TextTwo单词</title>
    <link href="http://yoursite.com/2020/03/06/2003TextTwo%E5%8D%95%E8%AF%8D/"/>
    <id>http://yoursite.com/2020/03/06/2003TextTwo%E5%8D%95%E8%AF%8D/</id>
    <published>2020-03-06T13:47:22.000Z</published>
    <updated>2020-03-08T11:58:58.545Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><p>paraphrase n&amp;v释义</p><ol><li>para- 表时“在旁边，辅助”</li><li>phrase 短语</li><li>paragraph 短评   graph写</li><li>parameter 参数   meter计量</li><li>parasite 寄生虫  site地点</li></ol></li><li><p>biomedical 生物医学的</p></li><li><p>advocate v.提倡 n.提倡者，辩护人</p></li><li><p>argument 辩论，论据，论点</p><ol><li>argue 辩论，主张</li></ol></li><li><p>allegation 断言</p><ol><li>announce 宣布</li><li>declare 宣布</li><li>proclaim 宣布</li></ol></li><li><p>perplex 使困惑，使复杂化</p><ol><li>complex 复杂的，综合的，联合体</li></ol></li><li><p>brochure 小册子</p><ol><li>brother 兄弟   兄弟们手里拿着小册子 </li></ol></li><li><p>immunization n.免疫作用</p><ol><li>immune adj.免疫的，免除的</li><li>immunity n.免疫，免除</li><li>immunize v.使免疫，使免除</li></ol></li><li><p>vaccine 疫苗</p><ol><li>vaccination 接种疫苗</li><li>a microbe with its face washed 疫苗–&gt;洗过脸的微生物。</li></ol></li><li><p>epidemic 流行的，流行病</p><ol><li>academic 学术的，理论的<a id="more"></a></li></ol></li><li><p>deceptive 欺骗的，蒙蔽的，虚伪的</p><ol><li>deceive v.欺骗，蒙蔽</li><li>deception n.欺骗，蒙蔽</li><li>receptive 善于接受的</li><li>receive v.接收，接待</li><li>reception 接收，招待，招待会</li></ol></li><li><p>ultimate 最终的，根本的</p><ol><li>The ultimate measure of a man is not where he stands in moments of comfort and convenience, but where he stands at times of challenge and controversy</li><li>衡量一个人的最终尺度，不是看他在舒适顺利的时候站在哪里，而是看他在受到非难和争议的时候站在哪里。</li></ol></li><li><p>recruit v.征兵，招募</p><ol><li>cruit词根意为创造</li></ol></li><li><p>vicious 邪恶的，恶毒的</p><ol><li>vice n.恶毒，邪恶</li><li>virus n.病毒 </li><li>virtuous 善良的，有道德的</li><li>The more virtuous any man is, the less easily does he suspect others to be vicious。</li><li>任何人越高尚，就越不容易疑心别人邪恶。</li></ol></li><li><p>ignorance 无知，不知道</p><ol><li>ignorant 无知的</li><li>ignore 忽视</li><li>It is impossible to defeat an ignorant man in argument.在争论中无法击败无知者</li></ol></li><li><p>extinguish v.熄灭，灭绝</p><ol><li>extinct adj.熄灭的，灭绝的</li><li>distinguish v区别，辨别</li><li>distinct adj.独特的，明显的</li><li>inflame v.使燃烧，激怒</li><li>Absence is to love what wind is to fire; it extinguishes the small, it inflames the great.离别之于爱情有如风之于火，它熄灭小火，却使大火燃烧更旺。</li></ol></li><li><p>bypass n.支路，旁路 v.绕开，避开，忽视</p></li><li><p>ember 灰烬（但火焰尚未完全熄灭）</p><ol><li>embers 余烬；余火；小火苗</li></ol></li><li><p>statesman 政治家</p></li><li><p>triumph 胜利，凯旋</p></li><li><p>confuse 使迷惑  refuse拒绝</p></li><li><p>thereby 从而，因此  whereby 凭什么</p></li><li><p>allegation n.指控，陈述，主张，宣称</p></li><li><p>cruelty n.残酷，残忍  cruel 残酷的，残忍的</p></li><li><p>deliberately 故意地；谨慎地</p></li><li><p>grandmotherly 慈祥的</p></li><li><p>compassionate adj.富有同情心的，慈悲的  v.同情，怜悯</p></li><li><p>human terms 人类术语</p></li><li><p>molecular adj. 分子的；由分子组成的</p></li><li><p>hip n. 臀部；蔷薇果；忧郁  adj. 熟悉内情的；非常时尚的</p></li><li><p>adopt v.采取，接受，收养</p><ol><li>adapt v.适应</li></ol></li><li><p>courageous 勇敢的，有胆量的==brave</p></li><li><p>institutions 体系</p></li><li><p>laboratory 实验室</p></li><li><p>stakeholder 利益相关者</p><ol><li>stake n.棍子，赌注</li><li>holder n.持有人，所有人</li></ol></li><li><p>precious 宝贵的，珍贵的</p><ol><li>previous 早先的，先前的</li></ol></li><li><p>forcefully 强有力的，激烈的</p></li><li><p>booth 货摊</p></li><li><p>…at best …at worst 往最好的方面看……往最坏的方面看……</p><ol><li>animal research seems wasteful at best and cruel at worst</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;paraphrase n&amp;amp;v释义&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;para- 表时“在旁边，辅助”&lt;/li&gt;
&lt;li&gt;phrase 短语&lt;/li&gt;
&lt;li&gt;paragraph 短评   graph写&lt;/li&gt;
&lt;li&gt;parameter 参数   meter计量&lt;/li&gt;
&lt;li&gt;parasite 寄生虫  site地点&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;biomedical 生物医学的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;advocate v.提倡 n.提倡者，辩护人&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;argument 辩论，论据，论点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;argue 辩论，主张&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;allegation 断言&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;announce 宣布&lt;/li&gt;
&lt;li&gt;declare 宣布&lt;/li&gt;
&lt;li&gt;proclaim 宣布&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;perplex 使困惑，使复杂化&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;complex 复杂的，综合的，联合体&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;brochure 小册子&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;brother 兄弟   兄弟们手里拿着小册子 &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;immunization n.免疫作用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;immune adj.免疫的，免除的&lt;/li&gt;
&lt;li&gt;immunity n.免疫，免除&lt;/li&gt;
&lt;li&gt;immunize v.使免疫，使免除&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vaccine 疫苗&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;vaccination 接种疫苗&lt;/li&gt;
&lt;li&gt;a microbe with its face washed 疫苗–&amp;gt;洗过脸的微生物。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;epidemic 流行的，流行病&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;academic 学术的，理论的&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>8-Hibernate检索方式</title>
    <link href="http://yoursite.com/2020/03/06/8-Hibernate%E6%A3%80%E7%B4%A2%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/03/06/8-Hibernate%E6%A3%80%E7%B4%A2%E6%96%B9%E5%BC%8F/</id>
    <published>2020-03-06T02:44:37.000Z</published>
    <updated>2020-03-06T03:37:58.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="3种检索方式"><a href="#3种检索方式" class="headerlink" title="3种检索方式"></a>3种检索方式</h2><ul><li>HQL检索方式：使用面向对象的HQL查询语言。（使用最广的，最常用的）</li><li>QBC检索方式：使用QBC（Query By Criteria）API来检索对象。这种API封装了基于字符串形式的查询语句，提供了更加面向对象的接口。</li><li>本地SQL检索方式：使用本地数据库的SQL查询语句。（简单来说就是普通的sql语句查找，只不过调用NativeQuery接口）</li></ul><h2 id="HQL检索方式"><a href="#HQL检索方式" class="headerlink" title="HQL检索方式"></a>HQL检索方式</h2><ol><li>HQL语句中<strong>关键字大小写无关</strong>，但习惯将关键字小写。</li><li>from 关键字后面<strong>是类名不是数据库表名</strong>，类名需<strong>区分大小写</strong>。</li><li>where 子句中给出的是<strong>类的属性名而不是数据库表字段名</strong>，其中属性名<strong>必须区分大小写</strong>。</li></ol><a id="more"></a><p>查询返回结果</p><ul><li>list()：返回List类型的查询结果，返回所有满足条件的对象。</li><li>uniqueResult()：返回单个对象</li></ul><p>where子句支持的各种运算符。</p><table><thead><tr><th align="center">程序中指定的连接类型</th><th align="center">HQL运算符</th></tr></thead><tbody><tr><td align="center">比较运算符</td><td align="center">=、&lt;&gt;、&gt;=、&lt;=、&gt;、&lt;、is null、is not null</td></tr><tr><td align="center">范围运算符</td><td align="center">in、not in、between…and、not between…and</td></tr><tr><td align="center">字符串模式匹配运算符</td><td align="center">like</td></tr><tr><td align="center">逻辑运算符</td><td align="center">and、or、not</td></tr></tbody></table><p>HQL缺点：</p><ul><li>代码更加零乱，可读性降低；</li><li>难以进行性能优化；</li><li>引入额外的安全风险。</li></ul><p>HQL子查询：</p><ol><li>size()，获得集合中元素的个数；</li><li>maxIndex()，对于建立索引的集合，获得最大索引值；</li><li>minIndex()，对于建立索引的集合，获得最小索引值；</li><li>elements()，获得集合中所有元素。</li></ol><h3 id="检索所有记录"><a href="#检索所有记录" class="headerlink" title="检索所有记录"></a>检索所有记录</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"select u from User u"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="多态查询：查询出当前类以及所有子类的实例。"><a href="#多态查询：查询出当前类以及所有子类的实例。" class="headerlink" title="多态查询：查询出当前类以及所有子类的实例。"></a>多态查询：查询出当前类以及所有子类的实例。</h3><p>Employee 有两个子类：HourlyEmployee 和SalariedEmployee。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Query query = session.createQuery(<span class="string">"from Employee"</span>);</span><br><span class="line">List employeeList = query.list();</span><br></pre></td></tr></table></figure><h3 id="检索单独字段"><a href="#检索单独字段" class="headerlink" title="检索单独字段"></a>检索单独字段</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"select u.userName from User u"</span>;<span class="comment">//返回所有userName，其中涉及别名u</span></span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="检索多个字段，list-返回结果中List元素类型为Object数组"><a href="#检索多个字段，list-返回结果中List元素类型为Object数组" class="headerlink" title="检索多个字段，list()返回结果中List元素类型为Object数组"></a>检索多个字段，list()返回结果中List元素类型为Object数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"select u.userName, u.password from User u"</span>; </span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List&lt;Object[]&gt; userList = query.list();</span><br><span class="line">Iterator&lt;Object[]&gt; it = userList.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Object[] val = it.next();</span><br><span class="line">    System.out.println(val[<span class="number">0</span>]);</span><br><span class="line">    System.out.println(val[<span class="number">1</span>] + <span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询多个字段，并将list-返回结果中List元素改为User对象引用，需在User中添加相应的构造方法"><a href="#查询多个字段，并将list-返回结果中List元素改为User对象引用，需在User中添加相应的构造方法" class="headerlink" title="查询多个字段，并将list()返回结果中List元素改为User对象引用，需在User中添加相应的构造方法"></a>查询多个字段，并将list()返回结果中List元素改为User对象引用，需在User中添加相应的构造方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"select new User(u.userName, u.password) from User u"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List&lt;User&gt; userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="where子句"><a href="#where子句" class="headerlink" title="where子句"></a>where子句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User u where u.userName='zs3'"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List&lt;User&gt; userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="返回单个对象"><a href="#返回单个对象" class="headerlink" title="返回单个对象"></a>返回单个对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User u where u.userName='zs3'"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">User user = (User) query.uniqueResult();</span><br><span class="line">System.out.println(user);</span><br></pre></td></tr></table></figure><h3 id="group-by-子句"><a href="#group-by-子句" class="headerlink" title="group by 子句"></a>group by 子句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User u Order by u.userName"</span>;</span><br><span class="line">String hql = <span class="string">"from User u Order by u.userName desc"</span>;</span><br><span class="line">String hql = <span class="string">"from User u Order by u.userName, u.id desc"</span>;<span class="comment">//降序</span></span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List&lt;User&gt; userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="order-by子句"><a href="#order-by子句" class="headerlink" title="order by子句"></a>order by子句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User u group by u.age having u.id &lt; 5"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List&lt;User&gt; userList = query.getResultList();</span><br><span class="line">List&lt;User&gt; userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="having子句"><a href="#having子句" class="headerlink" title="having子句"></a>having子句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User u group by u.age having u.id &lt; 5"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List&lt;User&gt; userList = query.getResultList();</span><br><span class="line">List&lt;User&gt; userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="参数绑定"><a href="#参数绑定" class="headerlink" title="参数绑定"></a>参数绑定</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User u where u.userName=?"</span>;</span><br><span class="line">String hql = <span class="string">"from User u where u.userName=:userName"</span>;<span class="comment">//对应setProperties</span></span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line"></span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUserName(<span class="string">"zs5"</span>);</span><br><span class="line">query.setProperties(user);<span class="comment">//用于把命名参数与一个对象的属性值绑定，并且参数名称要与对象属性名称一致。</span></span><br><span class="line"></span><br><span class="line">query.setParameter(<span class="number">0</span>, user);<span class="comment">//setParameter() 参数位置从0开始</span></span><br><span class="line"></span><br><span class="line">query.setParameter(<span class="number">0</span>, <span class="string">"zs6"</span>);</span><br><span class="line"></span><br><span class="line">query.setParameter(<span class="string">"userName"</span>,<span class="string">"zs6"</span>);</span><br><span class="line"></span><br><span class="line">List&lt;User&gt; userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="delete语句"><a href="#delete语句" class="headerlink" title="delete语句"></a>delete语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"delete from Users where id = ?"</span>;</span><br><span class="line">Query queryDelete = session.createQuery(hql);</span><br><span class="line">queryDelete.setParameter(<span class="string">"id"</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> num = queryDelete.executeUpdate();</span><br><span class="line">System.out.println(num);</span><br></pre></td></tr></table></figure><h3 id="update语句"><a href="#update语句" class="headerlink" title="update语句"></a>update语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"update User set userName=:name where id=:id"</span>;</span><br><span class="line">Query queryUpdate = session.createQuery(hql);</span><br><span class="line">queryUpdate.setParameter(<span class="string">"name"</span>, <span class="string">"lucy"</span>);</span><br><span class="line">queryUpdate.setParameter(<span class="string">"id"</span>, <span class="keyword">new</span> Integer(<span class="number">2</span>));</span><br><span class="line"><span class="keyword">int</span> row = queryUpdate.executeUpdate();</span><br><span class="line">System.out.println(row);</span><br></pre></td></tr></table></figure><h3 id="where子句中嵌入子查询"><a href="#where子句中嵌入子查询" class="headerlink" title="where子句中嵌入子查询"></a>where子句中嵌入子查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User u where (select count(o) from u.orderSet o) &gt; 0"</span>;<span class="comment">//此处where不能是count(orderSet)&gt;0,因为orderSet是集合</span></span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">List userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String hql = <span class="string">"from User"</span>;</span><br><span class="line">Query query = session.createQuery(hql);</span><br><span class="line">query.setFirstResult(<span class="number">0</span>);<span class="comment">//设定从哪个对象开始检索。</span></span><br><span class="line">query.setMaxResults(<span class="number">3</span>);<span class="comment">//设定一次检索对象的数目。</span></span><br><span class="line">List&lt;User&gt; userList = query.list();</span><br><span class="line">System.out.println(userList);</span><br></pre></td></tr></table></figure><h3 id="引用查询"><a href="#引用查询" class="headerlink" title="引用查询"></a>引用查询</h3><p>在O/R映射xml文件中：<code>&lt;query name=&quot;findUser&quot;&gt;from User&lt;/query&gt;</code><br>java:<code>Query query = session.createNamedQuery(&quot;findUser&quot;,User.class);</code></p><h2 id="QBC检索方式"><a href="#QBC检索方式" class="headerlink" title="QBC检索方式"></a>QBC检索方式</h2><p>看作是传统SQL的对象化表示</p><p>Restrictions类:</p><table><thead><tr><th align="left">运算类型</th><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">比较运算符</td><td align="left">Restrictions.eq</td><td align="left">等于</td></tr><tr><td align="left">比较运算符</td><td align="left">Restrictions.ne</td><td align="left">不等于</td></tr><tr><td align="left">比较运算符</td><td align="left">Restrictions.gt</td><td align="left">大于</td></tr><tr><td align="left">比较运算符</td><td align="left">Restrictions.ge</td><td align="left">大于等于</td></tr><tr><td align="left">比较运算符</td><td align="left">Restrictions.lt</td><td align="left">小于</td></tr><tr><td align="left">比较运算符</td><td align="left">Restrictions.le</td><td align="left">小于等于</td></tr><tr><td align="left">比较运算符</td><td align="left">Restrictions.isNull</td><td align="left">等于空值</td></tr><tr><td align="left">比较运算符</td><td align="left">Restrictions.isNotNull</td><td align="left">非空值</td></tr><tr><td align="left">范围运算符</td><td align="left">Restrictions.in</td><td align="left">等于列表中的某个值</td></tr><tr><td align="left">范围运算符</td><td align="left">Restrictions.not(Restrictions.in)</td><td align="left">不等于列表中的任意值</td></tr><tr><td align="left">范围运算符</td><td align="left">Restrictions.between</td><td align="left">大于等于值1小于等于值2</td></tr><tr><td align="left">字符串模糊匹配</td><td align="left">Restrictions.like</td><td align="left">字符串模糊匹配 like</td></tr><tr><td align="left">逻辑运算符</td><td align="left">Restrictions.and</td><td align="left">逻辑与</td></tr><tr><td align="left">逻辑运算符</td><td align="left">Restrictions.or</td><td align="left">逻辑或</td></tr><tr><td align="left">逻辑运算符</td><td align="left">Restrictions.not</td><td align="left">逻辑非</td></tr><tr><td align="left">### 检索姓名为 zs8 的所有用户</td><td align="left"></td><td align="left"></td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建Criteria对象</span></span><br><span class="line">Criteria criteria=session.createCriteria(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="comment">//2.设置条件</span></span><br><span class="line">Criterion c1= Restrictions.eq(<span class="string">"userName"</span>, <span class="string">"zs8"</span>);</span><br><span class="line">Criterion c2= Restrictions.eq(<span class="string">"password"</span>, <span class="string">"1238"</span>);<span class="comment">//多项查询</span></span><br><span class="line">Criterion criterion=Restrictions.and(c1,c2);</span><br><span class="line"></span><br><span class="line">Criterion c1= Restrictions.between(<span class="string">"id"</span>,<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line">            </span><br><span class="line"><span class="comment">//3.加到对象中去</span></span><br><span class="line">criteria.add(c1);</span><br><span class="line"></span><br><span class="line">criteria.add(criterion);</span><br><span class="line"><span class="comment">//4.执行查询</span></span><br><span class="line">List result = criteria.list();</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><h2 id="本地SQL检索方式"><a href="#本地SQL检索方式" class="headerlink" title="本地SQL检索方式"></a>本地SQL检索方式</h2><p>一般的数据库语句(与hibernate无关，只是提供了一个接口)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String sql=<span class="string">"select * from  user8"</span>;</span><br><span class="line">NativeQuery query = session.createNativeQuery(sql, User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">List list = query.list();</span><br><span class="line">System.out.println(list);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;3种检索方式&quot;&gt;&lt;a href=&quot;#3种检索方式&quot; class=&quot;headerlink&quot; title=&quot;3种检索方式&quot;&gt;&lt;/a&gt;3种检索方式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;HQL检索方式：使用面向对象的HQL查询语言。（使用最广的，最常用的）&lt;/li&gt;
&lt;li&gt;QBC检索方式：使用QBC（Query By Criteria）API来检索对象。这种API封装了基于字符串形式的查询语句，提供了更加面向对象的接口。&lt;/li&gt;
&lt;li&gt;本地SQL检索方式：使用本地数据库的SQL查询语句。（简单来说就是普通的sql语句查找，只不过调用NativeQuery接口）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;HQL检索方式&quot;&gt;&lt;a href=&quot;#HQL检索方式&quot; class=&quot;headerlink&quot; title=&quot;HQL检索方式&quot;&gt;&lt;/a&gt;HQL检索方式&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;HQL语句中&lt;strong&gt;关键字大小写无关&lt;/strong&gt;，但习惯将关键字小写。&lt;/li&gt;
&lt;li&gt;from 关键字后面&lt;strong&gt;是类名不是数据库表名&lt;/strong&gt;，类名需&lt;strong&gt;区分大小写&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;where 子句中给出的是&lt;strong&gt;类的属性名而不是数据库表字段名&lt;/strong&gt;，其中属性名&lt;strong&gt;必须区分大小写&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>考研数学必记公式3.2-3.7</title>
    <link href="http://yoursite.com/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/"/>
    <id>http://yoursite.com/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/</id>
    <published>2020-03-05T14:11:41.000Z</published>
    <updated>2020-03-16T14:52:27.422Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="3-2必记公式"><a href="#3-2必记公式" class="headerlink" title="3.2必记公式"></a>3.2必记公式</h2><a id="more"></a><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/2020-03-05_222447.png" alt></p><h2 id="3-3必记公式"><a href="#3-3必记公式" class="headerlink" title="3.3必记公式"></a>3.3必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/2020-03-05_222507.png" alt><br><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/2020-03-06_171310.png" alt></p><h2 id="3-4必记公式"><a href="#3-4必记公式" class="headerlink" title="3.4必记公式"></a>3.4必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/2020-03-05_222521.png" alt></p><h2 id="3-5必记公式"><a href="#3-5必记公式" class="headerlink" title="3.5必记公式"></a>3.5必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/2020-03-05_222532.png" alt></p><h2 id="3-6必记公式"><a href="#3-6必记公式" class="headerlink" title="3.6必记公式"></a>3.6必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/2020-03-05_222544.png" alt></p><h2 id="3-7必记公式"><a href="#3-7必记公式" class="headerlink" title="3.7必记公式"></a>3.7必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F3-2-3-7/2020-03-05_222558.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;3-2必记公式&quot;&gt;&lt;a href=&quot;#3-2必记公式&quot; class=&quot;headerlink&quot; title=&quot;3.2必记公式&quot;&gt;&lt;/a&gt;3.2必记公式&lt;/h2&gt;
    
    </summary>
    
    
      <category term="考研数学" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>考研数学必记公式2.24-2.29</title>
    <link href="http://yoursite.com/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/"/>
    <id>http://yoursite.com/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/</id>
    <published>2020-03-05T14:11:29.000Z</published>
    <updated>2020-03-16T14:52:27.421Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2-24必记公式"><a href="#2-24必记公式" class="headerlink" title="2.24必记公式"></a>2.24必记公式</h2><a id="more"></a><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/2020-03-05_222028.png" alt></p><h2 id="2-25必记公式"><a href="#2-25必记公式" class="headerlink" title="2.25必记公式"></a>2.25必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/2020-03-05_222045.png" alt></p><h2 id="2-26必记公式"><a href="#2-26必记公式" class="headerlink" title="2.26必记公式"></a>2.26必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/2020-03-05_222057.png" alt></p><h2 id="2-27必记公式"><a href="#2-27必记公式" class="headerlink" title="2.27必记公式"></a>2.27必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/2020-03-05_222112.png" alt></p><h2 id="2-28必记公式"><a href="#2-28必记公式" class="headerlink" title="2.28必记公式"></a>2.28必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/2020-03-05_222124.png" alt></p><h2 id="2-29必记公式"><a href="#2-29必记公式" class="headerlink" title="2.29必记公式"></a>2.29必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-24-2-29/2020-03-05_222133.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2-24必记公式&quot;&gt;&lt;a href=&quot;#2-24必记公式&quot; class=&quot;headerlink&quot; title=&quot;2.24必记公式&quot;&gt;&lt;/a&gt;2.24必记公式&lt;/h2&gt;
    
    </summary>
    
    
      <category term="考研数学" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>考研数学必记公式2.17-2.22</title>
    <link href="http://yoursite.com/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/"/>
    <id>http://yoursite.com/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/</id>
    <published>2020-03-05T14:11:10.000Z</published>
    <updated>2020-03-16T14:52:27.421Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2-17必记公式"><a href="#2-17必记公式" class="headerlink" title="2.17必记公式"></a>2.17必记公式</h2><a id="more"></a><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/2020-03-05_221648.png" alt></p><h2 id="2-18必记公式"><a href="#2-18必记公式" class="headerlink" title="2.18必记公式"></a>2.18必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/2020-03-05_221720.png" alt></p><h2 id="2-19必记公式"><a href="#2-19必记公式" class="headerlink" title="2.19必记公式"></a>2.19必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/2020-03-05_221737.png" alt></p><h2 id="2-20必记公式"><a href="#2-20必记公式" class="headerlink" title="2.20必记公式"></a>2.20必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/2020-03-05_221803.png" alt></p><h2 id="2-21必记公式"><a href="#2-21必记公式" class="headerlink" title="2.21必记公式"></a>2.21必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/2020-03-05_221825.png" alt></p><h2 id="2-22必记公式"><a href="#2-22必记公式" class="headerlink" title="2.22必记公式"></a>2.22必记公式</h2><p><img src="/2020/03/05/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6%E5%BF%85%E8%AE%B0%E5%85%AC%E5%BC%8F2-17-2-22/2020-03-05_221842.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2-17必记公式&quot;&gt;&lt;a href=&quot;#2-17必记公式&quot; class=&quot;headerlink&quot; title=&quot;2.17必记公式&quot;&gt;&lt;/a&gt;2.17必记公式&lt;/h2&gt;
    
    </summary>
    
    
      <category term="考研数学" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>2003TextOne单词</title>
    <link href="http://yoursite.com/2020/03/05/2003TextOne%E5%8D%95%E8%AF%8D/"/>
    <id>http://yoursite.com/2020/03/05/2003TextOne%E5%8D%95%E8%AF%8D/</id>
    <published>2020-03-05T13:39:45.000Z</published>
    <updated>2020-03-05T14:32:09.902Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li>spymaster 间谍组织首脑<ul><li>spying 间谍，侦探</li><li>master n.主人，大师，有能力的人 adj.主要的，熟练的</li></ul></li><li>strategy n.策略<ul><li>strategic adj.策略的，战略的</li></ul></li><li>later 后来<ul><li>latest 最近的</li></ul></li><li>lay the roots for 扎根于</li><li>fascinate 使着迷</li><li>espionage 间谍，间谍活动</li><li>pastimes 消遣</li><li>go on 持续</li><li>give birth to 分娩，产生，造成</li><li>point-and-click 点击<a id="more"></a></li><li>spook 间谍，幽灵</li><li>crisis 危机</li><li>sign-up 注册，签约</li><li>a lean staff 一位精干的员工</li><li>brief 简报</li><li>back-and-forthing 来来回回</li><li>whereby 凭什么</li><li>dramatic 戏剧性的，激动人心的，激烈的</li><li>on the chance +that从句  也许能够做某事</li><li>revolution 革命，<strong>旋转</strong><ul><li>reform and innovation 改革创新</li></ul></li><li>influential 有影响的，<strong>有权势的</strong></li><li>compile 编辑，收集<ul><li>pile 堆</li><li>compilation 编撰</li></ul></li><li>splash 溅（拟声词）<ul><li>make a splash 炫耀财富</li></ul></li><li>mutually 相互地<ul><li>mute 哑的</li></ul></li><li>reinforce 增援，加强==enforce<ul><li>reinforce concrete 钢筋混凝土</li></ul></li><li>emergence n.显现<ul><li>emerge v.浮现，暴露</li><li>merge v.合并，吞并</li></ul></li><li>margin 边缘，利润</li><li>corporation 公司</li><li>president 总统</li><li>prediction 预言，预测</li><li>revive  复苏，恢复</li><li>nonconformist 不合传统规范的，不合传统规范的人<ul><li>non-不</li><li>conform 遵守</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;spymaster 间谍组织首脑&lt;ul&gt;
&lt;li&gt;spying 间谍，侦探&lt;/li&gt;
&lt;li&gt;master n.主人，大师，有能力的人 adj.主要的，熟练的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;strategy n.策略&lt;ul&gt;
&lt;li&gt;strategic adj.策略的，战略的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;later 后来&lt;ul&gt;
&lt;li&gt;latest 最近的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;lay the roots for 扎根于&lt;/li&gt;
&lt;li&gt;fascinate 使着迷&lt;/li&gt;
&lt;li&gt;espionage 间谍，间谍活动&lt;/li&gt;
&lt;li&gt;pastimes 消遣&lt;/li&gt;
&lt;li&gt;go on 持续&lt;/li&gt;
&lt;li&gt;give birth to 分娩，产生，造成&lt;/li&gt;
&lt;li&gt;point-and-click 点击&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="考研英语" scheme="http://yoursite.com/categories/%E8%80%83%E7%A0%94%E8%8B%B1%E8%AF%AD/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>mysql中的4中外键形式</title>
    <link href="http://yoursite.com/2020/03/05/mysql%E4%B8%AD%E7%9A%844%E4%B8%AD%E5%A4%96%E9%94%AE%E5%BD%A2%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/03/05/mysql%E4%B8%AD%E7%9A%844%E4%B8%AD%E5%A4%96%E9%94%AE%E5%BD%A2%E5%BC%8F/</id>
    <published>2020-03-05T08:47:45.000Z</published>
    <updated>2020-03-05T08:51:12.085Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用Navicat for mysql设计外键的时候，删除时和更新时两列有四个值可以选择：</p><ol><li>CASCADE<ul><li>父表delete、update的时候，子表会delete、update掉关联记录；</li></ul></li><li>NO ACTION<ul><li>父表delete、update的时候，子表会将关联记录的外键字段所在列设为null，所以注意在设计子表时外键不能设为not null；</li></ul></li><li>RESTRICT<ul><li>如果想要删除父表的记录时，而在子表中有关联该父表的记录，则不允许删除父表中的记录；</li></ul></li><li>SET NULL<ul><li>同 RESTRICT，也是首先先检查外键；</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate小例子</title>
    <link href="http://yoursite.com/2020/03/04/Hibernate%E5%B0%8F%E4%BE%8B%E5%AD%90/"/>
    <id>http://yoursite.com/2020/03/04/Hibernate%E5%B0%8F%E4%BE%8B%E5%AD%90/</id>
    <published>2020-03-04T03:21:53.000Z</published>
    <updated>2020-03-04T04:19:47.829Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="引例"><a href="#引例" class="headerlink" title="引例"></a>引例</h2><p>高考录取之后，要给录取的学生分配相关信息，需要一个学生管理系统，已知基本信心包含姓名、学号，学生还有年龄，需要给学生制作一卡通，一卡通中包含基本信息和银行卡号，还要给学生分配班级，开学后学生选课后保存选课信息。</p><ol><li>实现保存班级、保存学生信息及一卡通信息</li><li>学生选课后保存选课信息</li><li>通过查询一个学生能够找到一卡通，也能通过一卡通定位到学生</li><li>通过查询一个学生能够知道他所在班级，通过班级能找到这个班的所有学生</li><li>通过找学生能够找到所选择的课程，通过课程能找到选修这门课的所有学生</li></ol><a id="more"></a><h2 id="整理出相关信息并列表如下"><a href="#整理出相关信息并列表如下" class="headerlink" title="整理出相关信息并列表如下"></a>整理出相关信息并列表如下</h2><p>Student表</p><table><thead><tr><th align="center">字段</th><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Id</td><td align="center">int</td><td align="center">自增字段</td></tr><tr><td align="center">name</td><td align="center">string</td><td align="center">姓名</td></tr><tr><td align="center">number</td><td align="center">string</td><td align="center">学号</td></tr><tr><td align="center">age</td><td align="center">int</td><td align="center">年龄</td></tr><tr><td align="center">classId</td><td align="center">int</td><td align="center">班级id</td></tr></tbody></table><p>IdCard表</p><table><thead><tr><th align="center">字段</th><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Id</td><td align="center">int</td><td align="center">自增字段</td></tr><tr><td align="center">bankNo</td><td align="center">string</td><td align="center">银行卡号</td></tr><tr><td align="center">StudentId</td><td align="center">int</td><td align="center">学生id</td></tr></tbody></table><p>BaseClass表(不使用Class,与关键字class冲突)</p><table><thead><tr><th align="center">字段</th><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Id</td><td align="center">int</td><td align="center">自增字段</td></tr><tr><td align="center">name</td><td align="center">string</td><td align="center">班级名</td></tr></tbody></table><p>Course表</p><table><thead><tr><th align="center">字段</th><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Id</td><td align="center">int</td><td align="center">自增字段</td></tr><tr><td align="center">name</td><td align="center">string</td><td align="center">课程名</td></tr></tbody></table><p>StudentCourse表</p><table><thead><tr><th align="center">字段</th><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">studentId</td><td align="center">int</td><td align="center">学生id</td></tr><tr><td align="center">courseId</td><td align="center">int</td><td align="center">课程id</td></tr></tbody></table><h2 id="研究关联映射类型"><a href="#研究关联映射类型" class="headerlink" title="研究关联映射类型"></a>研究关联映射类型</h2><ul><li><p>学生和一卡通：一对一</p><ul><li>学生类中添加加一卡通属性</li><li>一卡通类中添加学生属性</li><li>一卡通类中添加学生id外键</li><li>相对应的xml文件添加<code>&lt;one-to-one name=&quot;&quot; property-ref=&quot;&quot; cascade=&quot;&quot; &gt;&lt;/one-to-one&gt;</code></li></ul></li><li><p>学生和班级：多对一</p><ul><li><p>学生表中添加班级id外键</p></li><li><p>在班级类中添加set集合<code>Set&lt;Student&gt; students = new HashSet&lt;&gt;(0);</code></p></li><li><p>相对应的在各自的xml文件中添加<br><code>&lt;many-to-one name=&quot;&quot; column=&quot;&quot;&gt;&lt;/many-to-one&gt;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">cascade</span>=<span class="string">"save-update"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>学生和课程：多对多</p><ul><li>在学生类中添加<code>Set&lt;Course&gt; courses = new HashSet&lt;&gt;()</code></li><li>在课程类中添加<code>Set&lt;Student&gt; students = new HashSet&lt;&gt;();</code></li><li>衍生出StudentCourse表，添加相对应外键</li><li>在各自的xml文件添加<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">table</span>=<span class="string">""</span> <span class="attr">inverse</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"studentId"</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">""</span> <span class="attr">column</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">many-to-many</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建数据库student-management-system"><a href="#创建数据库student-management-system" class="headerlink" title="创建数据库student_management_system"></a>创建数据库student_management_system</h2></li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`class`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`class`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">2</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`course`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`course`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`idcard`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`idcard`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`bankNo`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`studentId`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`studentId`</span> (<span class="string">`studentId`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`idcard_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`studentId`</span>) <span class="keyword">REFERENCES</span> <span class="string">`student`</span> (<span class="string">`id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">4</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`student`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`student`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`number`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`age`</span> <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`classId`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`classId`</span> (<span class="string">`classId`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`student_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`classId`</span>) <span class="keyword">REFERENCES</span> <span class="string">`class`</span> (<span class="string">`id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">4</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`studentcourse`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`studentcourse`</span> (</span><br><span class="line">  <span class="string">`studentId`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`courseId`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`studentId`</span> (<span class="string">`studentId`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`courseId`</span> (<span class="string">`courseId`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`studentcourse_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`studentId`</span>) <span class="keyword">REFERENCES</span> <span class="string">`student`</span> (<span class="string">`id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span>,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`studentcourse_ibfk_2`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`courseId`</span>) <span class="keyword">REFERENCES</span> <span class="string">`course`</span> (<span class="string">`id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h2 id="eclipse创建4个类及其相对应的xml文件-注解方式有时间再写"><a href="#eclipse创建4个类及其相对应的xml文件-注解方式有时间再写" class="headerlink" title="eclipse创建4个类及其相对应的xml文件(注解方式有时间再写)"></a>eclipse创建4个类及其相对应的xml文件(注解方式有时间再写)</h2><p>注：</p><ul><li>以下由于在运行过程中出现找不到属性得相关问题，所以一律采取xml中class写完整路径</li><li>hibernate.cfg.xml中的映射路径是<br><code>&lt;mapping resource=&quot;com/studentmanagementsystem/entity/Student.hbm.xml&quot; /&gt;</code><br>而不是<br><code>&lt;mapping class=&quot;com.studentmanagementsystem.entity.Student.hbm.xml&quot; /&gt;</code></li></ul><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String number;</span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line"><span class="keyword">private</span> BaseClass baseClass;</span><br><span class="line"><span class="keyword">private</span> IdCard idCard;</span><br><span class="line"><span class="keyword">private</span> Set&lt;Course&gt; courses = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.studentmanagement.entity.Student"</span> <span class="attr">table</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">type</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"number"</span> <span class="attr">column</span>=<span class="string">"number"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">type</span>=<span class="string">"java.lang.Integer"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">one-to-one</span> <span class="attr">name</span>=<span class="string">"idCard"</span> <span class="attr">property-ref</span>=<span class="string">"student"</span> <span class="attr">cascade</span>=<span class="string">"all"</span> &gt;</span><span class="tag">&lt;/<span class="name">one-to-one</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">"baseClass"</span> <span class="attr">column</span>=<span class="string">"classId"</span>&gt;</span><span class="tag">&lt;/<span class="name">many-to-one</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"courses"</span> <span class="attr">table</span>=<span class="string">"studentcourse"</span> <span class="attr">inverse</span>=<span class="string">"false"</span> <span class="attr">cascade</span>=<span class="string">"all"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"studentId"</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"com.studentmanagement.entity.Course"</span> <span class="attr">column</span>=<span class="string">"courseId"</span>&gt;</span><span class="tag">&lt;/<span class="name">many-to-many</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>IdCard.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdCard</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String bankNo;</span><br><span class="line"><span class="keyword">private</span> Student student;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IdCard.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.studentmanagement.entity.IdCard"</span> <span class="attr">table</span>=<span class="string">"idcard"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"bankNo"</span> <span class="attr">column</span>=<span class="string">"bankNo"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">"student"</span> <span class="attr">column</span>=<span class="string">"studentId"</span> <span class="attr">unique</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">many-to-one</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>BaseClass.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Set&lt;Student&gt; students = <span class="keyword">new</span> HashSet&lt;&gt;(<span class="number">0</span>);</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BaseClass.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.studentmanagement.entity.BaseClass"</span> <span class="attr">table</span>=<span class="string">"class"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"students"</span> <span class="attr">cascade</span>=<span class="string">"save-update"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"classId"</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">"com.studentmanagement.entity.Student"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Course.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Set&lt;Student&gt; students = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Course.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.studentmanagement.entity.Course"</span> <span class="attr">table</span>=<span class="string">"course"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"students"</span> <span class="attr">table</span>=<span class="string">"studentcourse"</span> <span class="attr">inverse</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"courseId"</span> &gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"com.studentmanagement.entity.Student"</span> <span class="attr">column</span>=<span class="string">"studentId"</span>&gt;</span><span class="tag">&lt;/<span class="name">many-to-many</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简单测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Session session = HibernateUtil.openSession();</span><br><span class="line">Transaction tx = session.beginTransaction();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 1.保存班级信息</span></span><br><span class="line">saveClass(session);</span><br><span class="line"><span class="comment">// 删除班级信息</span></span><br><span class="line"><span class="comment">// deleteClass(session);</span></span><br><span class="line"><span class="comment">// 保存课程信息</span></span><br><span class="line"><span class="comment">// saveCourse(session);</span></span><br><span class="line"><span class="comment">// saveStudentCourse(session);</span></span><br><span class="line"><span class="comment">// Student student = session.get(Student.class, new Integer(1));</span></span><br><span class="line"><span class="comment">// System.out.println(student.getIdCard().getBankNo());</span></span><br><span class="line"><span class="comment">// System.out.println(student.getCourses().toString());</span></span><br><span class="line"><span class="comment">// System.out.println(student.getBaseClass().getName());</span></span><br><span class="line"></span><br><span class="line">tx.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">tx.rollback();</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">session.close();</span><br><span class="line">HibernateUtil.closeSessionFactory();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveStudentCourse</span><span class="params">(Session session)</span> </span>&#123;</span><br><span class="line">Course course1 = session.get(Course<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">Student student1 = session.get(Student<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">student1.getCourses().add(course1);</span><br><span class="line">session.save(student1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveCourse</span><span class="params">(Session session)</span> </span>&#123;</span><br><span class="line">Course course = <span class="keyword">new</span> Course();</span><br><span class="line">course.setName(<span class="string">"java"</span>);</span><br><span class="line">Course course2 = <span class="keyword">new</span> Course();</span><br><span class="line">course2.setName(<span class="string">"h5"</span>);</span><br><span class="line">session.save(course);</span><br><span class="line">session.save(course2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteClass</span><span class="params">(Session session)</span> </span>&#123;</span><br><span class="line">BaseClass baseClass = session.get(BaseClass<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">session.delete(baseClass);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveClass</span><span class="params">(Session session)</span> </span>&#123;</span><br><span class="line">BaseClass baseClass = <span class="keyword">new</span> BaseClass();</span><br><span class="line">baseClass.setName(<span class="string">"测试一班"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">Student student = <span class="keyword">new</span> Student();</span><br><span class="line">student.setAge(<span class="number">20</span>);</span><br><span class="line">student.setNumber(<span class="string">"no"</span> + i + <span class="number">1</span>);</span><br><span class="line">student.setName(<span class="string">"学生"</span> + i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">IdCard idCard = <span class="keyword">new</span> IdCard();</span><br><span class="line">idCard.setBankNo(<span class="string">"bankNo"</span> + i + <span class="number">1</span>);</span><br><span class="line">idCard.setStudent(student);</span><br><span class="line"></span><br><span class="line">student.setIdCard(idCard);</span><br><span class="line"></span><br><span class="line">baseClass.getStudents().add(student);</span><br><span class="line">&#125;</span><br><span class="line">session.save(baseClass);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引例&quot;&gt;&lt;a href=&quot;#引例&quot; class=&quot;headerlink&quot; title=&quot;引例&quot;&gt;&lt;/a&gt;引例&lt;/h2&gt;&lt;p&gt;高考录取之后，要给录取的学生分配相关信息，需要一个学生管理系统，已知基本信心包含姓名、学号，学生还有年龄，需要给学生制作一卡通，一卡通中包含基本信息和银行卡号，还要给学生分配班级，开学后学生选课后保存选课信息。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;实现保存班级、保存学生信息及一卡通信息&lt;/li&gt;
&lt;li&gt;学生选课后保存选课信息&lt;/li&gt;
&lt;li&gt;通过查询一个学生能够找到一卡通，也能通过一卡通定位到学生&lt;/li&gt;
&lt;li&gt;通过查询一个学生能够知道他所在班级，通过班级能找到这个班的所有学生&lt;/li&gt;
&lt;li&gt;通过找学生能够找到所选择的课程，通过课程能找到选修这门课的所有学生&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>7-Hibernate操作持久化对象</title>
    <link href="http://yoursite.com/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-03-04T01:03:04.000Z</published>
    <updated>2020-03-04T02:51:32.329Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Session缓存"><a href="#Session缓存" class="headerlink" title="Session缓存"></a>Session缓存</h2><p>java生命周期中当对象<strong>空引用</strong>或<strong>隔离引用</strong>时会清理缓存</p><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>缓存介于应用程序和永久性存储源之间，其作用是降低应用程序直接读写永久性存储源的频率，从而提高应用的运行效率。</p><p><img src="/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/2020-03-04_090616.png" alt></p><p>缓存内的数据是永久性存储源中的数据的复制，应用程序在运行时从缓存读写数据，在特定的时刻或事件同步缓存和永久性存储源的数据。</p><a id="more"></a><h3 id="Session缓存的工作过程"><a href="#Session缓存的工作过程" class="headerlink" title="Session缓存的工作过程"></a>Session缓存的工作过程</h3><ul><li>当 Session 执行查询方法时，先从 Session 缓存中读取据，如果缓存中有则直接读取，如果缓存中没有，从数据库中查询并加载到Session 缓存中，再从缓存中读取。</li><li>当 Session 执行 save()、update() 方法时，将对象持久化到数据库中并将对象加载到 Session 缓存中。<br><img src="/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/2020-03-04_091148.png" alt></li></ul><h3 id="session实现缓存过程"><a href="#session实现缓存过程" class="headerlink" title="session实现缓存过程"></a>session实现缓存过程</h3><p><img src="/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/Animation.gif" alt></p><h3 id="Session清理缓存"><a href="#Session清理缓存" class="headerlink" title="Session清理缓存"></a>Session清理缓存</h3><p>Session在某一时间点按照缓存中对象的属性变化来同步更新数据库的这一过程被称为 Session 清理缓存</p><p>缓存清理的时间点：</p><ul><li>当调用 transaction.commit() 方法时，会先清理缓存，再向数据库提交事务；</li><li>当显式调用 Session.flush() 方法时，会清理缓存；</li><li>当调用 Session 的查询（不包括 load() 和 get() )方法时，如果缓存中对象的属性有变化则清理缓存。<h3 id="Session对象快照"><a href="#Session对象快照" class="headerlink" title="Session对象快照"></a>Session对象快照</h3><img src="/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/session_fuction.gif" alt><h3 id="Session清理缓存的模式"><a href="#Session清理缓存的模式" class="headerlink" title="Session清理缓存的模式"></a>Session清理缓存的模式</h3>setHibernateFlushMode() 用于设定 Session 清理缓存的模式。</li></ul><table><thead><tr><th align="center">清理缓存模式</th><th align="center">Session的查询方法</th><th align="center">commit()</th><th align="center">flush()</th></tr></thead><tbody><tr><td align="center">FlushMode.ALWAYS</td><td align="center">清理</td><td align="center">清理</td><td align="center">清理</td></tr><tr><td align="center">FlushMode.AUTO</td><td align="center">缓存中对象的属性有变化时清理，没变化不清理</td><td align="center">清理</td><td align="center">清理</td></tr><tr><td align="center">FlushMode.COMMIT</td><td align="center">不清理</td><td align="center">清理</td><td align="center">清理</td></tr><tr><td align="center">FlushMode.MANUAL</td><td align="center">不清理</td><td align="center">不清理</td><td align="center">清理</td></tr><tr><td align="center">FlushMode.NEVER</td><td align="center"><del>已过时，被MANUAL取代</del></td><td align="center"><del>~</del></td><td align="center"><del>~</del></td></tr></tbody></table><h3 id="Session缓存的作用"><a href="#Session缓存的作用" class="headerlink" title="Session缓存的作用"></a>Session缓存的作用</h3><ul><li>减少数据库访问次数，提高数据访问的效率；</li><li>保证缓存中的对象与数据库中相关的记录同步；</li><li>当缓存中的持久化对象存在循环关联关系时，Session会保证不出现死循环，以及由死循环引起的堆栈溢出异常。</li></ul><h2 id="Hibernate对象的生命周期"><a href="#Hibernate对象的生命周期" class="headerlink" title="Hibernate对象的生命周期"></a>Hibernate对象的生命周期</h2><p>Hibernate实体对象生命周期的4种状态</p><ul><li>Transient(临时状态) ： 刚刚被 new 关键字创建，还没有被持久化，不在Session的缓存中。<ul><li>在数据库中<strong>不存在</strong>与之相对应的记录</li></ul></li><li>Persistent(持久化状态) ： 已经被持久化，并加入到 Session 缓存中。<ul><li>在数据库中<strong>存在</strong>与之相对应的记录</li></ul></li><li>Detached(游离状态) ： 已经被持久化，但不再处于 Session 缓存中。<ul><li>在数据库中<strong>可能存在</strong>与之相对应的记录(前提是没有其他Session实例删除该记录)</li></ul></li><li>Removed(删除状态) ： Session 已经计划将其从数据库删除，并且不再处于 Session 缓存中。<ul><li>数据库中<strong>存在</strong>与之对应的记录(已经计划从数据库中删除)</li></ul></li></ul><p><img src="/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/2020-03-04_104323.png" alt></p><h2 id="Hibernate操作持久化对象"><a href="#Hibernate操作持久化对象" class="headerlink" title="Hibernate操作持久化对象"></a>Hibernate操作持久化对象</h2><h3 id="Session的save-方法"><a href="#Session的save-方法" class="headerlink" title="Session的save()方法"></a>Session的save()方法</h3><ol><li>把对象加入缓存中，使其变成持久化对象；</li><li>根据映射文件配置的标识符生成器为对象分配一个 OID</li><li>计划执行一个 insert，把对象当前属性值组装到 insert 语句中</li><li>事务提交后（transaction.commit()）永久的将数据保存到数据库</li></ol><h3 id="Session的update-方法"><a href="#Session的update-方法" class="headerlink" title="Session的update()方法"></a>Session的update()方法</h3><ol><li>把游离对象重新加入 Session 缓存中，使其变为持久化对象；</li><li>计划执行一个 update，将对象当前属性组装到 update 语句，执行 update 语句；</li><li>事务提交后（transaction.commit()）永久的将数据保存到数据库；</li><li>不管对象属性有没有改变都会执行update （通过设置<class>的select-before-update=true改变）。</class></li></ol><h3 id="Session的saveOrUpdate-方法"><a href="#Session的saveOrUpdate-方法" class="headerlink" title="Session的saveOrUpdate()方法"></a>Session的saveOrUpdate()方法</h3><ul><li>如果参数是临时对象—save()</li><li>如果参数是游离对象—update()</li><li>如果参数是持久化对象—返回</li></ul><h4 id="Hibernate-如何区分临时对象"><a href="#Hibernate-如何区分临时对象" class="headerlink" title="Hibernate 如何区分临时对象"></a>Hibernate 如何区分临时对象</h4><ul><li>对象的 OID 为 null；</li><li>如果映射文件中设置了 <id> 的 unsaved-value 属性，并且对象的 id 值与 unsaved-value 设置的值相等。</id></li></ul><h3 id="Session的delete-方法"><a href="#Session的delete-方法" class="headerlink" title="Session的delete()方法"></a>Session的delete()方法</h3><ol><li>检查传入的参数是否是持久化对象，如果是持久化对象将其移出 Session 缓存；</li><li>计划执行一个 delete，但是并不立即执行；</li><li>当 Session 清理缓存时才执行 delete，比如执行 Session.flush()。<h3 id="Session的load-和get-方法"><a href="#Session的load-和get-方法" class="headerlink" title="Session的load()和get()方法"></a>Session的load()和get()方法</h3></li></ol><ul><li>load() 与 get() 方法都是根据 OID 加载持久化对象。</li><li>load() 与 get() 方法的不同点：<ul><li>如果数据库中不存在与 OID 对应的记录：<ul><li>load() 会抛出 ObjectNotFoundException 异常；</li><li>get() 会返回 null。</li></ul></li><li>默认加载策略：<ul><li>load() 使用类的延迟加载策略；(在表头查询时较为罕见)</li><li>get() 使用类的立即加载策略。</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Session缓存&quot;&gt;&lt;a href=&quot;#Session缓存&quot; class=&quot;headerlink&quot; title=&quot;Session缓存&quot;&gt;&lt;/a&gt;Session缓存&lt;/h2&gt;&lt;p&gt;java生命周期中当对象&lt;strong&gt;空引用&lt;/strong&gt;或&lt;strong&gt;隔离引用&lt;/strong&gt;时会清理缓存&lt;/p&gt;
&lt;h3 id=&quot;缓存&quot;&gt;&lt;a href=&quot;#缓存&quot; class=&quot;headerlink&quot; title=&quot;缓存&quot;&gt;&lt;/a&gt;缓存&lt;/h3&gt;&lt;p&gt;缓存介于应用程序和永久性存储源之间，其作用是降低应用程序直接读写永久性存储源的频率，从而提高应用的运行效率。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/03/04/7-Hibernate%E6%93%8D%E4%BD%9C%E6%8C%81%E4%B9%85%E5%8C%96%E5%AF%B9%E8%B1%A1/2020-03-04_090616.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;缓存内的数据是永久性存储源中的数据的复制，应用程序在运行时从缓存读写数据，在特定的时刻或事件同步缓存和永久性存储源的数据。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>教资过，真开心</title>
    <link href="http://yoursite.com/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/"/>
    <id>http://yoursite.com/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/</id>
    <published>2020-03-03T09:39:26.000Z</published>
    <updated>2020-03-03T10:18:10.100Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天无疑是新型冠状肺炎疫情期间对于我来说最开心幸福的一天了</p><p>早上起床，就开始上课，迷迷糊糊上到了11.15，鬼知道其中我经历了什么（两眼不停打架，嘻嘻也许是昨晚睡太迟了）</p><p>哈哈 </p><p>怎么能是昨晚睡太迟，明明每天都这样【手动狗头】</p><p>一直到12.30吃完饭，我才想起来还有教资面试成绩这回事。</p><p>那个时候真的是有点想上厕所的样子（我妈把我喂的太饱了  嘻嘻）</p><p>然后就是上厕所，打开夸克，输入河北教育考试院—-中小学教师资格证—-成绩查询，进入那内心颤抖的页面</p><a id="more"></a><p><img src="/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/NTCE_1.png" alt></p><p>输入个人信息，妈的，竟然提示我未查到相关信息（心里一万个草泥马在奔腾），期间未截图</p><p>之后打开微博，刷新页面，看到好多人都出分了，也有一部分像我这样苦逼的查不到（这期间我一直在想，是不是真过不了了…）</p><p>…</p><p>怀着怀疑好奇忐忑的心情，鼓起勇气，再次打开那熟悉的页面：<a href="http://ntce.neea.edu.cn/ntce_ms/query_15831648.html" target="_blank" rel="noopener">链接</a></p><p>输入信息，卧槽，我看到了什么，我屮艸芔茻，结果呢可想而知：</p><p><img src="/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/NTCE_2.png" alt></p><p>给个表情记录下那时的欣喜：</p><p><img src="/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/haha.jpg" alt></p><p>之后就忍不住查查历史成绩，哎，真的是，好险啊，再不过我就si了</p><p><img src="/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/NTCE_3.png" alt></p><p>于是乎看见微博中教师资格证合格证还能查询，于是就又打开那熟悉的浏览器，此刻心情也是极度开心啊</p><p><img src="/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/NTCE_4.png" alt></p><p>接下来就是这个最惊喜的页面了，哈哈</p><p><img src="/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/NTCE_5.jpg" alt></p><p>最后就等着这个了：哈哈哈</p><p><img src="/2020/03/03/%E6%95%99%E8%B5%84%E8%BF%87%EF%BC%8C%E7%9C%9F%E5%BC%80%E5%BF%83/NTCE_6.jpeg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天无疑是新型冠状肺炎疫情期间对于我来说最开心幸福的一天了&lt;/p&gt;
&lt;p&gt;早上起床，就开始上课，迷迷糊糊上到了11.15，鬼知道其中我经历了什么（两眼不停打架，嘻嘻也许是昨晚睡太迟了）&lt;/p&gt;
&lt;p&gt;哈哈 &lt;/p&gt;
&lt;p&gt;怎么能是昨晚睡太迟，明明每天都这样【手动狗头】&lt;/p&gt;
&lt;p&gt;一直到12.30吃完饭，我才想起来还有教资面试成绩这回事。&lt;/p&gt;
&lt;p&gt;那个时候真的是有点想上厕所的样子（我妈把我喂的太饱了  嘻嘻）&lt;/p&gt;
&lt;p&gt;然后就是上厕所，打开夸克，输入河北教育考试院—-中小学教师资格证—-成绩查询，进入那内心颤抖的页面&lt;/p&gt;
    
    </summary>
    
    
      <category term="教师资格证" scheme="http://yoursite.com/categories/%E6%95%99%E5%B8%88%E8%B5%84%E6%A0%BC%E8%AF%81/"/>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>6-SpringMVC-JSTL</title>
    <link href="http://yoursite.com/2020/03/03/6-SpringMVC-JSTL/"/>
    <id>http://yoursite.com/2020/03/03/6-SpringMVC-JSTL/</id>
    <published>2020-03-03T08:23:56.000Z</published>
    <updated>2020-03-03T09:06:21.956Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><p>使用标签库，需要在JSP页面顶端配置：</p><p><code>&lt;%@ taglib uri=&quot;http://www.springframework.org/tags/form&quot; prefix=&quot;form&quot;%&gt;</code></p><p>常见标签有：</p><ul><li>Form标签    input标签，radiobutton标签，checkbox标签</li><li>Select标签，password标签，textarea标签，hidden标签</li><li>Errors标签，HTML5标签</li></ul><a id="more"></a><p>form标签，将命令对象放置到PageContext中，默认名为“command”，并用其他子标签绑定属性值</p><p><strong>注：以下标签的path属性为相对应类的属性 要一一对应</strong></p><p><code>&lt;form:form commandName=&quot;pro&quot; action=&quot;add&quot; method=&quot;post&quot;&gt;&lt;/form:form&gt;</code></p><ul><li><p>input标签————<code>&lt;form:input path=&quot;name&quot; /&gt;</code></p></li><li><p>password标签———<code>&lt;form:password path=&quot;code&quot; value=&quot;123&quot; /&gt;</code>其中value是指定的</p></li><li><p>radiobutton标签</p><ul><li><p>方式1：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form:radiobutton</span> <span class="attr">path</span>=<span class="string">"area"</span> <span class="attr">value</span>=<span class="string">"large"</span> /&gt;</span>大</span><br><span class="line"><span class="tag">&lt;<span class="name">form:radiobutton</span> <span class="attr">path</span>=<span class="string">"area"</span> <span class="attr">value</span>=<span class="string">"small"</span> /&gt;</span>小</span><br></pre></td></tr></table></figure></li><li><p>方式2：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form:radiobuttons</span> <span class="attr">path</span>=<span class="string">"size"</span> <span class="attr">items</span>=<span class="string">"$&#123;sizes &#125;"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>方式3：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form:radiobuttons</span> <span class="attr">path</span>=<span class="string">"province"</span> <span class="attr">items</span>=<span class="string">"$&#123;provinces &#125;"</span> <span class="attr">itemLabel</span>=<span class="string">"id"</span> <span class="attr">itemValue</span>=<span class="string">"name"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>checkbox标签</p><ul><li>用法同radiobutton标签</li><li>绑定数据时，有3种方式：<ul><li>绑定的值是boolean类型，值为true，则复选框被选中<br><code>&lt;form:checkbox path=&quot;sold&quot; /&gt;</code></li><li>绑定的值的类型是array或者java.util.Collection，集合中有的值，对应的复选框被选中</li><li>对于其它绑定的类型，绑定的值相等，则对应复选框被选中<br><code>&lt;form:checkboxes items=&quot;${colors }&quot; path=&quot;color&quot; /&gt;</code></li></ul></li></ul></li><li><p>select标签</p><ul><li>方式1：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form:select</span> <span class="attr">path</span>=<span class="string">"skills"</span><span class="attr">items</span>=<span class="string">"$&#123;skills&#125;"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li>方式2：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form:select</span> <span class="attr">path</span>=<span class="string">"province"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form:option</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">label</span>=<span class="string">"请选择..."</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form:options</span> <span class="attr">items</span>=<span class="string">"$&#123;provinces &#125;"</span> <span class="attr">itemLabel</span>=<span class="string">"name"</span> <span class="attr">itemValue</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form:select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>textarea标签</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form:textarea</span> <span class="attr">path</span>=<span class="string">"notes"</span> <span class="attr">rows</span>=<span class="string">"3"</span> <span class="attr">cols</span>=<span class="string">"20"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>hidden标签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form:hidden</span> <span class="attr">path</span>=<span class="string">"id"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="贴上完整代码"><a href="#贴上完整代码" class="headerlink" title="贴上完整代码"></a>贴上完整代码</h2><p>Product.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String code;</span><br><span class="line"><span class="keyword">private</span> String area;</span><br><span class="line"><span class="keyword">private</span> String size;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> province;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> sold;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Province.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Province</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ProductController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/product"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"add"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(Product p)</span> </span>&#123;</span><br><span class="line">System.out.println(p.getId());</span><br><span class="line">System.out.println(p.getName());</span><br><span class="line">System.out.println(p.getArea());</span><br><span class="line">System.out.println(p.getCode());</span><br><span class="line">System.out.println(p.getProvince());</span><br><span class="line">System.out.println(p.getSize());</span><br><span class="line"><span class="keyword">for</span> (String temp : p.getColor()) &#123;</span><br><span class="line">System.out.println(temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"add"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toAdd</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">Product p = <span class="keyword">new</span> Product();</span><br><span class="line">p.setId(<span class="number">200</span>);</span><br><span class="line">p.setName(<span class="string">"pc"</span>);</span><br><span class="line">p.setCode(<span class="string">"abcde"</span>);</span><br><span class="line">p.setSold(<span class="keyword">true</span>);</span><br><span class="line">p.getColor().add(<span class="string">"red"</span>);<span class="comment">//指定颜色为red</span></span><br><span class="line">p.setProvince(<span class="number">2</span>);</span><br><span class="line">model.addAttribute(<span class="string">"pro"</span>, p);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; size = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">size.add(<span class="string">"xl"</span>);</span><br><span class="line">size.add(<span class="string">"xxl"</span>);</span><br><span class="line">size.add(<span class="string">"xxxl"</span>);</span><br><span class="line">model.addAttribute(<span class="string">"sizes"</span>, size);</span><br><span class="line"></span><br><span class="line">List&lt;Province&gt; pros = <span class="keyword">new</span> ArrayList&lt;Province&gt;();</span><br><span class="line">Province p1 = <span class="keyword">new</span> Province();p1.setId(<span class="number">1</span>);p1.setName(<span class="string">"北京"</span>);</span><br><span class="line">Province p2 = <span class="keyword">new</span> Province();p2.setId(<span class="number">2</span>);p2.setName(<span class="string">"河北"</span>);</span><br><span class="line">Province p3 = <span class="keyword">new</span> Province();p3.setId(<span class="number">3</span>);p3.setName(<span class="string">"山东"</span>);</span><br><span class="line">pros.add(p1);</span><br><span class="line">pros.add(p2);</span><br><span class="line">pros.add(p3);</span><br><span class="line">model.addAttribute(<span class="string">"provinces"</span>, pros);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; colors = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">colors.add(<span class="string">"red"</span>);</span><br><span class="line">colors.add(<span class="string">"green"</span>);</span><br><span class="line">colors.add(<span class="string">"blue"</span>);</span><br><span class="line">model.addAttribute(<span class="string">"colors"</span>, colors);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">"product"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>product.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">uri</span>=<span class="string">"http://www.springframework.org/tags/form"</span> <span class="attr">prefix</span>=<span class="string">"form"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">传统方式的输入框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"$&#123;pro.name &#125;"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">以下是spring提供的jstl：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form:form</span> <span class="attr">commandName</span>=<span class="string">"pro"</span> <span class="attr">action</span>=<span class="string">"add"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">id:<span class="tag">&lt;<span class="name">form:hidden</span> <span class="attr">path</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">name:<span class="tag">&lt;<span class="name">form:input</span> <span class="attr">path</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">code:<span class="tag">&lt;<span class="name">form:password</span> <span class="attr">path</span>=<span class="string">"code"</span> <span class="attr">value</span>=<span class="string">"123"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">area:<span class="tag">&lt;<span class="name">form:radiobutton</span> <span class="attr">path</span>=<span class="string">"area"</span> <span class="attr">value</span>=<span class="string">"large"</span> /&gt;</span>大</span><br><span class="line"><span class="tag">&lt;<span class="name">form:radiobutton</span> <span class="attr">path</span>=<span class="string">"area"</span> <span class="attr">value</span>=<span class="string">"small"</span> /&gt;</span>小</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">size:<span class="tag">&lt;<span class="name">form:radiobuttons</span> <span class="attr">path</span>=<span class="string">"size"</span> <span class="attr">items</span>=<span class="string">"$&#123;sizes &#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">province:<span class="tag">&lt;<span class="name">form:radiobuttons</span> <span class="attr">path</span>=<span class="string">"province"</span> <span class="attr">items</span>=<span class="string">"$&#123;provinces &#125;"</span> <span class="attr">itemLabel</span>=<span class="string">"id"</span> <span class="attr">itemValue</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">sold:<span class="tag">&lt;<span class="name">form:checkbox</span> <span class="attr">path</span>=<span class="string">"sold"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">color:<span class="tag">&lt;<span class="name">form:checkboxes</span> <span class="attr">items</span>=<span class="string">"$&#123;colors &#125;"</span> <span class="attr">path</span>=<span class="string">"color"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">province:</span><br><span class="line"><span class="tag">&lt;<span class="name">form:select</span> <span class="attr">path</span>=<span class="string">"province"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form:option</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">label</span>=<span class="string">"请选择..."</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form:options</span> <span class="attr">items</span>=<span class="string">"$&#123;provinces &#125;"</span> <span class="attr">itemLabel</span>=<span class="string">"name"</span> <span class="attr">itemValue</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form:select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"add"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form:form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果</p><p><img src="/2020/03/03/6-SpringMVC-JSTL/result.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;表单标签&quot;&gt;&lt;a href=&quot;#表单标签&quot; class=&quot;headerlink&quot; title=&quot;表单标签&quot;&gt;&lt;/a&gt;表单标签&lt;/h2&gt;&lt;p&gt;使用标签库，需要在JSP页面顶端配置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;%@ taglib uri=&amp;quot;http://www.springframework.org/tags/form&amp;quot; prefix=&amp;quot;form&amp;quot;%&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;常见标签有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Form标签    input标签，radiobutton标签，checkbox标签&lt;/li&gt;
&lt;li&gt;Select标签，password标签，textarea标签，hidden标签&lt;/li&gt;
&lt;li&gt;Errors标签，HTML5标签&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>6-Hibernate多对多关联映射</title>
    <link href="http://yoursite.com/2020/03/03/6-Hibernate%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/"/>
    <id>http://yoursite.com/2020/03/03/6-Hibernate%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/</id>
    <published>2020-03-03T01:07:15.000Z</published>
    <updated>2020-03-03T01:38:39.087Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="引例"><a href="#引例" class="headerlink" title="引例"></a>引例</h2><p>在某高校选课系统中，一个学生可以同时选修多门课程，一门课程可以被若干个学生选修，像这样的多对多关联关系，应该如何实现？</p><a id="more"></a><p>域模型：<br><img src="/2020/03/03/6-Hibernate%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/manytomany.png" alt></p><p>数据关系模型：<br><img src="/2020/03/03/6-Hibernate%E5%A4%9A%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/manytomany_data.png" alt></p><h2 id="多对多关联映射"><a href="#多对多关联映射" class="headerlink" title="多对多关联映射"></a>多对多关联映射</h2><h3 id="xml"><a href="#xml" class="headerlink" title="xml"></a>xml</h3><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String studentNo;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Course&gt; courseSet = <span class="keyword">new</span> HashSet&lt;Course&gt;();</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Course.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">// 课程名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> credit;  <span class="comment">// 学分</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Student&gt; studentSet = <span class="keyword">new</span> HashSet&lt;Student&gt;();</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"course"</span> <span class="attr">table</span>=<span class="string">"studentcourse"</span> <span class="attr">cascade</span>=<span class="string">"all"</span> <span class="attr">inverse</span>=<span class="string">"false"</span>&gt;</span><span class="comment">&lt;!-- inverse表示控制方，course是被控方 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"studentId"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"Course"</span> <span class="attr">column</span>=<span class="string">"courseId"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Course.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"student"</span> <span class="attr">table</span>=<span class="string">"studentcourse"</span> <span class="attr">inverse</span>=<span class="string">"true"</span>&gt;</span><span class="comment">&lt;!-- inverse表示控制方，course是主控方 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"courseId"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">"Student"</span> <span class="attr">column</span>=<span class="string">"studentId"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        save();</span><br><span class="line">        getStudent();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存学生和课程信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Session session = <span class="keyword">null</span>;</span><br><span class="line">        Transaction tran = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session = HibernateUtil.openSession();</span><br><span class="line">            tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        createCourses(session);//新建Course对象，保证course的唯一性</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 新建Student对象</span></span><br><span class="line">            Student student = <span class="keyword">new</span> Student();</span><br><span class="line">            student.setName(<span class="string">"张三"</span>);</span><br><span class="line">            student.setStudentNo(<span class="string">"123456"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 选出course对象</span></span><br><span class="line">            Course course = session.get(Course<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//建立关联</span></span><br><span class="line">            student.getCourse().add(course);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 保存</span></span><br><span class="line">            session.save(student);</span><br><span class="line">            session.save(course);</span><br><span class="line"></span><br><span class="line">            tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            session.close();<span class="comment">// 关闭session</span></span><br><span class="line">            HibernateUtil.closeSessionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createCourses</span><span class="params">(Session session)</span> </span>&#123;</span><br><span class="line">    Course course = <span class="keyword">new</span> Course();</span><br><span class="line">        course.setName(<span class="string">"程序设计"</span>);</span><br><span class="line">        course.setCredit(<span class="number">3</span>);</span><br><span class="line">        session.save(course);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检索学生，并得到该学生选修的课程信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Session session = <span class="keyword">null</span>;</span><br><span class="line">        Transaction tran = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session = HibernateUtil.openSession();</span><br><span class="line">            tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过OID检索对象</span></span><br><span class="line">            Student student = session.get(Student<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">            <span class="keyword">for</span>(Course cour : student.getCourse())&#123;</span><br><span class="line">                System.out.println(cour.getName());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            session.close();<span class="comment">// 关闭session</span></span><br><span class="line">            HibernateUtil.closeSessionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h3><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"student"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String studentNo;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Course&gt; course = <span class="keyword">new</span> HashSet&lt;Course&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStudentNo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentNo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudentNo</span><span class="params">(String studentNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.studentNo = studentNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToMany</span></span><br><span class="line">    <span class="meta">@JoinTable</span>(name=<span class="string">"studentcourse"</span>, <span class="comment">//指定关联表</span></span><br><span class="line">        joinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"studentId"</span>),<span class="comment">//指向实体对应表的外键</span></span><br><span class="line">        inverseJoinColumns=<span class="meta">@JoinColumn</span>(name=<span class="string">"courseId"</span>))<span class="comment">//指向所关联的实体对应表的外键</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Course&gt; <span class="title">getCourse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> course;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCourse</span><span class="params">(Set&lt;Course&gt; course)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.course = course;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Course.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"course"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//课程名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> credit;<span class="comment">//学分</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;Student&gt; student = <span class="keyword">new</span> HashSet&lt;Student&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCredit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> credit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCredit</span><span class="params">(<span class="keyword">int</span> credit)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.credit = credit;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ManyToMany</span>(mappedBy=<span class="string">"course"</span>)<span class="comment">//表示关联关系由Student维护</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Student&gt; <span class="title">getStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudent</span><span class="params">(Set&lt;Student&gt; student)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.student = student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类同上</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引例&quot;&gt;&lt;a href=&quot;#引例&quot; class=&quot;headerlink&quot; title=&quot;引例&quot;&gt;&lt;/a&gt;引例&lt;/h2&gt;&lt;p&gt;在某高校选课系统中，一个学生可以同时选修多门课程，一门课程可以被若干个学生选修，像这样的多对多关联关系，应该如何实现？&lt;/p&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>5-Hibernate一对多关联映射</title>
    <link href="http://yoursite.com/2020/02/28/5-Hibernate%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/"/>
    <id>http://yoursite.com/2020/02/28/5-Hibernate%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/</id>
    <published>2020-02-28T02:35:45.000Z</published>
    <updated>2020-03-03T01:07:55.359Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p>通常情况下，在一些购物网站系统中，用户和订单之间的关系就是一对多关联关系，并且对于用户来说需要知道自己有哪些订单，对于商家来说需要知道某个订单属于哪个用户，思考这种情况该如何实现？</p><h2 id="数据库一对多关联"><a href="#数据库一对多关联" class="headerlink" title="数据库一对多关联"></a>数据库一对多关联</h2><a id="more"></a><p><img src="/2020/02/28/5-Hibernate%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/DB_oneToMany.png" alt></p><h2 id="实现单向一对多关联-user—-gt-orders"><a href="#实现单向一对多关联-user—-gt-orders" class="headerlink" title="实现单向一对多关联(user—&gt;orders)"></a>实现单向一对多关联(user—&gt;orders)</h2><h3 id="使用Set集合，List集合，Map集合"><a href="#使用Set集合，List集合，Map集合" class="headerlink" title="使用Set集合，List集合，Map集合"></a>使用Set集合，List集合，Map集合</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Set orderSet = <span class="keyword">new</span> HashSet&lt;Order&gt;();<span class="comment">//Set</span></span><br><span class="line"><span class="keyword">private</span> List orderList = <span class="keyword">new</span> ArrayList&lt;Order&gt;();<span class="comment">//List</span></span><br><span class="line">    <span class="keyword">private</span> Map orderMap = <span class="keyword">new</span> HashMap&lt;String, Order&gt;();<span class="comment">//Map</span></span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.hbn.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.hibernate.entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"User"</span> <span class="attr">table</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userName"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 映射与Order的一对多关系 key:指定Order中的外键列名 one-to-many中class:指定关联属性的类型--&gt;</span></span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"orderSet"</span> <span class="attr">cascade</span>=<span class="string">"delete"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- column 属性设定所关联类对应表的外键 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"userId"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">"Order"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span> <span class="attr">name</span>=<span class="string">"orderList"</span> <span class="attr">cascade</span>=<span class="string">"delete"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"userId"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定orders5表中某个用户的订单的顺序 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">index</span> <span class="attr">column</span>=<span class="string">"orderIndex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">"Order"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">"orderMap"</span> <span class="attr">cascade</span>=<span class="string">"delete"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"userId"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- type的string也可换为java.lang.String，但不能是character --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">index</span> <span class="attr">column</span>=<span class="string">"orderKey"</span> <span class="attr">type</span>=<span class="string">"string"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">"Order"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Order.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Order.hbn.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.hibernate.entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Order"</span> <span class="attr">table</span>=<span class="string">"orders"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"price"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类略</p><h2 id="实现单向多对一关联-orders—-gt-user"><a href="#实现单向多对一关联-orders—-gt-user" class="headerlink" title="实现单向多对一关联(orders—&gt;user)"></a>实现单向多对一关联(orders—&gt;user)</h2><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Set orderSet = <span class="keyword">new</span> HashSet&lt;Order&gt;();</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.hbn.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.hibernate.entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"User"</span> <span class="attr">table</span>=<span class="string">"user5"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userName"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 映射与Order的一对多关系 </span></span><br><span class="line"><span class="comment">     key:指定Order中的外键列名</span></span><br><span class="line"><span class="comment">     one-to-many中class:指定关联属性的类型--&gt;</span></span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">"orderSet"</span> <span class="attr">cascade</span>=<span class="string">"delete"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">"userId"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">"Order"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Order.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="keyword">private</span> User user;<span class="comment">//新添加一个User对象，实现映射</span></span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Order.hbn.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-mapping</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span> <span class="meta-string">"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"com.hibernate.entity"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Order"</span> <span class="attr">table</span>=<span class="string">"orders5"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"price"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 映射与User的多对一关联关系 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">column</span>=<span class="string">"userId"</span> <span class="attr">class</span>=<span class="string">"User"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类略</p><h2 id="注解方式实现双向关联"><a href="#注解方式实现双向关联" class="headerlink" title="注解方式实现双向关联"></a>注解方式实现双向关联</h2><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Set orderSet = <span class="keyword">new</span> HashSet&lt;Order&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToMany</span>(cascade=CascadeType.ALL, mappedBy=<span class="string">"user"</span>, targetEntity=Order<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    //<span class="title">mappedBy</span>：表明是双向关联关系，并且与 <span class="title">user</span> 建立对应,此时不需要设置@<span class="title">JoinColumn</span>(<span class="title">name</span></span>=<span class="string">"userId"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * List对应的需要添加：@OrderColumn(name="orderIndex")：指定ORDER表中记录顺序的列名</span></span><br><span class="line"><span class="comment">     * Map对应的需要添加：@MapKeyColumn(name="orderKey") @MapkeyClass(String.class)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set <span class="title">getOrderSet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> orderSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOrderSet</span><span class="params">(Set orderSet)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.orderSet = orderSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Order.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"orders"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Double price;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrice</span><span class="params">(Double price)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@ManyToOne</span></span><br><span class="line">    <span class="meta">@JoinColumn</span>(name=<span class="string">"userId"</span>)<span class="comment">//实现一找多</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//         saveUser();</span></span><br><span class="line"><span class="comment">//        addOrders();</span></span><br><span class="line"><span class="comment">//        getUser();</span></span><br><span class="line">        getOrder();</span><br><span class="line"><span class="comment">//         deleteUser();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 持久化User对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Session session = <span class="keyword">null</span>;</span><br><span class="line">        Transaction tran = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session = HibernateUtil.openSession();</span><br><span class="line">            tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 新建对象</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setUserName(<span class="string">"张三"</span>);</span><br><span class="line">            user.setPassword(<span class="string">"111111"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 保存用户</span></span><br><span class="line">            session.save(user);</span><br><span class="line"></span><br><span class="line">            tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            session.close();<span class="comment">// 关闭session</span></span><br><span class="line">            HibernateUtil.closeSessionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为已存在的user对象添加订单信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addOrders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Session session = <span class="keyword">null</span>;</span><br><span class="line">        Transaction tran = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session = HibernateUtil.openSession();</span><br><span class="line">            tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 检索user对象</span></span><br><span class="line">            User user = session.get(User<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//新建Order对象</span></span><br><span class="line">            Order order = <span class="keyword">new</span> Order();</span><br><span class="line">            order.setPrice(<span class="number">30.0</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//建立关联</span></span><br><span class="line"><span class="comment">//            user.getOrderSet().add(order);//user方不能维护关联关系</span></span><br><span class="line">            order.setUser(user);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新用户</span></span><br><span class="line">            session.save(order);</span><br><span class="line"></span><br><span class="line">            tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            session.close();<span class="comment">// 关闭session</span></span><br><span class="line">            HibernateUtil.closeSessionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检索用户对象，并获得所关联的订单信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Session session = <span class="keyword">null</span>;</span><br><span class="line">        Transaction tran = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session = HibernateUtil.openSession();</span><br><span class="line">            tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过OID检索对象</span></span><br><span class="line">            User user = session.get(User<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">            System.out.println(user.getOrderSet().size());</span><br><span class="line"></span><br><span class="line">            tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            session.close();<span class="comment">// 关闭session</span></span><br><span class="line">            HibernateUtil.closeSessionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检索订单对象，并获得所关联的用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Session session = <span class="keyword">null</span>;</span><br><span class="line">        Transaction tran = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session = HibernateUtil.openSession();</span><br><span class="line">            tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过OID检索对象</span></span><br><span class="line">            Order order = session.get(Order<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line">            System.out.println(order.getUser().getUserName());</span><br><span class="line"></span><br><span class="line">            tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            session.close();<span class="comment">// 关闭session</span></span><br><span class="line">            HibernateUtil.closeSessionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户，并级联删除所关联的订单信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Session session = <span class="keyword">null</span>;</span><br><span class="line">        Transaction tran = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            session = HibernateUtil.openSession();</span><br><span class="line">            tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 检索对象</span></span><br><span class="line">            User user = session.get(User<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">Integer</span>(1))</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 删除对象</span></span><br><span class="line">            session.delete(user);</span><br><span class="line"></span><br><span class="line">            tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            session.close();<span class="comment">// 关闭session</span></span><br><span class="line">            HibernateUtil.closeSessionFactory();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题：&quot;&gt;&lt;a href=&quot;#问题：&quot; class=&quot;headerlink&quot; title=&quot;问题：&quot;&gt;&lt;/a&gt;问题：&lt;/h2&gt;&lt;p&gt;通常情况下，在一些购物网站系统中，用户和订单之间的关系就是一对多关联关系，并且对于用户来说需要知道自己有哪些订单，对于商家来说需要知道某个订单属于哪个用户，思考这种情况该如何实现？&lt;/p&gt;
&lt;h2 id=&quot;数据库一对多关联&quot;&gt;&lt;a href=&quot;#数据库一对多关联&quot; class=&quot;headerlink&quot; title=&quot;数据库一对多关联&quot;&gt;&lt;/a&gt;数据库一对多关联&lt;/h2&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>6-SpringMVC2</title>
    <link href="http://yoursite.com/2020/02/27/6-SpringMVC2/"/>
    <id>http://yoursite.com/2020/02/27/6-SpringMVC2/</id>
    <published>2020-02-27T04:17:48.000Z</published>
    <updated>2020-02-27T04:17:49.005Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>5-SpringMVC1</title>
    <link href="http://yoursite.com/2020/02/27/5-SpringMVC1/"/>
    <id>http://yoursite.com/2020/02/27/5-SpringMVC1/</id>
    <published>2020-02-27T02:48:08.000Z</published>
    <updated>2020-03-03T01:09:04.606Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="程序搭建过程"><a href="#程序搭建过程" class="headerlink" title="程序搭建过程"></a>程序搭建过程</h2><ol><li>创建web工程，导入jar</li><li>配置xml文件 3个(web.xml，spring-mvc.xml，applicationContext.xml)<a id="more"></a>web.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>springmvcdemo1<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span></span><br><span class="line">classpath*:/applicationContext.xml</span><br><span class="line"><span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring-mvc.xml，与web.xml在同一目录下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans-4.0.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context-4.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自动扫描且只扫描@Controller --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.cakeonline"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span></span></span><br><span class="line"><span class="tag"><span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 基于注解驱动的SpringMVC --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mvc:annotation-driven enable-matrix-variables="true" / --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义JSP文件的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:jdbc</span>=<span class="string">"http://www.springframework.org/schema/jdbc"</span> <span class="attr">xmlns:jee</span>=<span class="string">"http://www.springframework.org/schema/jee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span> <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Spring公共配置 <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置Spring上下文的注解 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.cakeonline"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span></span></span><br><span class="line"><span class="tag"><span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写JSP页面和Controller（@Controller,@RequestMapping,@PathVariable,@RequestParam）</li></ol><h2 id="Spring概述"><a href="#Spring概述" class="headerlink" title="Spring概述"></a>Spring概述</h2><h3 id="回顾MVC"><a href="#回顾MVC" class="headerlink" title="回顾MVC"></a>回顾MVC</h3><p><img src="/2020/02/27/5-SpringMVC1/MVC.png" alt> </p><h3 id="SpringMVC体系结构"><a href="#SpringMVC体系结构" class="headerlink" title="SpringMVC体系结构"></a>SpringMVC体系结构</h3><p>SpringMVC是基于请求驱动，围绕一个核心Servlet 转发请求到对应的Controller而设计的</p><p>优点：</p><ol><li>是一个典型的MVC构架，易学易用</li><li>提供了清晰的角色划分，比如Controller、validator、handler mapping、view resolver等</li><li>业务代码可重用</li><li>可定制的数据绑定和验证，可定制的视图解决方案</li><li>提供了一套强大又使用简单的标签库</li><li>支持Restful风格</li></ol><p><img src="/2020/02/27/5-SpringMVC1/mvc_architecture.png" alt> </p><p>步骤：</p><ol><li>客户端发出请求，交给DispatcherServlet处理</li><li>DispatcherServlet根据请求信息及HandlerMapping的配置找到处理请求的处理器（Handler）</li><li>DispatcherServlet通过HandlerAdapter对Handler进行封装，再以统一的适配器接口调用Handler</li><li>处理器完成业务逻辑，返回一个ModelAndVIew给DispatcherServlet，ModelAndView包含视图逻辑名和模型数据信息</li><li>DispatcherServlet借由ViewResolver完成逻辑视图名到真实视图的解析工作</li><li>得到View真实视图后，DispatcherServlet就使用这个View对象对ModelAndView中的模型数据进行渲染</li><li>最终客户得到响应</li></ol><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><p><img src="/2020/02/27/5-SpringMVC1/mvc_lifestyle.png" alt> </p><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><h3 id="DispatcherServlet"><a href="#DispatcherServlet" class="headerlink" title="DispatcherServlet"></a>DispatcherServlet</h3><ol><li><p>DispatcherServlet继承自HttpServlet，是整个SpringMVC中的前端控制器，主要负责流程控制</p></li><li><p>DispatcherServlet使用了专有的Bean来处理请求和渲染视图，可以在WebApplicationContext中进行配置，这些Bean包括：</p></li></ol><table><thead><tr><th align="left">Bean类型</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">HandlerMapping</td><td align="left">将传入请求映射到处理器</td></tr><tr><td align="left">HandlerAdapter</td><td align="left">将处理器包装为适配器，从而支持多种类型的处理器</td></tr><tr><td align="left">ViewResolver</td><td align="left">将逻辑视图名解析为具体的View</td></tr><tr><td align="left">LocaleResolver &amp; LocaleContextResolver</td><td align="left">解释客户端所在地区和其时区(本地化)，以便提供国际化的视图</td></tr><tr><td align="left">ThemeResolver</td><td align="left">解释Web程序可用主题，比如提供个性化布局</td></tr><tr><td align="left">MultipartResolver</td><td align="left">解释multi-part请求，比如表单里支持文件上传</td></tr></tbody></table><ol start="3"><li>当一个请求传进来后，DispatcherServlet会按以下顺序处理：<ol><li>寻找 WebApplicationContext，并将 WebApplicationContext作为一个属性绑定到请求里，以便控制器或其他原件在后续中使用。默认会以DispatcherServlet.WEB_APPLICATION_CONTEXT_ATTRIBUTE 键绑定到请求里</li><li>将本地化解析器绑定到请求里，以便在处理这个请求时，原件可以解析到客户端的地区（为了渲染视图，准备日期等）</li><li>将主题解析其绑定到请求里，让原件（如视图）决定去使用哪一种主题</li><li>若指定一个multipart file解析器，会检查这个请求包含multiparts请求</li><li>寻找合适的 handler。如何找到这个 handler，执行与这个 handler 关联的执行链</li><li>如果返回一个 model，渲染相对应的视图</li></ol></li></ol><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><ol><li>@Controller表明被注解的类为控制器，该类不需要继承任何Controller的基类或者引用任意的ServletAPI，当然如果需要可以使用ServletAPI</li><li>spring-mvc.xml</li><li>Controller类<h4 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h4></li></ol><ul><li>@RequestMapping用于映射URL，该注解可以写在类级别上，也可以写在方法级别上</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"helloworld!"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相对于该路径的，上面的方法映射的URL路径是：/user/hello，<strong>推荐使用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"helloworld!"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接映射方法注解上的路径，上面的方法映射的URL路径是：/hello</p><ul><li>@RequestMapping中，还可以使用method来限制请求的类型，执行不同操作</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"add"</span>, method=RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//数据库查询，查蛋糕类型，存入到request</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"cake"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"add"</span>, method=RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//获取蛋糕的相关参数，插入数据库</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>URI模版是一个类似于URI的字符串，其中包含了一个或多个变量。当你将这些变量替换掉时，就变回了URI</li></ul><p>例：/cake/get/3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/cake"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CakeController</span> </span>&#123;</span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"get/&#123;cakeId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(@PathVariable <span class="keyword">int</span> cakeId)</span> </span>&#123;</span><br><span class="line">System.out.println(cakeId);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h4><p>@RequestParam将请求参数绑定到方法参法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(@RequestParam(value = <span class="string">"name"</span>, required=<span class="keyword">true</span>, defaultValue=<span class="string">"1"</span>)</span> String name,</span></span><br><span class="line"><span class="function"> @<span class="title">RequestParam</span><span class="params">(value=<span class="string">"pageNum"</span>, defaultValue=<span class="string">"1"</span>)</span><span class="keyword">int</span> pageNum) </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"helloworld!"</span>+name);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"hi"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RequestParam和-PathVariable的区别"><a href="#RequestParam和-PathVariable的区别" class="headerlink" title="@RequestParam和@PathVariable的区别"></a>@RequestParam和@PathVariable的区别</h4><ol><li>@RequestParam拿到的是传统的传参方式，例：form表单</li><li>@PathVariable页面请求路径中的参数，例：/user/login/zs</li></ol><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><p>SpringMVC中的拦截器是相当重要的，它的主要作用是拦截用户的请求并进行相应的处理，通常的还有如下作用：日志记录、权限检查、性能监控、通用行为</p><p>spring-mvc.xml中配置拦截器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置拦截器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span> /&gt;</span><span class="comment">&lt;!-- 拦截所有请求 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/user/login"</span> /&gt;</span><span class="comment">&lt;!-- 不拦截/user/login请求 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.myschool.user.LoginTimeInterceptor"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span><span class="comment">&lt;!-- 拦截器类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><p>LoginTimeInterceptor拦截器类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myschool.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginTimeInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"afterCompletion"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler,</span></span></span><br><span class="line"><span class="function"><span class="params">ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"postHandle"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"preHandle"</span>);</span><br><span class="line">Calendar cal = Calendar.getInstance();</span><br><span class="line">        <span class="keyword">int</span> hour = cal.get(Calendar.HOUR_OF_DAY);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">8</span> &lt;= hour &amp;&amp; hour &lt; <span class="number">17</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        response.sendRedirect(<span class="string">"index.jsp"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//return true;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>SpringMVC提供了2种常用的方法来实现</p><ul><li>基于Servlet3.0的文件上传</li><li>基于Commons FileUpload的文件上传（最常用）</li></ul><p>介绍Commons Fileupload方法</p><ol><li>导入commons-fileupload.jar和commons-io.jar</li><li>在spring-mvc.xml中加入</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"200000"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>index.jsp</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="meta-string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload1"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upfile"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">=============================================</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload2"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upfile"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">=============================================</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload3"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upfile"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upfile"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>UploadController类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.upload;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.FileCopyUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"upload1"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">upload1</span><span class="params">(@RequestParam(value=<span class="string">"title"</span>)</span> String title,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(value=<span class="string">"upfile"</span>)</span> MultipartFile file,</span></span><br><span class="line"><span class="function">            HttpServletRequest request)</span>&#123;</span><br><span class="line">System.out.println(title);</span><br><span class="line">String rootPath=request.getServletContext().getRealPath(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">if</span>(!file.isEmpty())&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">InputStream is=file.getInputStream();</span><br><span class="line">FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(</span><br><span class="line">rootPath+<span class="string">"/"</span>+<span class="string">"upload/"</span></span><br><span class="line">+file.getOriginalFilename());</span><br><span class="line"><span class="keyword">byte</span> []cache=<span class="keyword">new</span> <span class="keyword">byte</span>[is.available()];</span><br><span class="line">fos.write(cache);</span><br><span class="line">is.close();</span><br><span class="line">fos.flush();</span><br><span class="line">fos.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"upload2"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">upload2</span><span class="params">(@RequestParam(value=<span class="string">"title"</span>)</span> String title,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(value=<span class="string">"upfile"</span>)</span> MultipartFile file,</span></span><br><span class="line"><span class="function">            HttpServletRequest request)</span>&#123;</span><br><span class="line">System.out.println(title);</span><br><span class="line">String rootPath=request.getServletContext().getRealPath(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">FileCopyUtils.copy(file.getBytes(), </span><br><span class="line"><span class="keyword">new</span> File(rootPath+<span class="string">"/upload"</span>,file.getOriginalFilename()));</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"upload3"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">upload3</span><span class="params">(@RequestParam(value=<span class="string">"title"</span>)</span> String title,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(value=<span class="string">"upfile"</span>)</span> MultipartFile []file,</span></span><br><span class="line"><span class="function">            HttpServletRequest request)</span>&#123;</span><br><span class="line">System.out.println(title);</span><br><span class="line">String rootPath=request.getServletContext().getRealPath(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">for</span>(MultipartFile temp:file)</span><br><span class="line">FileCopyUtils.copy(temp.getBytes(), </span><br><span class="line"><span class="keyword">new</span> File(rootPath+<span class="string">"/upload"</span>,temp.getOriginalFilename()));</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;程序搭建过程&quot;&gt;&lt;a href=&quot;#程序搭建过程&quot; class=&quot;headerlink&quot; title=&quot;程序搭建过程&quot;&gt;&lt;/a&gt;程序搭建过程&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建web工程，导入jar&lt;/li&gt;
&lt;li&gt;配置xml文件 3个(web.xml，spring-mvc.xml，applicationContext.xml)&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>4-AOP</title>
    <link href="http://yoursite.com/2020/02/27/4-AOP/"/>
    <id>http://yoursite.com/2020/02/27/4-AOP/</id>
    <published>2020-02-27T02:47:49.000Z</published>
    <updated>2020-03-03T01:09:54.615Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h2><h3 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h3><p>代理对象与被代理对象必须实现同一个接口，在代理对象中实现日志等服务<br>问题：</p><ol><li>代理对象的一个接口只服务于一种类型的对象</li><li>如果要代理的方法很多，要为每种方法进行代理</li><li>静态代理在程序规模稍大时无法胜任</li></ol><h3 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h3><ul><li>InvocationHandler接口</li><li>关键：使用Proxy.newProxyInstance()静态方法建立一个代理对象(建立代理对象必须告知要代理的接口)</li><li>操作代理对象时会执行invoke()方法</li></ul><a id="more"></a><h2 id="AOP概述"><a href="#AOP概述" class="headerlink" title="AOP概述"></a>AOP概述</h2><p>AOP（ Aspect-Oriented Programming ，面向切面编程）</p><ul><li><p>提供了一种新的组织程序结构的思路</p></li><li><p>是对OOP的补充，而不是替代，经常和OOP一起使用</p></li><li><p>OOP的核心单位是类，而AOP则是切面</p></li><li><p>典型的例子包括日志、验证、事务管理等</p></li><li><p>优点：</p><ul><li>使开发人员集中关注于系统的核心业务逻辑</li><li>更利于创建松散的、可复用、可扩展的软件系统</li></ul></li><li><p>关注点：一个关注点可以是一个特定的问题、概念或者程序要达到的一个目标。比如日志记录等都是关注点。如果一个关注点的代码被多个类或方法引用，这个关注点就被称为横切关注点</p></li><li><p>切面：一个切面是对一个横切关注点的模块化</p></li><li><p>连接点：程序执行过程中的某个点，如方法调用或者抛出异常等</p></li><li><p>通知：在特定的连接点应该执行的动作，在多数AOP框架中，通知都是由拦截器实现的，Spring AOP也是如此（定义何时）</p><ul><li>通知（Advice）类型：<ul><li>前置通知(Before advice)：在某连接点之前执行的通知 </li><li>后置通知(After returning advice)：在某连接点正常完成后执行的通知</li><li>异常通知(After throwing advice)：在方法抛出异常退出时执行的通知</li><li>最终通知(After finally advice)：当某连接点退出的时候执行的通知</li><li>环绕通知(Around advice)：包围一个连接点的通知，这是最强大的一种通知类型</li></ul></li></ul></li><li><p>切入点：定义在哪些连接点处使用通知，在应用中一般通过指定类名、方法名或者匹配类名、方法名的正则表达式来指定切入点（何地）</p></li><li><p>目标对象：被切面所通知的对象</p></li><li><p>织入：将切面应用到目标对象，从而创建新的代理对象</p></li></ul><p>AOP示意图：<br><img src="/2020/02/27/4-AOP/AOP.png" alt></p><h2 id="Spring-AOP"><a href="#Spring-AOP" class="headerlink" title="Spring AOP"></a>Spring AOP</h2><ul><li>Spring AOP是由纯Java语言实现</li><li>Spring AOP和其他AOP框架不同，目的并不是提供最完整的AOP，目前仅支持方法执行上的连接点；但是他和Spring的IoC集成紧密，可以帮助解决企业应用中的常见问题</li><li>当Spring AOP不能满足我们的需求时，可以采用其他AOP框架，比如AspectJ，Spring框架可以很好的集成诸如AspectJ等框架，他们是互补的</li></ul><h3 id="实现：Spring-AOP提供了3种实现方式"><a href="#实现：Spring-AOP提供了3种实现方式" class="headerlink" title="实现：Spring AOP提供了3种实现方式"></a>实现：Spring AOP提供了3种实现方式</h3><ul><li>实现SpringAPI的传统方式<ul><li>步骤：编写通知，编写切点，Spring自动创建代理对象</li></ul></li><li>纯POJO类（Advice不用实现任何接口）<ul><li>一种基于Schema的XML配置，用<aop>标签<ul><li>通知不需要实现特定的接口</li><li>切面都集中在xml文件中，更加集中、清晰</li></ul></aop></li><li>一种基于注解驱动的切面<ul><li>@AspectJ 是一种使用普通Java类注解来声明AOP切面的方式</li><li>开启@AspectJ支持<ul><li>开启Java的配置方式：@EnableAspectJAutoProxy</li><li>开启Xml的配置方式：&lt;aop:aspectj-autoproxy /&gt;</li></ul></li></ul></li></ul></li><li>使用AspectJ切面</li></ul><p>Spring AOP生成代理原理图：</p><p><img src="/2020/02/27/4-AOP/SpringAOP.png" alt></p><h2 id="例子：实现用户的注册登录功能"><a href="#例子：实现用户的注册登录功能" class="headerlink" title="例子：实现用户的注册登录功能"></a>例子：实现用户的注册登录功能</h2><h3 id="代理法"><a href="#代理法" class="headerlink" title="代理法"></a>代理法</h3><p>bean.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"UserServiceImpl"</span> <span class="attr">class</span>=<span class="string">"com.user.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"Md5Advice"</span> <span class="attr">class</span>=<span class="string">"com.advice.Md5Advice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"LogAdvice"</span> <span class="attr">class</span>=<span class="string">"com.advice.LogAdvice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"RegistExceptionAdvice"</span> <span class="attr">class</span>=<span class="string">"com.advice.RegistExceptionAdvice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"TimeAdvice"</span> <span class="attr">class</span>=<span class="string">"com.advice.TimeAdvice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"UserProxy"</span> <span class="attr">class</span>=<span class="string">"org.springframework.aop.framework.ProxyFactoryBean"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"proxyInterfaces"</span> <span class="attr">value</span>=<span class="string">"com.user.UserService"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"interceptorNames"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>Md5Advice<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>LogAdvice<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>TimeAdvice<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"target"</span> <span class="attr">ref</span>=<span class="string">"UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>UserService:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">regist</span><span class="params">(String name, String password)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String name, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">regist</span><span class="params">(String name, String password)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"密码是："</span>+password);</span><br><span class="line">System.out.println(<span class="string">"业务逻辑：用户adi注册成功"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String name, String password)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(name.equals(<span class="string">"adi"</span>) &amp;&amp; password.equals(<span class="string">"123"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"业务逻辑：用户adi登录成功"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"业务逻辑：用户adi登录失败"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Md5Advice(前置通知):</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Md5Advice</span> <span class="keyword">implements</span> <span class="title">MethodBeforeAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 前置通知</span></span><br><span class="line"><span class="comment"> * arg0是调用的方法</span></span><br><span class="line"><span class="comment"> * arg1是方法传进来的value值</span></span><br><span class="line"><span class="comment"> * arg2是哪个类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(Method arg0, Object[] arg1, Object arg2)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"----------前置通知开始----------"</span>);</span><br><span class="line">System.out.println(arg0.getName());</span><br><span class="line">System.out.println(arg1[<span class="number">1</span>]);</span><br><span class="line">System.out.println(arg2.getClass().getName());</span><br><span class="line"><span class="comment">//String newPwd = Md5Encode.getMD5(arg1[1].toString().getBytes());</span></span><br><span class="line"><span class="comment">//arg1[1] = newPwd;//改变密码值</span></span><br><span class="line">System.out.println(<span class="string">"----------前置通知结束----------"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LogAdvice（后置通知）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogAdvice</span> <span class="keyword">implements</span> <span class="title">AfterReturningAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后置通知</span></span><br><span class="line"><span class="comment"> * arg0是方法返回值</span></span><br><span class="line"><span class="comment"> * arg1是方法的名字</span></span><br><span class="line"><span class="comment"> * arg2是方法的value值</span></span><br><span class="line"><span class="comment"> * arg3是哪个类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(Object arg0, Method arg1, Object[] arg2, Object arg3)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"----------后置通知开始----------"</span>);</span><br><span class="line">System.out.println(arg0);</span><br><span class="line">System.out.println(arg3);</span><br><span class="line">System.out.println(arg2[<span class="number">0</span>]+<span class="string">"在"</span>+<span class="keyword">new</span> Date().toLocaleString()+<span class="string">"登录"</span>);</span><br><span class="line"><span class="comment">//arg0=false;</span></span><br><span class="line">System.out.println(<span class="string">"----------后置通知结束----------"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RegistExceptionAdvice（异常通知）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegistExceptionAdvice</span> <span class="keyword">implements</span> <span class="title">ThrowsAdvice</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异常通知，可打印异常信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"异常通知发生异常"</span>+e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TimeAdvice（环绕通知）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeAdvice</span> <span class="keyword">implements</span> <span class="title">MethodInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 环绕通知，可以控制方法的进行，通常进行权限的设置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(MethodInvocation arg0)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"方法开始执行时间："</span>+<span class="keyword">new</span> Date().toLocaleString());</span><br><span class="line"></span><br><span class="line">Object result = arg0.proceed();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"方法结束执行时间："</span>+<span class="keyword">new</span> Date().toLocaleString());</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Md5Encode(MD5加密工具类)：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Md5Encode</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMD5</span><span class="params">(<span class="keyword">byte</span>[] source)</span> </span>&#123;</span><br><span class="line">String s = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">char</span> hexDigits[] = &#123; <span class="comment">// 用来将字节转换成 16 进制表示的字符</span></span><br><span class="line"><span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span> &#125;;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">java.security.MessageDigest md = java.security.MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">md.update(source);</span><br><span class="line"><span class="keyword">byte</span> tmp[] = md.digest(); <span class="comment">// MD5 的计算结果是一个 128 位的长整数，</span></span><br><span class="line"><span class="comment">// 用字节表示就是 16 个字节</span></span><br><span class="line"><span class="keyword">char</span> str[] = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">16</span> * <span class="number">2</span>]; <span class="comment">// 每个字节用 16 进制表示的话，使用两个字符，</span></span><br><span class="line"><span class="comment">// 所以表示成 16 进制需要 32 个字符</span></span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>; <span class="comment">// 表示转换结果中对应的字符位置</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123; <span class="comment">// 从第一个字节开始，对 MD5 的每一个字节</span></span><br><span class="line"><span class="comment">// 转换成 16 进制字符的转换</span></span><br><span class="line"><span class="keyword">byte</span> byte0 = tmp[i]; <span class="comment">// 取第 i 个字节</span></span><br><span class="line">str[k++] = hexDigits[byte0 &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>]; <span class="comment">// 取字节中高 4 位的数字转换,</span></span><br><span class="line"><span class="comment">// &gt;&gt;&gt; 为逻辑右移，将符号位一起右移</span></span><br><span class="line">str[k++] = hexDigits[byte0 &amp; <span class="number">0xf</span>]; <span class="comment">// 取字节中低 4 位的数字转换</span></span><br><span class="line">&#125;</span><br><span class="line">s = <span class="keyword">new</span> String(str); <span class="comment">// 换后的结果转换为字符串</span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test（测试类）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">ApplicationContext ctx = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">UserService us = (UserService)ctx.getBean(<span class="string">"UserProxy"</span>);</span><br><span class="line">us.regist(<span class="string">"adi"</span>, <span class="string">"123"</span>);</span><br><span class="line"><span class="comment">//boolean bool = us.login("adi", "123");</span></span><br><span class="line"><span class="comment">//System.out.println(bool);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="xml方法"><a href="#xml方法" class="headerlink" title="xml方法"></a>xml方法</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop  </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 业务逻辑 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"UserServiceImpl"</span> <span class="attr">class</span>=<span class="string">"com.user.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- advices --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"MyAdvice"</span> <span class="attr">class</span>=<span class="string">"com.advices.MyAdvice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;aop:pointcut expression="execution(* com.user.*.*(..))" id="mypc"/&gt; </span></span><br><span class="line"><span class="comment">&lt;aop:aspect id="MyAspect" ref="MyAdvice" order="2"&gt; &lt;aop:before method="before" </span></span><br><span class="line"><span class="comment">pointcut-ref="mypc"/&gt; &lt;/aop:aspect&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">"MyAspect"</span> <span class="attr">ref</span>=<span class="string">"MyAdvice"</span> <span class="attr">order</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"before"</span> <span class="attr">pointcut</span>=<span class="string">"execution(* com.user.*.*(..))"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">"afterReturning"</span></span></span><br><span class="line"><span class="tag"><span class="attr">pointcut</span>=<span class="string">"execution(* com.user.*.*(..))"</span> <span class="attr">returning</span>=<span class="string">"result"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">"around"</span> <span class="attr">pointcut</span>=<span class="string">"execution(* com.user.*.*(..))"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--aop:after-throwing method="throwExMethod" pointcut="execution(* service.*.*(..))" </span></span><br><span class="line"><span class="comment">throwing="ex"/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">"after"</span> <span class="attr">pointcut</span>=<span class="string">"execution(* com.user.*.*(..))"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MyAdvice.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"前置通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(JoinPoint joinPoint, Object result)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"后置通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"最终通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"环绕通知"</span>);</span><br><span class="line">Object[] args = joinPoint.getArgs();</span><br><span class="line">Object result = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">result = joinPoint.proceed(args);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"环绕通知"</span>);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">throwMethod</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"异常通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String name, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String name, String password)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"业务执行，登录成功"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">ApplicationContext ctx = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">UserService us = (UserService)ctx.getBean(<span class="string">"UserServiceImpl"</span>);</span><br><span class="line">us.login(<span class="string">"adi"</span>, <span class="string">"123"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注解方法"><a href="#注解方法" class="headerlink" title="注解方法"></a>注解方法</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop  </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这部分是加入通知的代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MyAdvice.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span> <span class="comment">// 声明AOP切面</span></span><br><span class="line"><span class="meta">@Order</span>(<span class="number">2</span>)<span class="comment">//控制执行顺序，数值越小先执行</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span>(<span class="string">"execution(* com.user.*.*(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"前置通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@AfterReturning</span>(pointcut = <span class="string">"execution(* com.user.UserServiceImpl.*(..))"</span>, returning = <span class="string">"result"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(JoinPoint joinPoint, Object result)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"后置通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@After</span>(<span class="string">"execution(* com.user.*.*(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"最终通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Around</span>(<span class="string">"execution(* com.user.*.*(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"环绕通知"</span>);</span><br><span class="line">Object[] args = joinPoint.getArgs();</span><br><span class="line">Object result = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">result = joinPoint.proceed(args);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"环绕通知"</span>);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@AfterThrowing</span>(value = <span class="string">"execution(* com.user.*.*(..))"</span>, throwing = <span class="string">"ex"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">throwMethod</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"异常通知"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String name, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(<span class="string">"UserServiceImpl"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String name, String password)</span> <span class="keyword">throws</span> RuntimeException</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"业务执行，登录成功"</span>);</span><br><span class="line"><span class="comment">//int num = 10/0;</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;代理模式&quot;&gt;&lt;a href=&quot;#代理模式&quot; class=&quot;headerlink&quot; title=&quot;代理模式&quot;&gt;&lt;/a&gt;代理模式&lt;/h2&gt;&lt;h3 id=&quot;静态代理&quot;&gt;&lt;a href=&quot;#静态代理&quot; class=&quot;headerlink&quot; title=&quot;静态代理&quot;&gt;&lt;/a&gt;静态代理&lt;/h3&gt;&lt;p&gt;代理对象与被代理对象必须实现同一个接口，在代理对象中实现日志等服务&lt;br&gt;问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;代理对象的一个接口只服务于一种类型的对象&lt;/li&gt;
&lt;li&gt;如果要代理的方法很多，要为每种方法进行代理&lt;/li&gt;
&lt;li&gt;静态代理在程序规模稍大时无法胜任&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;动态代理&quot;&gt;&lt;a href=&quot;#动态代理&quot; class=&quot;headerlink&quot; title=&quot;动态代理&quot;&gt;&lt;/a&gt;动态代理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;InvocationHandler接口&lt;/li&gt;
&lt;li&gt;关键：使用Proxy.newProxyInstance()静态方法建立一个代理对象(建立代理对象必须告知要代理的接口)&lt;/li&gt;
&lt;li&gt;操作代理对象时会执行invoke()方法&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>3-SpringEL和数据验证</title>
    <link href="http://yoursite.com/2020/02/27/3-SpringEL%E5%92%8C%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81/"/>
    <id>http://yoursite.com/2020/02/27/3-SpringEL%E5%92%8C%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81/</id>
    <published>2020-02-27T02:47:28.000Z</published>
    <updated>2020-03-03T01:09:54.616Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据验证"><a href="#数据验证" class="headerlink" title="数据验证"></a>数据验证</h2><ul><li>数据验证不应该被限定在web层去处理，它应该在任何需要做数据验证的地方做验证</li><li>基于以上考虑，Spring设计了一个既方便又可以在所有层使用的Validator接口</li><li>Spring提供了Validator接口来进行对对象的验证，该接口实现2个方法<ul><li>supports(Class)-判断该validator是否能校验提供的class的实例</li><li>validate(Object, org.springframework.validation.Errors)- 校验给定的对象，如果有校验失败信息，将其放入Errors对象</li></ul></li><li>SpringMVC还支持声明式验证@Controller输入</li></ul><a id="more"></a><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Date birthday;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> birthday;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserValidator.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserValidator</span> <span class="keyword">implements</span> <span class="title">Validator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(Class&lt;?&gt; arg0)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> User<span class="class">.<span class="keyword">class</span>.<span class="title">equals</span>(<span class="title">arg0</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(Object arg0, Errors arg1)</span> </span>&#123;</span><br><span class="line">ValidationUtils.rejectIfEmpty(arg1, <span class="string">"id"</span>, <span class="string">"id can't be null"</span>, <span class="string">"id不能为空"</span>);</span><br><span class="line">User u=(User)arg0;</span><br><span class="line">ValidationUtils.rejectIfEmpty(arg1, <span class="string">"name"</span>, <span class="string">"name.empty"</span>, <span class="string">"用户名不能为空"</span>);</span><br><span class="line"><span class="keyword">if</span>(u.getBirthday().getTime()&gt;<span class="keyword">new</span> Date().getTime())&#123;</span><br><span class="line">arg1.rejectValue(<span class="string">"birthday"</span>, <span class="string">"birthday.wrong"</span>, <span class="string">"出生日期不能晚于当前时间"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">User u=<span class="keyword">new</span> User();</span><br><span class="line">u.setBirthday(<span class="keyword">new</span> Date(<span class="keyword">new</span> Date().getTime()+<span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line">Errors e=<span class="keyword">new</span> BindException(u, <span class="string">"User"</span>);</span><br><span class="line">Validator v=<span class="keyword">new</span> UserValidator();</span><br><span class="line">v.validate(u, e);</span><br><span class="line">List&lt;ObjectError&gt; list=e.getAllErrors();</span><br><span class="line"><span class="keyword">for</span>(ObjectError temp:list)&#123;</span><br><span class="line">System.out.println(temp.getCode());</span><br><span class="line">System.out.println(temp.getDefaultMessage());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SpringEL"><a href="#SpringEL" class="headerlink" title="SpringEL"></a>SpringEL</h2><p>表达式的语法形式：#{&lt;表达式字符串&gt;}</p><h3 id="SpringEL方法"><a href="#SpringEL方法" class="headerlink" title="SpringEL方法"></a>SpringEL方法</h3><p>SpringEL允许开发者将一个对象的属性注入给另一个对象属性，也可以调用一个对象的方法，并将返回值注入给另一个对象的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(<span class="string">"item"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Item</span></span>&#123;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;' tea'. toupperCase()&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String upName;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123; mathutil. getLength()&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> itemLength;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123; mathutil. getArea(3)&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> itemArea;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>(<span class="string">"mathUtil"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mathutil</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">(<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> Math. PI*r*r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SpringEL构造"><a href="#SpringEL构造" class="headerlink" title="SpringEL构造"></a>SpringEL构造</h3><p>SpringEL允许开发者调用new关键字，实现构造方法调用，并实例化出对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Computerl</span></span>&#123;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;new com.constructor.Memory1()&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> Memoryl memory1;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;new int[]&#123;1,2,3&#125;&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> [] count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SpringEL操作符"><a href="#SpringEL操作符" class="headerlink" title="SpringEL操作符"></a>SpringEL操作符</h3><p>SpringEL支持大多数的算数运算符、关系运算符、逻辑运算符、三元运算符等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MathItem</span></span>&#123;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;3+5&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> num1;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;3^3&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> num2;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;5&gt;4&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> num3;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;5+3&gt;4&amp;&amp;3&gt;2&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> num4;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;mathItem. num1&gt;mathItem. num2?' numl':' num2'&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String num5;</span><br></pre></td></tr></table></figure><h3 id="SpringEL集合"><a href="#SpringEL集合" class="headerlink" title="SpringEL集合"></a>SpringEL集合</h3><ul><li>SpringEL支持对List、Properties、Map等集合的操作，还支持集合选择、集合投影等</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;dataItem. list&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> List list;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;datartem. list[1]&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String listValue;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;dataItem. map['2']&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String mapValue;</span><br></pre></td></tr></table></figure><ul><li>SpringEL集合选择<ul><li>.?[]可以设置筛选条件</li><li>.^[]获取第一个匹配项</li><li>.$[]获取最后一个匹配项</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;dataItem.students.?[stuId&gt;1]&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> List sublist;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;dataItem.map.?[key=='3']&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> Map subMap;</span><br></pre></td></tr></table></figure><ul><li>集合投影：  .![]可以选择特定属性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;dataItem. students.![stuName]&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> List namelist;</span><br></pre></td></tr></table></figure><ul><li>SpringEL 集合选择和集合投影结合使用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"#&#123;dataItem.students.?[stuId&gt;1].![stuName]&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> List nameList;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;数据验证&quot;&gt;&lt;a href=&quot;#数据验证&quot; class=&quot;headerlink&quot; title=&quot;数据验证&quot;&gt;&lt;/a&gt;数据验证&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数据验证不应该被限定在web层去处理，它应该在任何需要做数据验证的地方做验证&lt;/li&gt;
&lt;li&gt;基于以上考虑，Spring设计了一个既方便又可以在所有层使用的Validator接口&lt;/li&gt;
&lt;li&gt;Spring提供了Validator接口来进行对对象的验证，该接口实现2个方法&lt;ul&gt;
&lt;li&gt;supports(Class)-判断该validator是否能校验提供的class的实例&lt;/li&gt;
&lt;li&gt;validate(Object, org.springframework.validation.Errors)- 校验给定的对象，如果有校验失败信息，将其放入Errors对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SpringMVC还支持声明式验证@Controller输入&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2-Spring-Beans和生命周期（对象实例化及属性注入-xml方式）</title>
    <link href="http://yoursite.com/2020/02/27/2-Spring-Beans%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%88%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%8F%8A%E5%B1%9E%E6%80%A7%E6%B3%A8%E5%85%A5-%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>http://yoursite.com/2020/02/27/2-Spring-Beans%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%88%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%8F%8A%E5%B1%9E%E6%80%A7%E6%B3%A8%E5%85%A5-%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2020-02-27T02:46:50.000Z</published>
    <updated>2020-03-03T01:09:54.617Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="xml配置的方式进行实例化"><a href="#xml配置的方式进行实例化" class="headerlink" title="xml配置的方式进行实例化"></a>xml配置的方式进行实例化</h2><h3 id="配置文件中bean标签的属性"><a href="#配置文件中bean标签的属性" class="headerlink" title="配置文件中bean标签的属性"></a>配置文件中bean标签的属性</h3><p>（1）id属性：起名称，id属性值名称任意命名 </p><ul><li>id属性值，不能包含特殊符号 </li><li>根据id值得到配置对象</li></ul><p>（2）class属性：创建对象所在类的全路径</p><p>（3）name属性：功能和id属性一样的，id属性值不能包含特殊符号，但是在name属性值里面可以包含特殊符号</p><p>（4）scope属性 </p><ul><li>singleton：默认值，单例 </li><li>prototype：多例</li></ul><a id="more"></a><h3 id="无参构造实例化对象"><a href="#无参构造实例化对象" class="headerlink" title="无参构造实例化对象"></a>无参构造实例化对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//phone类：</span></span><br><span class="line"><span class="keyword">package</span> com.test.vo;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"Phone......."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--applicationContext.xml配置文件--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入约束--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"phone"</span> <span class="attr">class</span>=<span class="string">"com.test.vo.Phone"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//加载配置文件，创建对象</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">//得到配置创建的对象</span></span><br><span class="line">        Phone Phone = (Phone) context.getBean(<span class="string">"phone"</span>);</span><br><span class="line">        <span class="comment">//调用对象方法</span></span><br><span class="line">        Phone.printTest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：java类中默认有无参构造方法，若类中已声明了有参构造，则需手动声明无参构造方法。</p><h3 id="使用静态工厂进行创建"><a href="#使用静态工厂进行创建" class="headerlink" title="使用静态工厂进行创建"></a>使用静态工厂进行创建</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//静态工厂类</span></span><br><span class="line"><span class="keyword">package</span> com.test.utils;</span><br><span class="line"><span class="keyword">import</span> com.test.vo.Phone;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">//静态方法，返回Phone对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Phone <span class="title">getPhone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Phone();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//创建的对象为Phone类对象不变</span><br><span class="line">//配置文件改为：</span><br><span class="line"><span class="comment">&lt;!--applicationContext.xml配置文件--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入约束--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--class为静态工厂的路径，factory-method为工厂的方法--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"phoneFa"</span> <span class="attr">class</span>=<span class="string">"com.test.utils.BeanFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getPhone"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        Phone Phone = (Phone) context.getBean(<span class="string">"phoneFa"</span>);</span><br><span class="line">        Phone.printTest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用实例工厂进行创建"><a href="#使用实例工厂进行创建" class="headerlink" title="使用实例工厂进行创建"></a>使用实例工厂进行创建</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实列工厂类：</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanUFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">//普通方法，返回Phone对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Phone <span class="title">getPhone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Phone();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">配置文件修改：</span><br><span class="line"><span class="comment">&lt;!-- 1.先创建工厂对象 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2.再创建Phone对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"BeanUFactory"</span> <span class="attr">class</span>=<span class="string">"com.test.utils.BeanUFactory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"phoneUFa"</span> <span class="attr">factory-bean</span>=<span class="string">"BeanUFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getPhone"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试类：</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        Phone Phone = (Phone) context.getBean(<span class="string">"phoneUFa"</span>);</span><br><span class="line">        Phone.printTest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="属性注入"><a href="#属性注入" class="headerlink" title="属性注入"></a>属性注入</h2><h3 id="使用有参数构造方法注入属性："><a href="#使用有参数构造方法注入属性：" class="headerlink" title="使用有参数构造方法注入属性："></a>使用有参数构造方法注入属性：</h3><p>Phone类改写为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//显示声明无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Phone</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="comment">//有参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Phone</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.print(name+<span class="string">"Phone......."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>applicationContext.xml配置文件修改为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入约束--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--class为静态工厂的路径，factory-method为工厂的方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"phoneFa"</span> <span class="attr">class</span>=<span class="string">"com.test.utils.BeanFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getPhone"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--name为构造方法的参数名，value为要将其设置的值--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"诺基亚"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        Phone Phone = (Phone) context.getBean(<span class="string">"phoneFa"</span>);</span><br><span class="line">        Phone.printTest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><code>诺基亚Phone.......</code></p><h3 id="使用set方法注入属性："><a href="#使用set方法注入属性：" class="headerlink" title="使用set方法注入属性："></a>使用set方法注入属性：</h3><p>Phone类改写为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.print(name+<span class="string">"Phone......."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>applicationContext.xml配置文件修改为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入约束--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--class为静态工厂的路径，factory-method为工厂的方法--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"phoneFa"</span> <span class="attr">class</span>=<span class="string">"com.test.utils.BeanFactory"</span> <span class="attr">factory-method</span>=<span class="string">"getPhone"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--name为要注入的属性的名称，value为要将其设置的值--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"三星"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果：</p><p><code>三星Phone.......</code></p><h3 id="注入对象类型属性"><a href="#注入对象类型属性" class="headerlink" title="注入对象类型属性"></a>注入对象类型属性</h3><p>新建Person类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(String age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Phone类修改为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPerson</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.person = person;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.print(person.getName()+<span class="string">"::"</span>+person.getAge()+<span class="string">"::"</span>+person.getSex());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件作如下修改：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"person"</span> <span class="attr">class</span>=<span class="string">"com.test.vo.Person"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"小王"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"man"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"11"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"phone"</span> <span class="attr">class</span>=<span class="string">"com.test.vo.Phone"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 因注入的是对象写ref属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"person"</span> <span class="attr">ref</span>=<span class="string">"person"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试方法不变，结果为：</p><p><code>小王::11::man</code></p><h3 id="注入复杂类型属性"><a href="#注入复杂类型属性" class="headerlink" title="注入复杂类型属性"></a>注入复杂类型属性</h3><p>Phone类修改为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String arr[];</span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; map; </span><br><span class="line"></span><br><span class="line">    <span class="comment">//set方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setArr</span><span class="params">(String[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.arr = arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(List&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMap</span><span class="params">(Map&lt;String, String&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.map = map;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"arr:"</span>+Arrays.toString(arr));</span><br><span class="line">        System.out.println(<span class="string">"list:"</span>+list);</span><br><span class="line">        System.out.println(<span class="string">"map:"</span>+map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件作如下修改：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"phone"</span> <span class="attr">class</span>=<span class="string">"com.test.vo.Phone"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数组 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"arr"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>小米<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>中兴<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>华为<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- list集合 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- map集合 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"aa"</span> <span class="attr">value</span>=<span class="string">"lucy"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"bb"</span> <span class="attr">value</span>=<span class="string">"bob"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"cc"</span> <span class="attr">value</span>=<span class="string">"jerry"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr:[小米, 中兴, 华为]</span><br><span class="line">list:[1, 2, 3]</span><br><span class="line">map:&#123;aa&#x3D;lucy, bb&#x3D;bob, cc&#x3D;jerry&#125;</span><br></pre></td></tr></table></figure><p>转载自：<a href="https://blog.csdn.net/weixin_40425481/article/details/82183804" target="_blank" rel="noopener">链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;xml配置的方式进行实例化&quot;&gt;&lt;a href=&quot;#xml配置的方式进行实例化&quot; class=&quot;headerlink&quot; title=&quot;xml配置的方式进行实例化&quot;&gt;&lt;/a&gt;xml配置的方式进行实例化&lt;/h2&gt;&lt;h3 id=&quot;配置文件中bean标签的属性&quot;&gt;&lt;a href=&quot;#配置文件中bean标签的属性&quot; class=&quot;headerlink&quot; title=&quot;配置文件中bean标签的属性&quot;&gt;&lt;/a&gt;配置文件中bean标签的属性&lt;/h3&gt;&lt;p&gt;（1）id属性：起名称，id属性值名称任意命名 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id属性值，不能包含特殊符号 &lt;/li&gt;
&lt;li&gt;根据id值得到配置对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）class属性：创建对象所在类的全路径&lt;/p&gt;
&lt;p&gt;（3）name属性：功能和id属性一样的，id属性值不能包含特殊符号，但是在name属性值里面可以包含特殊符号&lt;/p&gt;
&lt;p&gt;（4）scope属性 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;singleton：默认值，单例 &lt;/li&gt;
&lt;li&gt;prototype：多例&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2-Spring-Beans和生命周期（对象实例化及属性注入-注解方式）</title>
    <link href="http://yoursite.com/2020/02/27/2-Spring-Beans%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%88%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%8F%8A%E5%B1%9E%E6%80%A7%E6%B3%A8%E5%85%A5-xml%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>http://yoursite.com/2020/02/27/2-Spring-Beans%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%EF%BC%88%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%8F%8A%E5%B1%9E%E6%80%A7%E6%B3%A8%E5%85%A5-xml%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2020-02-27T02:46:49.000Z</published>
    <updated>2020-03-03T01:09:54.618Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>通过xml的方式进行对象的实列化或属性注入或许有一些繁琐，所以在开发中常用的方式更多是通过注解的方式实现对象实例化和属性注入的。</p><h2 id="使用注解创建对象"><a href="#使用注解创建对象" class="headerlink" title="使用注解创建对象"></a>使用注解创建对象</h2><p>Spring配置文件(beans.xml)：</p><a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开启注解扫描 ,到包里面扫描类、方法、属性上面是否有注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.test"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Person类对象代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用<span class="doctag">@Component</span>创建对象,对象名为person</span></span><br><span class="line"><span class="comment"> * 用<span class="doctag">@Scope</span>声明value为prototype，是创建多列对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(value=<span class="string">"person"</span>)</span><br><span class="line"><span class="meta">@Scope</span>(value=<span class="string">"prototype"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"............person"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">Person person = (Person) context.getBean(<span class="string">"person"</span>);</span><br><span class="line">person.add();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注解注入属性"><a href="#注解注入属性" class="headerlink" title="注解注入属性"></a>注解注入属性</h2><h3 id="Autowired注解进行注入（例：经Dao注入到Service中）："><a href="#Autowired注解进行注入（例：经Dao注入到Service中）：" class="headerlink" title="@Autowired注解进行注入（例：经Dao注入到Service中）："></a>@Autowired注解进行注入（例：经Dao注入到Service中）：</h3><p>Daotest:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(value=<span class="string">"daotest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaoTest</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"............DaoTest"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ServiceTest:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>(value=<span class="string">"servicetest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">DaoTest dao;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">".........Service"</span>);</span><br><span class="line">dao.printDao();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类Test：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beanTest1.xml"</span>);</span><br><span class="line">ServiceTest servicetest = (ServiceTest) context.getBean(<span class="string">"servicetest"</span>);</span><br><span class="line">servicetest.printService();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Resource进行注入"><a href="#Resource进行注入" class="headerlink" title="@Resource进行注入"></a>@Resource进行注入</h3><p>则ServiceTest改为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>(value=<span class="string">"servicetest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span>(name=<span class="string">"daotest"</span>)</span><br><span class="line">DaoTest dao;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">".........Service"</span>);</span><br><span class="line">dao.printDao();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个注解的异同：</p><ul><li>异：<ul><li>@Autowried是Spring提供的注解，是按类型（byType）注入的。</li><li>@Resource是JEE提供的，是按名称（byName）注入的。</li></ul></li><li>同:<ul><li>都可以写在属性和setter方法上。</li><li>可以参考：<a href="https://blog.csdn.net/x_iya/article/details/73385486" target="_blank" rel="noopener">Spring注解@Resource和@Autowired区别对比</a></li></ul></li></ul><p>转载自：<a href="https://blog.csdn.net/weixin_40425481/article/details/82752832" target="_blank" rel="noopener">链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过xml的方式进行对象的实列化或属性注入或许有一些繁琐，所以在开发中常用的方式更多是通过注解的方式实现对象实例化和属性注入的。&lt;/p&gt;
&lt;h2 id=&quot;使用注解创建对象&quot;&gt;&lt;a href=&quot;#使用注解创建对象&quot; class=&quot;headerlink&quot; title=&quot;使用注解创建对象&quot;&gt;&lt;/a&gt;使用注解创建对象&lt;/h2&gt;&lt;p&gt;Spring配置文件(beans.xml)：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2-Spring_Beans和生命周期</title>
    <link href="http://yoursite.com/2020/02/27/2-Spring-Beans%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://yoursite.com/2020/02/27/2-Spring-Beans%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</id>
    <published>2020-02-27T02:46:48.000Z</published>
    <updated>2020-03-03T01:09:54.617Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="实例化Bean"><a href="#实例化Bean" class="headerlink" title="实例化Bean"></a>实例化Bean</h2><ul><li>通过构造方法实例化：<br>当使用基于XML的元数据配置文件，可以这样来指定bean类：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=<span class="string">"exampleBean"</span><span class="class"><span class="keyword">class</span></span>=<span class="string">"examples.ExampleBean"</span>&gt;</span><br><span class="line">&lt;bean name=<span class="string">"anotherExample"</span><span class="class"><span class="keyword">class</span></span>=<span class="string">"examples.ExampleBeanTwo"</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>使用静态工厂方法实例化：<ul><li>当采用静态工厂方法创建bean时，除了需要指定class属性外，还需要通过factory-method属性来指定创建bean实例的工厂方法</li><li>注意，此定义并未指定返回对象的类型，仅指定该类包含的工厂方法，此例中createInstance方法必须是静态的</li></ul></li></ul><a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"clientService"</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"examples.ClientService"</span></span></span><br><span class="line"><span class="tag"><span class="attr">factory-method</span>=<span class="string">"createlnstance"</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientService</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ClientService clientService = <span class="keyword">new</span> ClientService();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">ClientService</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ClientService <span class="title">createlnstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> clientService;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用实例工厂方法实例化：<ul><li>使用这种方式时，class属性必须为空，而factory-bean属性必须指定为当前(或其祖先)容器中包含工厂方法的bean的名称</li><li>bean的工厂方法必须通过factory-method属性来设定</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--工厂bean，包含reatelnstance0方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"'serviceLocator"</span><span class="attr">class</span>=<span class="string">"examples.DefaultServiceLocator"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--其他需要注入的依赖项--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--通过工厂bean 创建的bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"clientService"</span> <span class="attr">factory-bean</span>=<span class="string">"serviceLocator"</span> <span class="attr">factory-method</span>=<span class="string">"createClientServicelnstance"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Bean的生命周期"><a href="#Bean的生命周期" class="headerlink" title="Bean的生命周期"></a>Bean的生命周期</h2><p><img src="/2020/02/27/2-Spring-Beans%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/Spring_lifecycle.png" alt></p><table><thead><tr><th align="left">步骤</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">1.实例化</td><td align="left">Spring实例化Bean</td></tr><tr><td align="left">2.设置属性</td><td align="left">Spring注入Bean的属性</td></tr><tr><td align="left">3.设置Bean名称，Bean工厂，应用上下文</td><td align="left">如果Bean实现了XXXAware接口，执行对应方法</td></tr><tr><td align="left">4.预处理(在初始化之前)</td><td align="left">调用BeanPostProcessor对象的postProcessBeforeInitialization()方法</td></tr><tr><td align="left">5.初始化Bean</td><td align="left">实现InitializingBean接口的afterPropertiesSet()方法。声明了初始化方法，将调用声明的</td></tr><tr><td align="left">6.预处理(在初始化之后)</td><td align="left">调用BeanPostProcessor对象的postProcessAfterInitialization()方法</td></tr><tr><td align="left">7.Bean已经准备好</td><td align="left">默认以单例的形式存在Spring容器中</td></tr><tr><td align="left">8.销毁Bean</td><td align="left">实现DisposableBean接口的destroy()方法。声明了销毁方法，将调用声明的</td></tr></tbody></table><h2 id="Bean的依赖注入"><a href="#Bean的依赖注入" class="headerlink" title="Bean的依赖注入"></a>Bean的依赖注入</h2><ul><li>Spring容器的工作就是创建Bean并注入他所依赖的Bean对象</li><li>Spring中的注入方式主要有2种：构造器注入和Setter方法注入<h3 id="构造器注入"><a href="#构造器注入" class="headerlink" title="构造器注入"></a>构造器注入</h3></li><li>基于构造器注入DI通过调用带参数的构造器来实现，每个参数代表着一个依赖关系</li><li>构造器参数通过参数类型进行匹配</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> IntelCpu intelCpu;</span><br><span class="line"><span class="keyword">private</span> KingstonMemory kingstonMemory;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Computer</span><span class="params">()</span></span>&#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Computer</span><span class="params">(IntelCpu intelCpu, KingstonMemory kingstonMemory)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>. intelCpu=intelCpu; </span><br><span class="line"><span class="keyword">this</span>. kingstonMemory=kingstonMemory;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"IntelCpu"</span> <span class="attr">class</span>=<span class="string">"constructdi.IntelCpu"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"KingstonMemory"</span> <span class="attr">class</span>=<span class="string">"constructdi.KingstonMemory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"Computer"</span> <span class="attr">class</span>=<span class="string">"constructdi.Computer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"IntelCpu"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"KingstonMemory"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>其他用法：<ul><li>使用type属性指定构造参数的类型</li><li>使用index属性指定构造参数的索引</li><li>使用name属性制定构造参数的名字</li></ul></li></ul><h3 id="Setter注入"><a href="#Setter注入" class="headerlink" title="Setter注入"></a>Setter注入</h3><p>在调用了无参构造方法或者无参静态工厂方法实例化bean之后，容器通过回调bean的setter方法可以完成依赖注入。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> Intelcpu intelCpu; </span><br><span class="line"><span class="keyword">private</span> KingstonMemory kingstonMemory; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIntelCpu</span><span class="params">(Intelcpu intelcpu)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>. intelcpu=intelcpu;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKingstonMemory</span><span class="params">(KingstonMemory kingstonMemory)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>. kingstonMemory=kingstonMemory;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">！--setter方法注入--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"IntelCpu"</span> <span class="attr">class</span>=<span class="string">"setterdi.IntelCpu"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"KingstonMemory"</span> <span class="attr">class</span>=<span class="string">"setterdi.KingstonMemory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"Computer"</span> <span class="attr">class</span>=<span class="string">"setterdi.Computer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"intelCpu"</span> <span class="attr">ref</span>=<span class="string">"IntelCpu"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"kingstonMemory"</span> <span class="attr">ref</span>=<span class="string">"KingstonMemory"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基本Bean注入"><a href="#基本Bean注入" class="headerlink" title="基本Bean注入"></a>基本Bean注入</h3><h4 id="注入基本数据类型"><a href="#注入基本数据类型" class="headerlink" title="注入基本数据类型"></a>注入基本数据类型</h4><pre><code>- &lt;property name=&quot;xxx&quot; value=&quot;xxx&quot; /&gt;- 可注入：    - 字符串    - 数值型数据    - 布尔类型- Spring根据字段属性来决定转换成正确的类型</code></pre><h4 id="注入Null"><a href="#注入Null" class="headerlink" title="注入Null"></a>注入Null</h4><pre><code>`&lt;property name=&quot;xxx&quot;&gt;&lt;null /&gt;&lt;/property&gt;`</code></pre><h4 id="注入引用数据类型"><a href="#注入引用数据类型" class="headerlink" title="注入引用数据类型"></a>注入引用数据类型</h4><pre><code>- 引用    <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"xxx"</span> <span class="attr">ref</span>=<span class="string">"xxxBean"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"xxx"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"xxxBean"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>- 注入内部Bean    - &lt;property name=&quot;xxx&quot;&gt;&lt;bean class=&quot;org.xxx.XxxBean&quot; /&gt;&lt;/property&gt;    - 内部Bean不能复用，只能被注入</code></pre><h4 id="注入List类型和数组类型"><a href="#注入List类型和数组类型" class="headerlink" title="注入List类型和数组类型"></a>注入List类型和数组类型</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">“xxx”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">“aa”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">“bb”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="注入Set类型"><a href="#注入Set类型" class="headerlink" title="注入Set类型"></a>注入Set类型</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"xxx"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span> =<span class="string">“aa”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span> =<span class="string">“bb”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="注入Map类型"><a href="#注入Map类型" class="headerlink" title="注入Map类型"></a>注入Map类型</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">“xxx”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">“a”</span> <span class="attr">value-ref</span>=<span class="string">“aa”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">“b”</span> <span class="attr">value-ref</span>=<span class="string">“bb”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注：<br>每个<entry>都有一个键和值组成</entry></p><ol><li><p>key: 指定map项的键为String</p></li><li><p>key-ref: 指定map项的键为Spring上下文中其他Bean的引用</p></li><li><p>value: 指定map项的值为String</p></li><li><p>value-ref: 指定map项的值为Spring上下文中其他Bean的引用</p></li></ol><ul><li>注入Properties类型</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--与Map唯一不同的是其限制了键和值都是String--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"xxx"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">“a”</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">“b”</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="集合合并"><a href="#集合合并" class="headerlink" title="集合合并"></a>集合合并</h4><p>对于相同类型的集合，通过在子类中的merge属性，可以将集合合并。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"parent"</span> <span class="attr">abstract</span>=<span class="string">"tue"</span> <span class="attr">class</span>=<span class="string">"example. ComplexObject&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;property name="</span><span class="attr">adminEmails</span>"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"administrator"</span>&gt;</span>administrator@example.com<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"support"</span>&gt;</span>support@example.com<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"child"</span> <span class="attr">parent</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"adminEmails"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">props</span> <span class="attr">merge</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"sales"</span>&gt;</span>sales@example.com<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"support"</span>&gt;</span>support@example.co.uk<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="高级Bean注入"><a href="#高级Bean注入" class="headerlink" title="高级Bean注入"></a>高级Bean注入</h4><pre><code>- Spring容器可以自动装配相互协作bean的关联关系- 自动装配有以下好处：    - 自动装配可以显著得减少指定属性或者构造器参数的需求    - 当对象发生变化时自动装配可以更新配置而不需要修改配置- 自动装配的局限性和缺点：    - Property和constructor-arg显示的依赖设置会覆盖自动装配（故意而为）    - 自动装配没有显示编写精确    - 在容器中可能存在多个bean的定义与自动装配的setter方法或者构造方法参数匹配，若bean定义不唯一，装配时会抛异常- 使用外部属性文件- 可以使用location属性处理单个属性文件    - &lt;property name=&quot;location&quot; value=&quot;jdbc.properties&quot;/&gt;- 处理多个属性文件用locations属性指定list</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"locations"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>aa.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>bb.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>- 使用${xxx.bbb}来获取值</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实例化Bean&quot;&gt;&lt;a href=&quot;#实例化Bean&quot; class=&quot;headerlink&quot; title=&quot;实例化Bean&quot;&gt;&lt;/a&gt;实例化Bean&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过构造方法实例化：&lt;br&gt;当使用基于XML的元数据配置文件，可以这样来指定bean类：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean id=&lt;span class=&quot;string&quot;&gt;&quot;exampleBean&quot;&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;examples.ExampleBean&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;bean name=&lt;span class=&quot;string&quot;&gt;&quot;anotherExample&quot;&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;examples.ExampleBeanTwo&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;使用静态工厂方法实例化：&lt;ul&gt;
&lt;li&gt;当采用静态工厂方法创建bean时，除了需要指定class属性外，还需要通过factory-method属性来指定创建bean实例的工厂方法&lt;/li&gt;
&lt;li&gt;注意，此定义并未指定返回对象的类型，仅指定该类包含的工厂方法，此例中createInstance方法必须是静态的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>1-Spring介绍和IOC&amp;DI</title>
    <link href="http://yoursite.com/2020/02/27/1-Spring%E4%BB%8B%E7%BB%8D%E5%92%8CIOC-DI/"/>
    <id>http://yoursite.com/2020/02/27/1-Spring%E4%BB%8B%E7%BB%8D%E5%92%8CIOC-DI/</id>
    <published>2020-02-27T02:45:47.000Z</published>
    <updated>2020-03-03T01:09:54.618Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="IoC和DI"><a href="#IoC和DI" class="headerlink" title="IoC和DI"></a>IoC和DI</h2><h3 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h3><ul><li>IoC（Inversion of Control，控制反转）：<ul><li>设计原则，解耦组件之间的依赖关系</li></ul></li><li>DI（ DI(Dependency Injection ，依赖注入）<ul><li>具体的设计模式，体现了IoC的设计原则</li><li>因为DI是IoC最典型的实现，所以术语IoC与DI经常被混用</li></ul></li><li>应用IoC：<ul><li>由容器主动将资源推送到它所管理的组件里，组件要有接受资源的方式</li><li>查找的被动形式</li><li>好的获取资源的解决方案</li></ul></li></ul><a id="more"></a><h3 id="不同类型的依赖注入"><a href="#不同类型的依赖注入" class="headerlink" title="不同类型的依赖注入"></a>不同类型的依赖注入</h3><ul><li>主要的三种类型的DI（接口注入，setter注入，构造器注入）</li><li>流行程度最广的：setter注入<ul><li>有可能忘记注入，会抛出空指针</li><li>代码安全有可能存在问题，依赖会被修改</li></ul></li><li>构造器注入<ul><li>可避免setter注入的一些缺点</li><li>没有含义明确的方法名，对参数位置与数量有要求</li></ul></li></ul><h2 id="Spring框架实现IoC"><a href="#Spring框架实现IoC" class="headerlink" title="Spring框架实现IoC"></a>Spring框架实现IoC</h2><ol><li>Spring提供了IoC容器</li><li>Beans均由Spring IoC容器来管理和组装</li><li>Bean是一个由Spring IoC容器进行实例化、装配和管理的对象</li><li>Beans以及他们之间的依赖关系是通过容器使用配置元数据反应出来</li><li>配置元数据：（基于Xml的配置，基于注解的配置，基于Java的配置）</li></ol><h2 id="Spring容器"><a href="#Spring容器" class="headerlink" title="Spring容器"></a>Spring容器</h2><p>工作视图</p><p><img src="/2020/02/27/1-Spring%E4%BB%8B%E7%BB%8D%E5%92%8CIOC-DI/IOC-DI.png" alt></p><p>org.springframework.beans和org.springframework.context包是Spring框架IoC容器的基础</p><p><img src="/2020/02/27/1-Spring%E4%BB%8B%E7%BB%8D%E5%92%8CIOC-DI/IOC_base.png" alt></p><ul><li><p>BeanFactory</p><ul><li>BeanFactory提供了一个先进的配置机制能够管理任何类型的对象</li><li>BeanFactory负责对Bean对象的实例化、装配和生命周期的管理</li><li>BeanFactory的实现： <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BeanFactory beanFactory = <span class="keyword">new</span> XmlBeanFactory(<span class="keyword">new</span> ClassPathResource(<span class="string">"beans.xml"</span>));<span class="comment">//创建该工厂需要传入一个Resource实例</span></span><br><span class="line">MyBean bean = (MyBean)factory.getBean(<span class="string">"myBean"</span>)<span class="comment">//获取Bean实例</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>ApplicationContext</p><ul><li>ApplicationContext是BeanFactory的一个子接口</li><li>ApplicationContext添加了更多的企业特定的功能：</li><li>实现<ul><li>ClassPathXmlApplicationContext</li><li>FileSystemXmlApplicationContext</li><li>XmlWebApplicationContext</li><li>AnnotationConfigApplicationContext</li></ul></li></ul></li><li><p>区别</p><ul><li>BeanFactory提供了配置框架和基本功能，ApplicationContext则添加了更多的企业特定功能</li><li>ApplicationContext是BeanFactory的一个子接口，同时也是它的一个完整的超集</li><li>实例Bean的载入方式不同：<ul><li>BeanFactory延迟载入所有Bean，直到getBean()方法调用时才被创建</li><li>ApplicationContext启动后载入所有单实例Bean。通过预载入单实例Bean，确保当需要时可以使用</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;IoC和DI&quot;&gt;&lt;a href=&quot;#IoC和DI&quot; class=&quot;headerlink&quot; title=&quot;IoC和DI&quot;&gt;&lt;/a&gt;IoC和DI&lt;/h2&gt;&lt;h3 id=&quot;相关概念&quot;&gt;&lt;a href=&quot;#相关概念&quot; class=&quot;headerlink&quot; title=&quot;相关概念&quot;&gt;&lt;/a&gt;相关概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;IoC（Inversion of Control，控制反转）：&lt;ul&gt;
&lt;li&gt;设计原则，解耦组件之间的依赖关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DI（ DI(Dependency Injection ，依赖注入）&lt;ul&gt;
&lt;li&gt;具体的设计模式，体现了IoC的设计原则&lt;/li&gt;
&lt;li&gt;因为DI是IoC最典型的实现，所以术语IoC与DI经常被混用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;应用IoC：&lt;ul&gt;
&lt;li&gt;由容器主动将资源推送到它所管理的组件里，组件要有接受资源的方式&lt;/li&gt;
&lt;li&gt;查找的被动形式&lt;/li&gt;
&lt;li&gt;好的获取资源的解决方案&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>加速访问Github</title>
    <link href="http://yoursite.com/2020/02/26/speed-github/"/>
    <id>http://yoursite.com/2020/02/26/speed-github/</id>
    <published>2020-02-26T07:06:55.000Z</published>
    <updated>2020-03-03T01:08:19.958Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="说一下访问慢的原因"><a href="#说一下访问慢的原因" class="headerlink" title="说一下访问慢的原因"></a>说一下访问慢的原因</h1><ol><li>由于 github.com 网站位于美国旧金山,所以初始访问 github.com 时网络寻址会比较耗费时间,这是网站打开速度慢的其中一个原因.</li><li>最初用户从浏览器中输入 github.com 网址时,浏览器并不知道这个域名对应的真实 ip 地址,先问问自己电脑认识不认识这个域名的门牌号,如果本机不认识会接着往上问,当地运行商也不认识这个域名的话,继续问上级,直到问出来 github.com 的门牌号是 192.30.253.113 为止!如此繁琐的问路过程被称之为 DNS 寻址,如果问路的时间都占用很久,那么访问网站的速度自然会很慢.</li></ol><h2 id="主域名和多个子域名"><a href="#主域名和多个子域名" class="headerlink" title="主域名和多个子域名"></a>主域名和多个子域名</h2><p>正常来说,网站的主域名下会存在多个子域名,由这些域名组合在一起提供完整的服务.</p><p>而 github.com 也不例外,其中 github.com是一级域名,也是主域名,其他的域名基本上都是二级域名或者说次域名. 所以我们不仅要告诉本机 github.com 的主域名,还要把相关的子域名也告诉本机,帮人帮到底,送福送到西! 那到哪里去查询域名和 ip 的对应关系呢?</p><a id="more"></a><h2 id="推荐几个查询域名解析的网站"><a href="#推荐几个查询域名解析的网站" class="headerlink" title="推荐几个查询域名解析的网站"></a>推荐几个查询域名解析的网站</h2><ol><li><a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a></li><li><a href="http://tool.chinaz.com/dns/" target="_blank" rel="noopener">http://tool.chinaz.com/dns/</a></li></ol><h2 id="体验域名查询"><a href="#体验域名查询" class="headerlink" title="体验域名查询"></a>体验域名查询</h2><p>根据查到的相关域名信息,再次查询出这些域名对应的 ip 地址,于是整理出以下内容.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#github related website</span><br><span class="line">192.30.253.113 github.com</span><br><span class="line">199.232.5.194 github.global.ssl.fastly.net</span><br><span class="line">192.30.253.119 gist.github.com</span><br><span class="line">192.30.253.120 nodeload.github.com</span><br><span class="line">199.232.28.133 raw.github.com</span><br><span class="line">140.82.113.17 training.github.com</span><br><span class="line">192.30.253.113 www.github.com</span><br><span class="line">99.232.68.133 avatars0.githubusercontent.com</span><br><span class="line">199.232.68.133 avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133 assets-cdn.github.com</span><br><span class="line">185.199.108.153 documentcloud.github.com</span><br><span class="line">185.199.108.153 help.github.com</span><br><span class="line">18.204.240.114 status.github.com</span><br></pre></td></tr></table></figure><h2 id="加快访问github的方法"><a href="#加快访问github的方法" class="headerlink" title="加快访问github的方法"></a>加快访问github的方法</h2><ol><li>VPN<ol><li>购买vpn，作为学生党就算了吧</li><li>使用一些免费的插件，这种就得自个搜（提醒：谷歌商店一大批免费的，哈哈哈）</li></ol></li><li>hosts<ol><li>记事本打开C:\Windows\System32\drivers\etc 路径下的hosts文件（映射文件）</li><li>找到上面推荐的解析网站  查询出自个机子适用的dns解析地址（也可以使用我整理好的）</li><li>保存退出（不能保存的请自行百度）</li><li>win+r 输入ipconfig /flushdns 刷新dns缓存</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说一下访问慢的原因&quot;&gt;&lt;a href=&quot;#说一下访问慢的原因&quot; class=&quot;headerlink&quot; title=&quot;说一下访问慢的原因&quot;&gt;&lt;/a&gt;说一下访问慢的原因&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;由于 github.com 网站位于美国旧金山,所以初始访问 github.com 时网络寻址会比较耗费时间,这是网站打开速度慢的其中一个原因.&lt;/li&gt;
&lt;li&gt;最初用户从浏览器中输入 github.com 网址时,浏览器并不知道这个域名对应的真实 ip 地址,先问问自己电脑认识不认识这个域名的门牌号,如果本机不认识会接着往上问,当地运行商也不认识这个域名的话,继续问上级,直到问出来 github.com 的门牌号是 192.30.253.113 为止!如此繁琐的问路过程被称之为 DNS 寻址,如果问路的时间都占用很久,那么访问网站的速度自然会很慢.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;主域名和多个子域名&quot;&gt;&lt;a href=&quot;#主域名和多个子域名&quot; class=&quot;headerlink&quot; title=&quot;主域名和多个子域名&quot;&gt;&lt;/a&gt;主域名和多个子域名&lt;/h2&gt;&lt;p&gt;正常来说,网站的主域名下会存在多个子域名,由这些域名组合在一起提供完整的服务.&lt;/p&gt;
&lt;p&gt;而 github.com 也不例外,其中 github.com是一级域名,也是主域名,其他的域名基本上都是二级域名或者说次域名. 所以我们不仅要告诉本机 github.com 的主域名,还要把相关的子域名也告诉本机,帮人帮到底,送福送到西! 那到哪里去查询域名和 ip 的对应关系呢?&lt;/p&gt;
    
    </summary>
    
    
      <category term="github技术" scheme="http://yoursite.com/categories/github%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>4-Hibernate一对一关联映射</title>
    <link href="http://yoursite.com/2020/02/26/4-Hibernate%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/"/>
    <id>http://yoursite.com/2020/02/26/4-Hibernate%E4%B8%80%E5%AF%B9%E4%B8%80%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84/</id>
    <published>2020-02-26T01:03:24.000Z</published>
    <updated>2020-03-03T01:09:54.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hibernate一对一关联映射"><a href="#Hibernate一对一关联映射" class="headerlink" title="Hibernate一对一关联映射"></a>Hibernate一对一关联映射</h1><p>实体之间的联系：<br></p><ol><li>一对一联系（1:1）</li><li>一对多联系（1:n）</li><li>多对多联系（m:n）</li></ol><h2 id="一对一的关联映射（主键关联方式）"><a href="#一对一的关联映射（主键关联方式）" class="headerlink" title="一对一的关联映射（主键关联方式）"></a>一对一的关联映射（主键关联方式）</h2><p><strong>主键关联：</strong>原理是两张表的主键(ID)保持一致，在获取的时候根据两种表中的ID相同来作为关系判断的标准，这样的设计好处在于我们不用添加另外的字段来维护它们之间的关系。 </p><h3 id="xml方式"><a href="#xml方式" class="headerlink" title="xml方式"></a>xml方式</h3><a id="more"></a><p>实体类<br>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;<span class="comment">//主键</span></span><br><span class="line"><span class="keyword">private</span> String userName;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> Person person;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Persion.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;<span class="comment">//主键和外键，外键依赖user的主键id</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String idNumber;</span><br><span class="line"><span class="keyword">private</span> User user;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.hbm.xml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> <span class="title">name</span></span>=<span class="string">"User"</span>&gt;</span><br><span class="line">&lt;id name=<span class="string">"id"</span> &gt;</span><br><span class="line">&lt;generator class="increment"&gt;&lt;/generator&gt;</span><br><span class="line">&lt;/id&gt;</span><br><span class="line">&lt;property name=<span class="string">"userName"</span>  /&gt;</span><br><span class="line">&lt;property name=<span class="string">"password"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 主键关联方式映射与Person的一对一关系 --&gt;</span><br><span class="line">&lt;one-to-one name=<span class="string">"person"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"Person"</span> cascade=<span class="string">"all"</span>/&gt;</span><br><span class="line">&lt;/class&gt;</span><br></pre></td></tr></table></figure><p>Persion.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Person"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"foreign"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"property"</span>&gt;</span>user<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 主键关联方式映射与User的一对一关系 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">one-to-one</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">constrained</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"idNumber"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       Session session = <span class="keyword">null</span>;</span><br><span class="line">       Transaction tran = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           session = HibernateUtil.openSession();</span><br><span class="line">           tran = session.beginTransaction();<span class="comment">// 开启事务</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">// 新建User对象</span></span><br><span class="line">           User user = <span class="keyword">new</span> User();</span><br><span class="line">           user.setUserName(<span class="string">"张三"</span>);</span><br><span class="line">           user.setPassword(<span class="string">"111111"</span>);</span><br><span class="line">           </span><br><span class="line">           <span class="comment">//新建Person对象</span></span><br><span class="line">           Person person = <span class="keyword">new</span> Person();</span><br><span class="line">           person.setName(<span class="string">"张三"</span>);</span><br><span class="line">           person.setIdNumber(<span class="string">"100345199002031234"</span>);</span><br><span class="line">           </span><br><span class="line">           <span class="comment">//建立联系</span></span><br><span class="line">           user.setPerson(person);</span><br><span class="line">           person.setUser(user);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 保存user并级联保存person</span></span><br><span class="line">           session.save(user);</span><br><span class="line"></span><br><span class="line">           tran.commit();<span class="comment">// 提交事务</span></span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           tran.rollback();<span class="comment">// 回滚事务</span></span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           session.close();<span class="comment">// 关闭session</span></span><br><span class="line">           HibernateUtil.closeSessionFactory();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="注释方法"><a href="#注释方法" class="headerlink" title="注释方法"></a>注释方法</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="comment">//注解写在属性上使用的是反射机制</span></span><br><span class="line"><span class="comment">//注解写在get方法上，是setget机制</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name=<span class="string">"my_gen"</span>, strategy=<span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToOne</span>(cascade=CascadeType.ALL)</span><br><span class="line">    <span class="meta">@PrimaryKeyJoinColumn</span>(name=<span class="string">"id"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Person <span class="title">getPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPerson</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.person = person;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Persion.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"person"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> String idNumber;<span class="comment">//身份证号</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name=<span class="string">"my_gen"</span>, strategy = <span class="string">"foreign"</span>, parameters= &#123;<span class="meta">@Parameter</span>(name = <span class="string">"property"</span>, value = <span class="string">"user"</span>)&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIdNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> idNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIdNumber</span><span class="params">(String idNumber)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.idNumber = idNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@OneToOne</span>(mappedBy=<span class="string">"person"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类同上</p><p><strong>关于上述代码解释：</strong></p><ol><li>xml：<ol><li>通过<one-to-one> 元素配置。—–（主键表）<ol><li>ascade属性（级联属性）为 all：:对象所有操作进行级联操作  save,update,delete</li><li>ascade属性（级联属性）为 save-update :  执行保存和更改操作时进行级联操作</li><li>ascade属性（级联属性）为 delete :  执行删除操作时进行级联操作</li><li>ascade属性（级联属性）为 none : 对所有操作不进行级联操作       默认</li></ol></one-to-one></li><li>constrained 属性为 true，表明 PERSON 表ID为外键，参照主表USER—–（外键表）</li><li>外键表实体类配置文件中 OID 使用 foreign 生成策略。—–（外键表）</li></ol></li><li>注解：<ol><li>User端的person属性配置<ol><li>@OneToOne(cascade=CascadeType.ALL) ：指定一对一关联关系，并设置级联属性。</li><li>@PrimaryKeyJoinColumn(name=”ID”) ：指定Persion表主键列名。</li></ol></li><li>在Person端的id属性上配置主键生成策略为 foreign<br><ol><li><code>@GeneratedValue(generator=&quot;foreign&quot;)</code></li><li><code>@GenericGenerator(name=&quot;foreign&quot;,strategy=&quot;foreign&quot;,parameters={@Parameter(name=&quot;property&quot;,value=&quot;user&quot;)})</code></li></ol></li><li>在Person一端的user属性上配置一对一关联关系<br><br><code>@OneToOne(mappedBy=&quot;person&quot;)</code></li></ol></li></ol><h2 id="一对一的关联映射（唯一外键关联方式）"><a href="#一对一的关联映射（唯一外键关联方式）" class="headerlink" title="一对一的关联映射（唯一外键关联方式）"></a>一对一的关联映射（唯一外键关联方式）</h2><h3 id="xml方式-1"><a href="#xml方式-1" class="headerlink" title="xml方式"></a>xml方式</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;<span class="comment">//主键，外键（外键依赖persion类的id）</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"User"</span> <span class="attr">table</span>=<span class="string">"USER"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userName"</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 外键关联方式映射与Person的一对一关系 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">"person"</span> <span class="attr">column</span>=<span class="string">"PERSONID"</span> <span class="attr">cascade</span>=<span class="string">"all"</span> <span class="attr">unique</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Persion.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;<span class="comment">//主键</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String idNumber;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Persion.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Person"</span> <span class="attr">table</span>=<span class="string">"PERSON"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"idNumber"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 外键关联方式映射与User的一对一关系   property-ref:外键列对应的属性名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">one-to-one</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">property-ref</span>=<span class="string">"person"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类同上</p><h3 id="注解方式"><a href="#注解方式" class="headerlink" title="注解方式"></a>注解方式</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"USER"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name=<span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OneToOne</span>(cascade=CascadeType.ALL)</span><br><span class="line">    <span class="meta">@JoinColumn</span>(name=<span class="string">"PERSONID"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Person <span class="title">getPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPerson</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.person = person;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Persion.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"PERSON"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> String idNumber;<span class="comment">//身份证号</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIdNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> idNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIdNumber</span><span class="params">(String idNumber)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.idNumber = idNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@OneToOne</span>(mappedBy=<span class="string">"person"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类同上</p><p><strong>关于上述代码解释：</strong></p><ol><li>xml<ol><li>通过<many-to-one> 元素配置。—–（外键表）<ol><li>column 属性指明外键列；</li><li>unique 属性设置为 true，表明唯一约束；</li><li>cascade 属性设置为 all，表明删除 USER 时同时删除PERSON</li><li><code>&lt;many-to-one name=&quot;person&quot; column=&quot;persionId&quot; cascade=&quot;all&quot; unique=&quot;true&quot;/&gt;</code></li></ol></many-to-one></li><li>通过<one-to-one> 元素配置。—–（主键表）<ol><li>property-ref 属性，表明建立了从User到Person的一对一关联关系</li><li><code>&lt;one-to-one name=&quot;user&quot; property-ref=&quot;person&quot;/&gt;</code></li></ol></one-to-one></li></ol></li><li>注解<ol><li>在User一端的person属性上配置。<ol><li>@OneToOne(cascade=CascadeType.ALL)</li><li>@JoinColumn(name=”PERSONID”)：指明USER表中的外键列名。</li></ol></li><li>在Person一端的user属性上配置。<ol><li>@OneToOne(mappedBy=”person”)</li></ol></li></ol></li></ol><h2 id="组合关系映射"><a href="#组合关系映射" class="headerlink" title="组合关系映射"></a>组合关系映射</h2><p>问题：</p><p>某单位职工档案管理系统的需求中，希望能够保存职工的各种联系方式，包括：家庭地址、工作地址、籍贯地址、<br>手机号、邮箱等，每个地址又需包含省、市、县、详细街道信息，应该如何实现？</p><table><thead><tr><th align="left">Contact</th><th align="left"></th></tr></thead><tbody><tr><td align="left">id : int</td><td align="left"></td></tr><tr><td align="left">email : String</td><td align="left"></td></tr><tr><td align="left">phoneNum : String</td><td align="left"></td></tr><tr><td align="left">homeAddress : Address</td><td align="left"></td></tr><tr><td align="left">workAddress : Address</td><td align="left"></td></tr></tbody></table><table><thead><tr><th align="left">Address</th><th align="left"></th></tr></thead><tbody><tr><td align="left">province : String</td><td align="left"></td></tr><tr><td align="left">city : String</td><td align="left"></td></tr><tr><td align="left">district : String</td><td align="left"></td></tr><tr><td align="left">detail : String</td><td align="left"></td></tr><tr><td align="left">数据库中只有一张contact表，如何添加？</td><td align="left"></td></tr></tbody></table><table><thead><tr><th align="left">Contact</th><th align="left"></th></tr></thead><tbody><tr><td align="left">id : int</td><td align="left"></td></tr><tr><td align="left">email : String</td><td align="left"></td></tr><tr><td align="left">phoneNum : String</td><td align="left"></td></tr><tr><td align="left">homeProvince : String</td><td align="left"></td></tr><tr><td align="left">homeCity ： String</td><td align="left"></td></tr><tr><td align="left">homeDistrict : String</td><td align="left"></td></tr><tr><td align="left">homeDetail : String</td><td align="left"></td></tr><tr><td align="left">workProvince : String</td><td align="left"></td></tr><tr><td align="left">…</td><td align="left"></td></tr></tbody></table><h3 id="xml方式："><a href="#xml方式：" class="headerlink" title="xml方式："></a>xml方式：</h3><p>Contact.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Contact</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String phoneNum;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Address homeAddress;</span><br><span class="line">    <span class="keyword">private</span> Address workAddress;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Contact.hbm.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Contact"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"increment"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"phoneNum"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"email"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- component映射组合关系 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">"homeAddress"</span> <span class="attr">class</span>=<span class="string">"Address"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"province"</span> <span class="attr">column</span>=<span class="string">"HOMEPROVINCE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"city"</span> <span class="attr">column</span>=<span class="string">"HOMECITY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"district"</span> <span class="attr">column</span>=<span class="string">"HOMEDISTRICT"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"detail"</span> <span class="attr">column</span>=<span class="string">"HOMEDETAIL"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">"workAddress"</span> <span class="attr">class</span>=<span class="string">"Address"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"province"</span> <span class="attr">column</span>=<span class="string">"WORKPROVINCE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"city"</span> <span class="attr">column</span>=<span class="string">"WORKCITY"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"district"</span> <span class="attr">column</span>=<span class="string">"WORKDISTRICT"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"detail"</span> <span class="attr">column</span>=<span class="string">"WORKDETAIL"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Address.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String province;<span class="comment">//省</span></span><br><span class="line">    <span class="keyword">private</span> String city;<span class="comment">//市</span></span><br><span class="line">    <span class="keyword">private</span> String district;<span class="comment">//区</span></span><br><span class="line">    <span class="keyword">private</span> String detail;<span class="comment">//详细地址</span></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveContact</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       Session session = <span class="keyword">null</span>;</span><br><span class="line">       Transaction tran = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           session = HibernateUtil.openSession();</span><br><span class="line">           tran = session.beginTransaction();</span><br><span class="line"></span><br><span class="line">           Contact contact = <span class="keyword">new</span> Contact();</span><br><span class="line">           contact.setPhoneNum(<span class="string">"12345678910"</span>);</span><br><span class="line">           contact.setEmail(<span class="string">"abcxxx@123.com"</span>);</span><br><span class="line">           </span><br><span class="line">           Address homeAddress = <span class="keyword">new</span> Address();</span><br><span class="line">           homeAddress.setProvince(<span class="string">"河北省"</span>);</span><br><span class="line">           homeAddress.setCity(<span class="string">"xx市"</span>);</span><br><span class="line">           homeAddress.setDistrict(<span class="string">"xx区"</span>);</span><br><span class="line">           homeAddress.setDetail(<span class="string">"xx路xx号"</span>);</span><br><span class="line">           </span><br><span class="line">           Address workAddress = <span class="keyword">new</span> Address();</span><br><span class="line">           workAddress.setProvince(<span class="string">"河北省"</span>);</span><br><span class="line">           workAddress.setCity(<span class="string">"xx市"</span>);</span><br><span class="line">           workAddress.setDistrict(<span class="string">"xx区"</span>);</span><br><span class="line">           workAddress.setDetail(<span class="string">"xx路xx号"</span>);</span><br><span class="line">           </span><br><span class="line">           <span class="comment">//建立联系</span></span><br><span class="line">           contact.setHomeAddress(homeAddress);</span><br><span class="line">           contact.setWorkAddress(workAddress);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 保存contact同时保存地址信息</span></span><br><span class="line">           session.save(contact);</span><br><span class="line">           tran.commit();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           tran.rollback();</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">           session.close();</span><br><span class="line">           HibernateUtil.closeSessionFactory();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="注解方式-1"><a href="#注解方式-1" class="headerlink" title="注解方式"></a>注解方式</h3><p>Contact.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Contact</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String phoneNum;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Address homeAddress;</span><br><span class="line">    <span class="keyword">private</span> Address workAddress;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)</span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPhoneNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> phoneNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhoneNum</span><span class="params">(String phoneNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.phoneNum = phoneNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Embedded</span></span><br><span class="line">    <span class="meta">@AttributeOverrides</span>(value=&#123;</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    name = <span class="string">"province"</span>, </span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"HOMEPROVINCE"</span>)),</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    name = <span class="string">"city"</span>,</span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"HOMECITY"</span>)),</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"HOMEDISTRICT"</span>),</span><br><span class="line">                    name = <span class="string">"district"</span>),</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"HOMEDETAIL"</span>),</span><br><span class="line">                    name = <span class="string">"detail"</span>)&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">getHomeAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> homeAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHomeAddress</span><span class="params">(Address homeAddress)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.homeAddress = homeAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Embedded</span>  <span class="comment">//注意与嵌入式类注解@Embeddable区分</span></span><br><span class="line">    <span class="meta">@AttributeOverrides</span>(value=&#123;</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    name = <span class="string">"province"</span>, </span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"WORKPROVINCE"</span>)),</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    name = <span class="string">"city"</span>,</span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"WORKCITY"</span>)),</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"WORKDISTRICT"</span>),</span><br><span class="line">                    name = <span class="string">"district"</span>),</span><br><span class="line">            <span class="meta">@AttributeOverride</span>(</span><br><span class="line">                    column = <span class="meta">@Column</span>(name=<span class="string">"WORKDETAIL"</span>),</span><br><span class="line">                    name = <span class="string">"detail"</span>)&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">getWorkAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> workAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWorkAddress</span><span class="params">(Address workAddress)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.workAddress = workAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Address.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Embeddable</span><span class="comment">//指明为嵌入式类，不需要单独进行映射</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String province;<span class="comment">//省</span></span><br><span class="line">    <span class="keyword">private</span> String city;<span class="comment">//市</span></span><br><span class="line">    <span class="keyword">private</span> String district;<span class="comment">//区</span></span><br><span class="line">    <span class="keyword">private</span> String detail;<span class="comment">//详细地址</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类同上</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hibernate一对一关联映射&quot;&gt;&lt;a href=&quot;#Hibernate一对一关联映射&quot; class=&quot;headerlink&quot; title=&quot;Hibernate一对一关联映射&quot;&gt;&lt;/a&gt;Hibernate一对一关联映射&lt;/h1&gt;&lt;p&gt;实体之间的联系：&lt;br&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一对一联系（1:1）&lt;/li&gt;
&lt;li&gt;一对多联系（1:n）&lt;/li&gt;
&lt;li&gt;多对多联系（m:n）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;一对一的关联映射（主键关联方式）&quot;&gt;&lt;a href=&quot;#一对一的关联映射（主键关联方式）&quot; class=&quot;headerlink&quot; title=&quot;一对一的关联映射（主键关联方式）&quot;&gt;&lt;/a&gt;一对一的关联映射（主键关联方式）&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;主键关联：&lt;/strong&gt;原理是两张表的主键(ID)保持一致，在获取的时候根据两种表中的ID相同来作为关系判断的标准，这样的设计好处在于我们不用添加另外的字段来维护它们之间的关系。 &lt;/p&gt;
&lt;h3 id=&quot;xml方式&quot;&gt;&lt;a href=&quot;#xml方式&quot; class=&quot;headerlink&quot; title=&quot;xml方式&quot;&gt;&lt;/a&gt;xml方式&lt;/h3&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>3.Hibernate继承关系映射</title>
    <link href="http://yoursite.com/2020/02/25/3-Hibernate%E7%BB%A7%E6%89%BF%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84/"/>
    <id>http://yoursite.com/2020/02/25/3-Hibernate%E7%BB%A7%E6%89%BF%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84/</id>
    <published>2020-02-25T13:19:02.000Z</published>
    <updated>2020-03-03T01:09:54.616Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong><font size="5" color="#ff0000">每个具体的类实现继承关系映射</font></strong></p><a id="more"></a><p><strong><font size="5" color="#ff0000">父类对应一个表的继承关系映射</font></strong></p><p><strong><font size="5" color="#ff0000">每个类对应一个表的继承关系映射</font></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;font size=&quot;5&quot; color=&quot;#ff0000&quot;&gt;每个具体的类实现继承关系映射&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2.Hibernate的单实体映射</title>
    <link href="http://yoursite.com/2020/02/25/2-Hibernate%E7%9A%84%E5%8D%95%E5%AE%9E%E4%BD%93%E6%98%A0%E5%B0%84/"/>
    <id>http://yoursite.com/2020/02/25/2-Hibernate%E7%9A%84%E5%8D%95%E5%AE%9E%E4%BD%93%E6%98%A0%E5%B0%84/</id>
    <published>2020-02-25T05:05:21.000Z</published>
    <updated>2020-03-04T03:40:22.972Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hibernate的单实体映射"><a href="#Hibernate的单实体映射" class="headerlink" title="Hibernate的单实体映射"></a>Hibernate的单实体映射</h1><h2 id="单实体的属性映射"><a href="#单实体的属性映射" class="headerlink" title="单实体的属性映射"></a><font size="5" color="#ff0000">单实体的属性映射</font></h2><ol><li><p>setter 和 getter 方法优点：有效控制属性的访问权限。<br></p></li><li><p>property元素的 access 属性；field : 不需要getset方法，通过Java反射机制绕过hibernate直接访问属性值。<br><code>&lt;property name=&quot;userName&quot; access=&quot;field&quot; /&gt;</code></p></li><li><p>实体映射技巧：实体类属性与表字段不对称时，可以在 setter 和 getter 方法中加入程序逻辑<br><br> 例：User 类中没有 username 属性，而是改为了 firstName 和 lastName 两个属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> firstName + <span class="string">" "</span> + lastName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">  String[] strName = userName.split(<span class="string">" "</span>);</span><br><span class="line">  <span class="keyword">this</span>.firstName = strName[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">this</span>.lastName = strName[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>特殊需求：<br>例：User 需要订单总额属性，但数据库表中没有这个字段，在property元素的 formula 属性设置查询语句</p> <property name="totalPrice" formula="(select sum(o.price) from orders as o where o.userId=id)"></property></li><li><p>控制持久化类的insert和update</p></li></ol><table><thead><tr><th align="left">映射属性</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">&lt;property&gt;元素的 insert 属性</td><td align="left">insert语句中是否包含该属性，默认值为true</td></tr><tr><td align="left">&lt;property&gt;元素的 update 属性</td><td align="left">update语句中是否包含该属性，默认值为true</td></tr><tr><td align="left">&lt;class&gt;元素的 mutable 属性</td><td align="left">等价于所有property节点的update属性，默认值为true</td></tr><tr><td align="left">&lt;class&gt;元素的 dynamic-insert 属性</td><td align="left">值为true等价于所有的property元素dynamic-insert属性为true</td></tr><tr><td align="left">&lt;class&gt;元素的 dynamic-update 属性</td><td align="left">值为true等价于所有的property元素dynamic-update属性为true</td></tr></tbody></table><p><em>注：</em><br><br>    1. 会过滤过值为null的属性<br><br>    2. 如果在一个表有很多字段的时候,在做初次insert的时候有比较多的字段为空值,或者经常update某少部分字段,应该在配置文件的<class>元素上将dynamic-insert和dynamic-update设置为true.其默认值都为false.<br><br>    3. dynamic-insert，dynamic-update，提升了数据库的效率，只对需要插入修改的数据进行变动<br></class></p><h2 id="单实体的对象标识符映射"><a href="#单实体的对象标识符映射" class="headerlink" title="单实体的对象标识符映射"></a><font size="5" color="#ff0000">单实体的对象标识符映射</font></h2><p>Java程序中区分不同对象：</p><ol><li>“==” 比较两个变量引用的内存地址是否相同；</li><li>equals可以比较两个变量引用的对象的值是否相同。</li><li>用户自定义的类也可以覆盖Object的equals方法实现对象按值进行比较</li><li>Hibernate 采用对象标识符（OID）区分对象。</li></ol><p><img src="/2020/02/25/2-Hibernate%E7%9A%84%E5%8D%95%E5%AE%9E%E4%BD%93%E6%98%A0%E5%B0%84/session.png" alt></p><h2 id="使用注解映射单实体"><a href="#使用注解映射单实体" class="headerlink" title="使用注解映射单实体"></a><font size="5" color="#ff0000">使用注解映射单实体</font></h2><p>User.java类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span><span class="comment">//声明一个实体类。</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"USER"</span>)<span class="comment">//为实体类指定对应的数据库表</span></span><br><span class="line"><span class="meta">@DynamicInsert</span>(<span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@DynamicUpdate</span>(<span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span>                       <span class="comment">//声明实体类的OID属性</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(generator=<span class="string">"my_gen"</span>)<span class="comment">//声明OID的生成策略</span></span><br><span class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"my_gen"</span>, strategy = <span class="string">"increment"</span>)<span class="comment">//使用Hibernate提供的生成策略</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="meta">@Column</span>(name=<span class="string">"USERNAME"</span>, insertable=<span class="keyword">true</span>)</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="meta">@Access</span>(AccessType.FIELD)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@Formula</span>(value = <span class="string">"(select sum(o.price) from orders as o where o.userid=id)"</span>)<span class="comment">//查询语句</span></span><br><span class="line">    <span class="keyword">private</span> Double totalPrice;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getTotalPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> totalPrice;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotalPrice</span><span class="params">(Double totalPrice)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.totalPrice = totalPrice;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@Column(name=”columnName”) ：将属性映射到列。<br></p><ol><li>name=”columnName”    字段名称；<br></li><li>unique=false            是否在该字段上设置唯一约束；<br></li><li>nullable=true            字段是否能为空；<br></li><li>insertable=true        控制 insert语句；<br></li><li>updatable=true        控制 update语句；<br></li><li>length=255            指定字段长度。<br></li></ol><p>@Access(AccessType.PROPERTY)：<br></p><ol><li>通过 getter 和 setter 方法访问实体类的属性；<br></li><li>需要在 getter 方法上定义字段的属性。<br></li></ol><p>@Access(AccessType.FIELD)：<br></p><ol><li>直接访问实体类的属性，可以不定义 getter 和 setter 方法，但是需要将变量定义为public；<br></li><li>需要在变量上定义字段的属性。<br></li></ol><p>@Formula：将属性映射到SQL语句。<br><br><code>@Formula(value = &quot;(select sum(o.price) from                 orders as o where o.userid=id)&quot;)</code></p><p>@DynamicInsert：动态生成 INSERT 语句。<br></p><p>@DynamicUpdate：动态生成 UPDATE 语句。<br></p><h2 id="使用注解和xml方式的区别："><a href="#使用注解和xml方式的区别：" class="headerlink" title="使用注解和xml方式的区别："></a><font color="#0000FF" size="10">使用注解和xml方式的区别：</font></h2><ol><li><p><font color="#0000FF" size="4">hibernate.hbm.xml 文件中把引用：xxx.hbm.xml改为引用实体类：</font>即把：&lt;mapping resource=”com/db/entity/Person.hbm.xml”/&gt;改为：&lt;mapping class=”com.db.entity.Person” /&gt;</p></li><li><p><font color="#0000FF" size="4">注解方式不需要在xxx.hbm.xml把实体类与表进行映射。而采用在实体类中进行注解。</font></p><ol><li>实体类属性注解的时候，都注解在<font color="#ff0000">get方法前</font></li><li>如果在实体类中某些属性不注解：（属性和get都不写注解），默认为表字段名与实体类属性名一致。</li><li>如果实体类的某个成员属性不需要存入数据库中，使用@Transient 进行注解就可以了。即类似于：(xxx.hbm.Xml配置中的某些字段不写(就是不需要对这个成员属性进行映射))</li><li>表名称可以在实体类前进行注解。</li><li>所有这些注解在：javax.persistence包下。而不是在hibernate包中。</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hibernate的单实体映射&quot;&gt;&lt;a href=&quot;#Hibernate的单实体映射&quot; class=&quot;headerlink&quot; title=&quot;Hibernate的单实体映射&quot;&gt;&lt;/a&gt;Hibernate的单实体映射&lt;/h1&gt;&lt;h2 id=&quot;单实体的属性映射&quot;&gt;&lt;a href=&quot;#单实体的属性映射&quot; class=&quot;headerlink&quot; title=&quot;单实体的属性映射&quot;&gt;&lt;/a&gt;&lt;font size=&quot;5&quot; color=&quot;#ff0000&quot;&gt;单实体的属性映射&lt;/font&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;setter 和 getter 方法优点：有效控制属性的访问权限。&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;property元素的 access 属性；field : 不需要getset方法，通过Java反射机制绕过hibernate直接访问属性值。&lt;br&gt;&lt;code&gt;&amp;lt;property name=&amp;quot;userName&amp;quot; access=&amp;quot;field&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实体映射技巧：实体类属性与表字段不对称时，可以在 setter 和 getter 方法中加入程序逻辑&lt;br&gt;&lt;br&gt; 例：User 类中没有 username 属性，而是改为了 firstName 和 lastName 两个属性&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getUserName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; firstName + &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; + lastName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUserName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String userName)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		String[] strName = userName.split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.firstName = strName[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.lastName = strName[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>1.Hibernate框架的搭建</title>
    <link href="http://yoursite.com/2020/02/25/1-Hibernate%E6%A1%86%E6%9E%B6%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2020/02/25/1-Hibernate%E6%A1%86%E6%9E%B6%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2020-02-25T04:06:04.000Z</published>
    <updated>2020-03-03T01:09:54.619Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hibernate框架的搭建"><a href="#Hibernate框架的搭建" class="headerlink" title="Hibernate框架的搭建"></a>Hibernate框架的搭建</h1><a id="more"></a><h2 id="三层体系结构"><a href="#三层体系结构" class="headerlink" title="三层体系结构"></a>三层体系结构</h2><p><img src="/2020/02/25/1-Hibernate%E6%A1%86%E6%9E%B6%E7%9A%84%E6%90%AD%E5%BB%BA/three-layer_architecture.png" alt></p><ol><li>定义：将系统的组件<strong>分隔到不同的层</strong>中，每一层中的组件应保持内聚性； 每一层都应与它下面的各层保持松散耦合。<br></li><li>层与层之间存在自上而下的<strong>依赖关系</strong>，即上层组件会访问下层组件的API，而下层组件不应该依赖上层组件。<br></li><li>每个层对上层<strong>公开AP</strong>I，但具体的实现细节对外透明。当某一层的实现发生变化，只要它的API不变，不会影响其他层的实现。</li><li>持久层：将数据访问细节和业务逻辑分开（也就是在业务逻辑层和数据库层新添持久层）</li><li>持久化：将程序数据在瞬时状态和持久化状态之间转换的机制<ol><li>瞬时状态：保存在内存中的数据</li><li>持久状态：保存在数据库（磁盘）的程序数据</li></ol></li><li>持久层的作用：为业务逻辑层提供面向对象的API，<strong><em>使业务逻辑层可以专注于实现业务逻辑</em></strong></li><li>持久层的目标：<ol><li>代码可重用性高，能够完成对象持久化操作；</li><li>支持多种数据库平台；</li><li>具有相对独立性，当持久层发生变化时，不会影响上层实现。</li></ol></li><li>Hibernate是持久化层框架。</li></ol><h2 id="软件的模型及ORM"><a href="#软件的模型及ORM" class="headerlink" title="软件的模型及ORM"></a>软件的模型及ORM</h2><p><strong>不同类型的模型：</strong></p><p>分析阶段–创建概念模型<br><br>设计阶段–域模型（面向对象）和数据模型（面向关系）——形成<strong>对象关系映射（ORM）</strong></p><p>通过ORM模式在操作实体对象的时候，就不需要再去和复杂的 SQL语句打交道，只需简单的操作实体对象的属性和方法</p><h2 id="Hibernate介绍"><a href="#Hibernate介绍" class="headerlink" title="Hibernate介绍"></a>Hibernate介绍</h2><ol><li>在分层体系结构中Hibernate位于持久化层，是完成对象持久化的持久化层框架；<br></li><li>Hibernate是连接Java应用程序和关系型数据库的框架，能够建立对象模型和关系数据模型之间的映射，是一种自动ORM框架；<br></li><li>Hibernate是对JDBC API的封装，是JDBC轻量级封装框架。<br></li></ol><h2 id="第一个Hibernate程序"><a href="#第一个Hibernate程序" class="headerlink" title="第一个Hibernate程序"></a>第一个Hibernate程序</h2><h3 id="1-安装Eclipse、Mysql；"><a href="#1-安装Eclipse、Mysql；" class="headerlink" title="1.安装Eclipse、Mysql；"></a>1.安装Eclipse、Mysql；</h3><h3 id="2-下载Hibernate，并解压缩-获得jar包；"><a href="#2-下载Hibernate，并解压缩-获得jar包；" class="headerlink" title="2.下载Hibernate，并解压缩,获得jar包；"></a>2.下载Hibernate，并解压缩,获得jar包；</h3><h3 id="3-使用Eclipse创建新的项目；"><a href="#3-使用Eclipse创建新的项目；" class="headerlink" title="3.使用Eclipse创建新的项目；"></a>3.使用Eclipse创建新的项目；</h3><h3 id="4-引入Hibernate及其依赖库（jar包）；"><a href="#4-引入Hibernate及其依赖库（jar包）；" class="headerlink" title="4.引入Hibernate及其依赖库（jar包）；"></a>4.引入Hibernate及其依赖库（jar包）；</h3><h3 id="5-引入Mysql数据库驱动包；"><a href="#5-引入Mysql数据库驱动包；" class="headerlink" title="5.引入Mysql数据库驱动包；"></a>5.引入Mysql数据库驱动包；</h3><h3 id="6-编写Hibernate配置文件-hibernate-cfg-xml-；"><a href="#6-编写Hibernate配置文件-hibernate-cfg-xml-；" class="headerlink" title="6.编写Hibernate配置文件(hibernate.cfg.xml)；"></a>6.<font color="#FF0000" size="5">编写Hibernate配置文件(hibernate.cfg.xml)；</font></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">hibernate-configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Hibernate/Hibernate Configuration DTD 3.0//EN"</span> <span class="meta-string">"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.dialect"</span>&gt;</span>org.hibernate.dialect.MySQLDialect<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.driver_class"</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.url"</span>&gt;</span>jdbc:mysql://localhost:3306/test<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.characterEncoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.username"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.connection.password"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.format_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">"com/hibernate/entity/Customer.hbm.xml"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-创建Java持久化类XXX-java；"><a href="#7-创建Java持久化类XXX-java；" class="headerlink" title="7. 创建Java持久化类XXX.java；"></a>7. <font color="#FF0000" size="5">创建Java持久化类XXX.java；</font></h3><p><em>持久化类与数据库之间是一一对应关系</em><br><br><em>Custom.java文件：</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> sex;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="comment">/*set，get方法*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-编写持久化类的映射配置文件XXX-hbm-xml；"><a href="#8-编写持久化类的映射配置文件XXX-hbm-xml；" class="headerlink" title="8. 编写持久化类的映射配置文件XXX.hbm.xml；"></a>8. <font color="#FF0000" size="5">编写持久化类的映射配置文件XXX.hbm.xml；</font></h3><p>Customer.hbm.xml文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE hibernate-mapping PUBLIC &quot;-&#x2F;&#x2F;Hibernate&#x2F;Hibernate Mapping DTD 3.0&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;hibernate.sourceforge.net&#x2F;hibernate-mapping-3.0.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;hibernate-mapping package&#x3D;&quot;com.hibernate.entity&quot;&gt;</span><br><span class="line">&lt;class name&#x3D;&quot;Customer&quot; table&#x3D;&quot;customer&quot;&gt;</span><br><span class="line">&lt;id name&#x3D;&quot;id&quot; type&#x3D;&quot;int&quot; column&#x3D;&quot;id&quot;&gt;</span><br><span class="line">&lt;generator class&#x3D;&quot;native&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;id&gt;</span><br><span class="line"></span><br><span class="line">&lt;property name&#x3D;&quot;name&quot; not-null&#x3D;&quot;true&quot; type&#x3D;&quot;java.lang.String&quot; column&#x3D;&quot;name&quot; &#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;sex&quot; type&#x3D;&quot;int&quot; column&#x3D;&quot;sex&quot; &#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;age&quot; type&#x3D;&quot;int&quot; column&#x3D;&quot;age&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;class&gt;</span><br><span class="line">&lt;&#x2F;hibernate-mapping&gt;</span><br></pre></td></tr></table></figure><h4 id="介绍配置文件"><a href="#介绍配置文件" class="headerlink" title="介绍配置文件"></a>介绍配置文件</h4><ol><li><p>class元素指定类与表之间的映射</p><ol><li>name：类名</li><li>table：对应的表名</li></ol></li><li><p>id子元素设定持久化类的OID和表的主键的映射关系</p><ol><li>column：指定表字段的名称</li><li>generator：元素指定OID的生成器<ol><li>increment：采用 Hibernate 数值递增的方式；（不适合集群情况）</li><li>identity：采用数据库提供的自增长方式；（需设置数据库自增字段）</li><li>assigned：主键由应用逻辑产生；（自个设置ID）</li><li>native：自动选择合适的标识符生成器；</li></ol></li></ol></li><li><p>property 子元素设定类的其他属性和表的字段的映射关系</p><ol><li>name：对应类的属性名称；</li><li>type：指定属性的类型；</li><li>column：指定表字段的名称；</li><li>not-null：指定属性是否允许为空。</li></ol></li><li><p><font color="#FF0000" size="5">使用Hibernate API 完成对象的持久化。</font><br></p></li></ol><h4 id="HibernateUtil工具类"><a href="#HibernateUtil工具类" class="headerlink" title="HibernateUtil工具类"></a>HibernateUtil工具类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">public class HibernateUtil &#123;</span><br><span class="line">&#x2F;&#x2F;SessionFactory是线程安全的，多个应用线程间进行共享，一般整个应用有且只有一个SessionFactory</span><br><span class="line">private static SessionFactory sessionFactory &#x3D; null;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 静态初始化 Hibernate：创建 StandardServiceRegistry 实例（标准注册服务）</span><br><span class="line"> *&#x2F;</span><br><span class="line">static &#123;</span><br><span class="line">StandardServiceRegistry registry &#x3D; new StandardServiceRegistryBuilder()&#x2F;&#x2F;创建 StandardServiceRegistryBuilder 实例（标准注册服务生成器）</span><br><span class="line">.configure()&#x2F;&#x2F;从 hibernate.cfg.xml 配置文件中读取配置信息</span><br><span class="line">.build();&#x2F;&#x2F;构建 StandardServiceRegistry实例（标准注册服务）</span><br><span class="line">try &#123;</span><br><span class="line">&#x2F;&#x2F; 2 创建 SessionFactory 实例（会话工厂）</span><br><span class="line">&#x2F;&#x2F; 2.1 根据标准注册服务创建一个 MetadataSources 实例（元数据资源集）</span><br><span class="line">&#x2F;&#x2F; 2.2 构建元数据</span><br><span class="line">&#x2F;&#x2F; 2.3 生成SessionFactory 实例（会话工厂）</span><br><span class="line">sessionFactory &#x3D; new MetadataSources(registry)</span><br><span class="line">.buildMetadata().buildSessionFactory();</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">&#x2F;&#x2F; 2.4 创建失败手动释放 StandardServiceRegistry</span><br><span class="line">StandardServiceRegistryBuilder.destroy(registry);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public static SessionFactory getSessionFactory() &#123;</span><br><span class="line">return sessionFactory;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void closeSessionFactory() &#123;</span><br><span class="line">sessionFactory.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试类test-java"><a href="#测试类test-java" class="headerlink" title="测试类test.java"></a>测试类test.java</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Session session &#x3D; HibernateUtil.getSessionFactory().openSession();&#x2F;&#x2F;打开Session</span><br><span class="line">Transaction tx &#x3D; session.beginTransaction();&#x2F;&#x2F;开始一个事务</span><br><span class="line">Customer customer &#x3D; new Customer();&#x2F;&#x2F;创建需要持久化的对象</span><br><span class="line">customer.setName(&quot;胡宗南&quot;);</span><br><span class="line">customer.setSex(2);</span><br><span class="line">customer.setAge(30);</span><br><span class="line">session.save(customer); &#x2F;&#x2F;保存</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;Customer customer2&#x3D;session.get(Customer.class, new Integer(1));&#x2F;&#x2F;查询</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;customer2.setName(&quot;李四&quot;);&#x2F;&#x2F;修改</span><br><span class="line">&#x2F;&#x2F;session.update(customer2);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;session.delete(customer2);&#x2F;&#x2F;删除</span><br><span class="line"></span><br><span class="line">tx.commit();&#x2F;&#x2F;提交事务</span><br><span class="line">session.close();关闭 Session,SessionFactory</span><br><span class="line">HibernateUtil.closeSessionFactory();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hibernate框架的搭建&quot;&gt;&lt;a href=&quot;#Hibernate框架的搭建&quot; class=&quot;headerlink&quot; title=&quot;Hibernate框架的搭建&quot;&gt;&lt;/a&gt;Hibernate框架的搭建&lt;/h1&gt;
    
    </summary>
    
    
      <category term="hibernate" scheme="http://yoursite.com/categories/hibernate/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
